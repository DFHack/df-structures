<data-definition>
    <struct-type type-name='resource_allotmentst'>
        <int32_t name="production_zone_index"/>
        <enum name="allotment" type-name='resource_allotment_specifier_type'/>
        <int32_t name="special_controlling_entity_id"/>
        <stl-vector name="count" type-name='int32_t'/>
    </struct-type>

    <struct-type type-name='resource_pilest'>
        <int32_t name="id"/>

        <stl-vector name="allotment" pointer-type='resource_allotmentst'/>

        <stl-vector name="allotment_stone" pointer-type='resource_allotmentst' comment='optional'/>
        <stl-vector name="allotment_food" pointer-type='resource_allotmentst' comment='optional'/>
        <stl-vector name="allotment_crop" pointer-type='resource_allotmentst' comment='optional'/>
    </struct-type>

    <enum-type type-name="world_population_type"> bay12: WilderPopTypes
        <enum-item name='Animal' comment='ROAMING'/>
        <enum-item name='Vermin'/>
        <enum-item name='Unused3'/>
        <enum-item name='VerminInnumerable' comment='SOIL'/>
        <enum-item name='ColonyInsect' comment='SOIL_COLONY'/>
        <enum-item name='Tree'/>
        <enum-item name='Grass'/>
        <enum-item name='Bush'/>
        <enum-item name='Unused9'/>
    </enum-type>

    <struct-type type-name='world_population_ref' original-name='regionpopinfost'>
        <int16_t name="region_x"/>
        <int16_t name="region_y"/>
        <int16_t name="feature_idx" init-value="-1"/>

        <int32_t name='cave_id' ref-target='world_underground_region'/>

        <int32_t name='site_id' ref-target='world_site'/>

        <int32_t name="population_idx">
            <code-helper name='refers-to'>
                (let* ((info $$._global)
                       (wdata $global.world.world_data)
                       (x $info.region_x)
                       (y $info.region_y)
                       (reg (or (when (/= $info.feature_idx -1)
                                  (let* ((rip $wdata.feature_map[(floor x 16)][(floor y 16)])
                                         (flst $rip.features.feature_init[(logand x 15)][(logand y 15)]))
                                    $flst[$info.feature_idx].feature))
                                (awhen $info.cave_id.ref-target
                                  $it.feature_init.feature)
                                (find-instance $world_region ;
                                               $wdata.region_map[x][y].region_id))))
                  $reg.population[$])
            </code-helper>
        </int32_t>

        <enum base-type='int16_t' name='depth' type-name='layer_type' comment="Doesn't look correct. See -1, 0, 41, 172, 508, and 686 with critters visible in all caverns. Some dead, but the dorf on the surface isn't"/>
    </struct-type>

    <struct-type type-name='local_population' original-name='wilderpopst'>
        <enum base-type='int8_t' name='type' type-name='world_population_type'/>

        <compound is-union='true'>
            <int16_t name="race" ref-target='creature_raw'/>
            <int16_t name="plant" ref-target='plant_raw'/>
        </compound>

        <int32_t name="quantity"/>
        <int32_t name="quantity_max" since='v0.40.01'/>

        <bitfield name='flags' base-type='uint8_t'> bay12: WILDERPOPFLAG_*
            <flag-bit name='discovered'/>
            <flag-bit name='extinct'/>
            <flag-bit name='already_removed' comment='no longer in world.populations'/>
            <flag-bit name='need_offload'/>
        </bitfield>

        <compound name='population' type-name='world_population_ref'/>

        <int32_t name="breed" ref-target='breed'/>
        <int32_t name='interaction_idx' init-value='-1'/>
        <int32_t name='interaction_instance' init-value='-1'/>
        <int32_t name='interaction_effect' init-value='-1'/>
    </struct-type>

    <struct-type type-name='world_population' original-name='regionpopst'>
        <enum base-type='int16_t' name='type' type-name='world_population_type'/>

        <compound is-union='true'>
            <int16_t name="race" ref-target='creature_raw'/>
            <int16_t name="plant" ref-target='plant_raw'/>
        </compound>

        <int32_t name="count_min" init-value='10000001'/>
        <int32_t name="count_max" init-value='10000001'/>

        <int32_t name='temp_num' init-value='0' since='v0.40.01'/>

        <int32_t name="owner" ref-target='historical_entity'/>
        <int32_t name="breed" ref-target='breed'/>
        <int32_t name="production_zone" init-value='-1'/>

        <int32_t name='interaction_idx' init-value='-1' since='v0.34.01'/>
        <int32_t name='interaction_instance' init-value='-1' since='v0.34.01'/>
        <int32_t name='interaction_effect' init-value='-1' since='v0.47.01'/>
    </struct-type>

    <struct-type type-name='world_region_feature' original-name='feature_square_infost'>
        <int16_t name='feature_idx'>
            <code-helper name='refers-to'>
                (let* ((info $$._parent._parent._global)
                       (wdata $global.world.world_data)
                       (x $info.pos.x)
                       (y $info.pos.y))
                  (when (/= $ -1)
                    (let* ((rip $wdata.feature_map[(floor x 16)][(floor y 16)])
                           (flst $rip.features.feature_init[(logand x 15)][(logand y 15)]))
                      $flst[$])))
            </code-helper>
        </int16_t>
        <int32_t name="layer" ref-target='world_underground_region'/>
        <int32_t name="region_tile_idx">
            <code-helper name='describe'>
                (let ((l $$._parent.layer.ref-target))
                  (when l
                    (list (fmt "(~A,~A)-(~A:~A)"
                               $l.region_coords.x[$] $l.region_coords.y[$]
                               $l.region_min_z[$] $l.region_max_z[$]))))
            </code-helper>
        </int32_t>
        <int16_t name='min_z'/>
        <int16_t name='max_z'/>

        <int16_t name='zup_x'/>
        <int16_t name='zup_y'/>
        <int16_t name='zdown_x'/>
        <int16_t name='zdown_y'/>

        <int16_t name='left_y1'/>
        <int16_t name='left_y2'/>
        <int16_t name='right_y1'/>
        <int16_t name='right_y2'/>

        <int16_t name='up_x1'/>
        <int16_t name='up_x2'/>
        <int16_t name='down_x1'/>
        <int16_t name='down_x2'/>

        <int8_t name='u_flow'/>
        <int8_t name='d_flow'/>
        <int8_t name='l_flow'/>
        <int8_t name='r_flow'/>

        <uint32_t name="seed"/>
        <df-flagarray name="flag"/>

        <int16_t name='left_z_min'/>
        <int16_t name='left_z_max'/>
        <int16_t name='right_z_min'/>
        <int16_t name='right_z_max'/>

        <int16_t name='up_z_min'/>
        <int16_t name='up_z_max'/>
        <int16_t name='down_z_min'/>
        <int16_t name='down_z_max'/>

        <enum type-name='tile_liquid' name='liquid_type'/>
        <int16_t name='liquid_upper_filled_z'/>
        <int16_t name='openness'/>
        <int16_t name='passage_density'/>
        <static-array count='2' type-name='int16_t' name='vertical_connection'/>

        <enum name="top_layer_idx" type-name='layer_type' base-type='int16_t'
                    comment='topmost cave layer the feature reaches'/>
    </struct-type>

    <struct-type type-name='world_region_details' original-name='region_midmapst'>
        <static-array count='17' name='biome'>
            <static-array type-name='int8_t' count='17'
                          comment='lower 4 bits: biome 1..9; |=0x30 if fort'/>
            <comment>biome field reference:
                789
                456
                123
                as directions, with 5 = own world tile, 1 = SW, 9 = NE, etc.</comment>
        </static-array>
        <static-array count='17' name='elevation'>
            <static-array type-name='int16_t' count='17'/>
        </static-array>

        <static-array count='16' name='seed' comment='looks random'>
            <static-array type-name='uint32_t' count='16'/>
        </static-array>

        <compound name='edges'>
            <comment>
                In order to determine how biomes cross embark tile edges,
                the rectangle framing an embark tile is split into 4 corners,
                and 4 straight edge segments, using ranges measured in tiles:

                +-/----/+
                |       /
                /   *   |
                /       /
                +-/-/---+

                After this, each corner and edge segment is assigned the biome
                of one of the adjoining 4 or 2 embark tiles, based on the values
                in these arrays. It may be necessary to access adjacent details
                objects to collect the full outline:

                c11 x11 | c21
                y11 *** | y21
                -------------
                c12 x12 | c22

                There are also certain rules forcing ocean/lake biomes to lose
                edges to mountains, and both of them to anything else, no matter
                what the original array value is. The actual biomes for tiles in
                the frame are semi-randomly interpolated from this edge spec.

                For some reason DF provides for all edges of all mid level tiles
                in a world tile, but not for the corners on the south and east
                edges: for these you have to go to the next world tile.
                This has some effect on the corners on the south and east edges of
                the world where there are no adjacent tiles to get the data from.
                There the rules are static: the biomes of corners are taken from
                the easternmost and southernmost of the two touching corners.

                The rules for corner determination when the biome_corner field has
                specified a biome that's specified to yield as per the above seems
                to be to first take the NW corner (0), then the NE (1) one, and
                then the SW (2) one. If the selected corner doesn't exist (because
                it's outside of the world) the same fallback corner selection is
                used, with the exception of a northern row selection of NW (0),
                where the home corner (3) is selected.
            </comment>
            <static-array count='16' name='split_x'
                          comment='splits for horizontal edges, x=min y=max'>
                <static-array type-name='coord2d' count='17'/>
            </static-array>
            <static-array count='17' name='split_y'
                          comment='splits for vertical edges, x=min y=max'>
                <static-array type-name='coord2d' count='16'/>
           </static-array>

            <static-array name='biome_corner' count='16'
                          comment='0=Reference is NW, 1=Reference is N, 2=Reference is W, 3=Reference is current tile'>
                <static-array type-name='int8_t' count='16'/>
                <comment>
                    All 4 corners touching get the same reference (which determines the biome),
                    i.e. SE corner of the tile to the NW, SW corner of the tile to the
                    N, NE corner of the tile to the W, and the NW corner of the current
                    tile, as directed by the biome_corner value.
                </comment>
            </static-array>
            <static-array name='biome_x' count='16' comment='0=Reference is N, 1=Reference is current tile (adopted by S edge to the N)'>
                <static-array type-name='int8_t' count='16'/>
            </static-array>
            <static-array name='biome_y' count='16' comment='0=Reference is W, 1=Reference is current tile (Adopted by E edge to the W)'>
                <static-array type-name='int8_t' count='16'/>
            </static-array>
        </compound>

        <code-helper name='describe'> (describe-obj $.pos) </code-helper>

        <compound name='pos' type-name='coord2d'/>
        <compound name='ocean_beach_comp' comment='ocean_beach_compst'>
            <int16_t name='soil_freq'/>
            <int16_t name='pebble_freq'/>
            <int16_t name='solid_rock_freq'/>
            <int16_t name='boulder_freq'/>
            <int16_t name='driftwood_freq'/>
        </compound>

        -- Rivers crossing embark tile edges
        <compound name='rivers_vertical'>
            <static-array name='x_min' count='16'>
                <static-array type-name='int16_t' count='17'/>
            </static-array>
            <static-array name='x_max' count='16'>
                <static-array type-name='int16_t' count='17'/>
            </static-array>
            <static-array name='active' count='16'>
                <static-array type-name='int8_t' count='17'/>
            </static-array>
            <static-array name='elevation' count='16'>
                <static-array type-name='int16_t' count='17'/>
            </static-array>
        </compound>

        <compound name='rivers_horizontal'>
            <static-array name='y_min' count='17'>
                <static-array type-name='int16_t' count='16'/>
            </static-array>
            <static-array name='y_max' count='17'>
                <static-array type-name='int16_t' count='16'/>
            </static-array>
            <static-array name='active' count='17'>
                <static-array type-name='int8_t' count='16'/>
            </static-array>
            <static-array name='elevation' count='17'>
                <static-array type-name='int16_t' count='16'/>
            </static-array>
        </compound>

        <static-array name='other_features' count='16'>
            <static-array count='16'>
                <bitfield name='flags' base-type='uint8_t'>
                    <flag-bit name='construction' comment="the MLTs of world_data.constructions.all"/>
                    <flag-bit name='minor_site_footprint' comment="MLTs with sites other than MountainHall, DarkFortress, ForestRetreat, Town"/>
                    <flag-bit name='river' comment="Only a very small subset (selection criteria unknown), but the MLTs marked match up with Rivers* tiles plus implicit River tiles interpolated from that"/>
                </bitfield>
            </static-array>
        </static-array>

        <static-array count='16' name='features'>
            <static-array count='16'>
                <stl-vector pointer-type='world_region_feature'/>
            </static-array>
        </static-array>

        <int16_t name='lava_stone' ref-target='inorganic_raw'/>

        <static-array count='48' name='site_map_travel_dir' since='v0.40.01'><static-array count='48' type-name='uint8_t'/></static-array>

        <static-array count='16' name='temp_elevation'>
            <static-array type-name='int16_t' count='16'/>
        </static-array>
        <static-array count='16' name='temp_path_map'>
            <static-array type-name='int32_t' count='16'/>
        </static-array>

        <int16_t name='site_finder_x1'/>
        <int16_t name='site_finder_x2'/>
        <int16_t name='site_finder_y1'/>
        <int16_t name='site_finder_y2'/>
    </struct-type>

    <enum-type type-name='region_weather_type' base-type='int32_t'> bay12: RegionWeatherType
        <enum-item name='CreepingGas'/>
        <enum-item name='CreepingVapor' comment="doesn't seem to be generated by DF, but appears if hacked"/>
        <enum-item name='CreepingDust'/>
        <enum-item name='FallingMaterial' comment="a.k.a. rain, both blood and syndrome, but not regular"/>
    </enum-type>

    <struct-type type-name='region_weather' key-field='id' instance-vector='$global.world.world_data.region_weather' original-name='region_weatherst' comment="only evil weather, not the regular kind">
        <int32_t name='id'/>
        <enum name='type' type-name='region_weather_type' comment="Creeping Gas/Vapor/Dust='cloud' below, FallingMaterial='rain'"/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <bitfield name='flags' base-type='uint8_t'> bay12: REGION_WEATHER_FLAG_*
            <flag-bit name='announced'/>
        </bitfield>
        <int32_t name='region_x' comment="world tile, used with evil rain. Probably uninitialized with cloud"/>
        <int32_t name='region_y' comment="world tile, used with evil rain. Probably uninitialized with cloud"/>
        <int32_t name='world_in_game_x' init-value='-30000' comment="used with evil clouds, indicating global in-game coordinates"/>
        <int32_t name='world_in_game_y' init-value='-30000' comment="used with evil clouds, indicating global in-game coordinates"/>
        <int32_t name='world_in_game_z' init-value='-30000' comment="probably never used, as weather appears on the surface"/>
        <int32_t name='cloud_x_movement' comment="-1/0/1, indicating the movement per 10 ticks in X direction. Uninitialized for rain"/>
        <int32_t name='cloud_y_movement' comment="-1/0/1, indicating the movement per 10 ticks in Y direction. Uninitialized for rain"/>
        <int32_t name='remaining_duration' comment="ticks down 1 every 10 ticks. Removed some time after reaching 0. Cloud duration seems to start with a fairly large, but somewhat random value"/>
        <int32_t name='region_id' ref-target='world_region' comment="Set for clouds, -1 for rain"/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
