<data-definition>
    <bitfield-type type-name='scrollbar_display_flag' base-type='uint8_t'> bay12: SCROLLBAR_DISPLAY_FLAG_*
        <flag-bit name='basic_set'/>
    </bitfield-type>

    <enum-type type-name='tooltip_type' base-type='int8_t'> bay12: TooltipType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='REPLACE_MINIMAP'/>
        <enum-item name='ABOVE'/>
        <enum-item name='BELOW'/>
    </enum-type>

    <struct-type type-name='scrollbarst'>
        <int32_t name='sel'/>
        <int32_t name='sel_min'/>
        <int32_t name='sel_max'/>
        <int32_t name='page_size'/>
        <int32_t name='print_sy'/>
        <int32_t name='print_ey'/>

        <int32_t name='scroller_sy'/>
        <int32_t name='scroller_ey'/>
    </struct-type>

    <struct-type type-name='extentst'>
        <int32_t name='x1'/>
        <int32_t name='y1'/>
        <int32_t name='x2'/>
        <int32_t name='y2'/>
    </struct-type>

    <class-type type-name='abstract_interfacest'>
        <virtual-methods>
            <vmethod name='get_rect' ret-type='extentst'/>
            <vmethod name='feed'>
                <pointer name='events'><stl-set type-name='interface_key'/></pointer>
            </vmethod>
            <vmethod name='logic'/>
            <vmethod name='render'> <uint32_t name='curtick'/> </vmethod>
            <vmethod name='arrange' since='v50.10'/>
            <vmethod name='remove_child'>
                <pointer name='w'/>
            </vmethod>
            <vmethod name='clear'/>
        </virtual-methods>
    </class-type>

    <bitfield-type type-name='widget_flag' base-type='uint8_t'> bay12: WidgetFlag
        <flag-bit name='VISIBILITY_ACTIVE'/>
        <flag-bit name='VISIBILITY_VISIBLE'/> plus ACTUALLY_VISIBLE for both of the above
        <flag-bit name='CAN_KEY_ACTIVATE'/>
        <flag-bit name='GLOBAL_POSITIONING'/>
    </bitfield-type>

    -- Unused: Side
    -- Unused: LayoutPreset

    <class-type type-name='widget' original-name='widgets::widget' inherits-from='abstract_interfacest'>
        <pointer name='parent' type-name='abstract_interfacest'/>
        <compound type-name='extentst' name='rect'/>
        <stl-vector name='custom_feed'> <stl-function/> </stl-vector>
        <stl-vector name='custom_logic'> <stl-function/> </stl-vector>
        <stl-vector name='custom_render'> <stl-function/> </stl-vector>
        <stl-vector name='custom_activated'> <stl-function/> </stl-vector>
        <stl-string name='name'/>
        <bitfield name='flag' type-name='widget_flag'/>
        <int32_t name='offset_bottom'/>
        <int32_t name='offset_left'/>
        <int32_t name='offset_right'/>
        <int32_t name='offset_top'/>
        <s-float name='anchor_top'/>
        <s-float name='anchor_bottom'/>
        <s-float name='anchor_left'/>
        <s-float name='anchor_right'/>
        <int32_t name='min_w'/>
        <int32_t name='min_h'/>
        <stl-variant name='tooltip' raw-type='std::string, std::function&lt;void()&gt;'/>
        <enum name='tooltip_type' type-name='tooltip_type'/>
        <bool name='displaying_tooltip'/>
        <stl-string name='search_string'/>
        <stl-set name='activation_hotkeys' type-name='interface_key'/>

        <virtual-methods>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='widget_character' original-name='widgets::character' inherits-from='widget'>
        <int8_t name='c'/>
        <int16_t name='fg'/>
        <int16_t name='bg'/>
        <bool name='bright'/>
        <uint32_t name='flag'/>
    </class-type>

    <class-type type-name='widget_text' original-name='widgets::text' inherits-from='widget'>
        <stl-string name='str'/>
        <int16_t name='fg'/>
        <int16_t name='bg'/>
        <bool name='bright'/>
        <enum type-name='justification' name='just'/>
        <int32_t name='space'/>
        <uint32_t name='flag'/>
    </class-type>

    <bitfield-type type-name='widget_truncate_mode' base-type='int32_t'> bay12: TRUNCATE_MODE_*
        <flag-bit name='abbreviate'/>
        <flag-bit name='ellipses'/>
    </bitfield-type>

    <class-type type-name='widget_text_truncated' original-name='widgets::text_truncated' inherits-from='widget_text'>
        <stl-string name='original_str'/>
        <bitfield name='truncate_mode_flags' base-type='int32_t' type-name='widget_truncate_mode'/>
    </class-type>

    <class-type type-name='widget_text_multiline' original-name='widgets::text_multiline' inherits-from='widget_text'/>

    <class-type type-name='widget_nineslice' original-name='widgets::nineslice' inherits-from='widget'>
        <pointer type-name='int32_t' name='selected_texpos'/>
        <bitfield type-name='override_tile_type' name='flag' init-value='override_tile_type::mask_OVERRIDE_CHAR'/>
    </class-type>

    <class-type type-name='widget_nineslice_horizontal' original-name='widgets::nineslize_horizontal' inherits-from='widget_nineslice'/>

    <class-type type-name='widget_anchored_tile' original-name='widgets::anchored_tile' inherits-from='widget_nineslice'>
        <long name='texp'/>
        <long name='offset_x'/>
        <long name='offset_y'/>
        <bool name='use_color'/>
    </class-type>

    <class-type type-name='widget_keybinding_display' original-name='widgets::keybinding_display' inherits-from='widget'>
        <int32_t name='binding'/>
    </class-type>

    <class-type type-name='widget_graphics_switcher' original-name='widgets::graphics_switcher' inherits-from='widget'>
        <stl-shared-ptr type-name='widget' name='graphics_widget'/>
        <stl-shared-ptr type-name='widget' name='ascii_widget'/>
    </class-type>

    <class-type type-name='widget_container' original-name='widgets::container' inherits-from='widget'>
        <stl-map name='children_by_name' comment='std::map&lt;std::string,std::shared_ptr&lt;widget&gt;&gt;'/>
        <stl-vector name='children'>
            <stl-shared-ptr type-name='widget'/>
        </stl-vector>
    </class-type>

    <class-type type-name='widget_stack' original-name='widgets::widget_stack' inherits-from='widget_container'>
        <bitfield name='defer_flags' base-type='uint8_t'> bay12: WIDGET_STACK_DEFER_FLAG
            <flag-bit name='POP'/>
            <flag-bit name='BREAK_DOWN'/>
        </bitfield>
        <stl-shared-ptr type-name='widget' name='deferred_replacement'/>
    </class-type>

    <class-type type-name='widget_rows_container' original-name='widgets::rows_container' inherits-from='widget_container'>
        <int32_t name='padding'/>
    </class-type>

    <class-type type-name='widget_columns_container' original-name='widgets::columns_container' inherits-from='widget_container'>
        <int32_t name='padding'/>
    </class-type>

    <class-type type-name='widget_tabs' original-name='widgets::tabs' inherits-from='widget_container'>
        <size_t name='cur_idx'/>
        <stl-vector name='tab_labels' type-name='stl-string'/>
        <stl-vector name='rows' comment='actually std::pair of size_t, size_t'/>
        <enum name='tab_type'> bay12: TabType
            <enum-item name='DEFAULT'/>
            <enum-item name='SHORT'/>
            <enum-item name='SHORT_SUB'/>
            <enum-item name='SHORT_SUBSUB'/>
        </enum>
    </class-type>

    <class-type type-name='widget_scroll_rows' original-name='widgets::scroll_rows' inherits-from='widget_rows_container'>
        <int32_t name='scroll'/>
        <int32_t name='num_visible'/>
        <bool name='scrolling'/>
        <compound type-name='scrollbarst' name='scrollbar'/>
        <bitfield name='scrollbar_display_flags' type-name='scrollbar_display_flag' base-type='int8_t'/>
    </class-type>

    <class-type type-name='widget_radio_rows' original-name='widgets::radio_rows' inherits-from='widget'>
        <pointer type-name='widget' name='selected'/>
        <int32_t name='selected_idx' init-value='0'/>
        <compound type-name='widget_scroll_rows' name='rows'/>
        <stl-map name='select_callback' comment='std::map&lt;size_t, std::function&lt;void(widget *)&gt;&gt;'/>
    </class-type>

    <class-type type-name='widget_table' original-name='widgets::table' inherits-from='widget_container'>
        <stl-shared-ptr type-name='widget_columns_container' name='labels'/>
        <stl-shared-ptr type-name='widget_scroll_rows' name='entries'/>
        <stl-shared-ptr type-name='widget' name='key_display'/>
        <int32_t name='key_row'/>
        <int32_t name='key_col'/>
        <bool name='keyboard_controlled' init-value='true'/>
    </class-type>

    <class-type type-name='widget_params_container' original-name='widgets::params_container' inherits-from='widget_container'>
        <stl-shared-ptr type-name='widget_text' name='text'/>
        <stl-shared-ptr type-name='world_gen_param_valuest' name='param'/>
    </class-type>

    <class-type type-name='widget_interface_main_button' original-name='widgets::interface_main_button' inherits-from='widget'>
        <int32_t name='which_button'/>
    </class-type>

    <class-type type-name='widget_interface_small_button' original-name='widgets::interface_small_button' inherits-from='widget'>
        <int32_t name='which_button'/>
    </class-type>

    <class-type type-name='widget_interface_pets_livestock_button' original-name='widgets::interface_pets_livestock_button' inherits-from='widget'>
        <int32_t name='which_button'/>
    </class-type>

    <class-type type-name='widget_better_button' original-name='widgets::better_button' inherits-from='widget'>
        <stl-function name='display_string'> <stl-string/> </stl-function>
        <stl-function name='texpos'> <pointer type-name='int32_t'/> </stl-function>
        <stl-function name='callback'/>
        <stl-function name='check_truth'> <bool/> </stl-function>
    </class-type>

    <enum-type type-name='textbox_type'> bay12: TextboxType, no base type
        <enum-item name='FILTER'/>
        <enum-item name='NAME'/>
        <enum-item name='NONE'/>
    </enum-type>

    <class-type type-name='widget_textbox' original-name='widgets::textbox' inherits-from='widget'>
        <stl-string name='str'/>
        <bitfield name='flags' base-type='uint32_t' type-name='stringentry_flag'/>
        <stl-function name='callback' comment='arguments are textbox*'/>
        <int16_t name='fg'/>
        <int16_t name='bg'/>
        <int8_t name='bright'/>
        <int32_t name='maxlen'/>
        <enum type-name='textbox_type' name='textbox_type' init-value='FILTER'/>
    </class-type>

    <class-type type-name='widget_dropdown' original-name='widgets::dropdown' inherits-from='widget'>
        <size_t name='cur_selected'/>
        <stl-vector type-name='stl-string' name='options'/>
        <stl-function name='callback' comment='std::function&lt;void(size_t, dropdown *)&gt;'/>
        <bool name='open'/>
    </class-type>

    <class-type type-name='widget_folder' original-name='widgets::folder' inherits-from='widget'>
        <compound type-name='widget' name='open'/>
        <bool name='last_visible'/>
        <stl-unordered-map name='controlled_set' comment='std::unordered_set&lt;std::shared_ptr&lt;widget&gt;&gt;'/>
        <bool name='controlled_visible'/>
        <compound type-name='widget_text' name='label'/>
        <stl-weak-ptr type-name='widget_container'/>
    </class-type>

    <struct-type type-name='filter_entry'>
        <stl-shared-ptr type-name='widget_text' name='label'/>
        <stl-unordered-map name='filtered_set' comment='std::unordered_set&lt;std::shared_ptr&lt;widget&gt;&gt;'/>
    </struct-type>

    <class-type type-name='widget_filter' original-name='widgets::filter' inherits-from='widget'>
        <compound type-name='filter_entry' name='all_filter'/>
        <stl-vector type-name='filter_entry' name='filters'/>
        <int32_t name='filter_idx'/>
        <stl-weak-ptr type-name='widget_container' name='container_parent'/>
        <virtual-methods>
            <vmethod name='set_filtered'> <int32_t name='idx'/> </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='indiv_filter' original-name='widgets::multifilter::indiv_filter' inherits-from='widget_filter'/>

    <class-type type-name='multifilter' original-name='widgets::multifilter' inherits-from='widget'>
        <stl-vector name='filters'>
            <stl-shared-ptr type-name='indiv_filter'/>
        </stl-vector>
        <stl-weak-ptr type-name='widget_container' name='container_parent'/>
    </class-type>

    <struct-type type-name='widget_menu' original-name='widgets::menu'>
        <stl-map name='lines'/>
        <int32_t name='selection'/>
        <int32_t name='last_displayheight'/>
        <bool name='bleached'/>
        <stl-map name='colors'/>
    </struct-type>

    <enum-type type-name='interface_breakdown_types'> bay12: InterfaceBreakdownTypes, no base type
        <enum-item name='NONE'/>
        <enum-item name='QUIT'/>
        <enum-item name='STOPSCREEN'/>
        <enum-item name='TOFIRST'/>
    </enum-type>

    <class-type type-name='viewscreen' original-name='viewscreenst' inherits-from='abstract_interfacest' custom-methods='true'>
        <pointer name='child' type-name='viewscreen'/>
        <pointer name='parent' type-name='viewscreen'/>
        <enum base-type='int8_t' name='breakdown_level' type-name='interface_breakdown_types' init-value='NONE'/>
        <int8_t name='option_key_pressed'/>
        <compound type-name='widget_container' name='widgets'/>

        <virtual-methods>
            <vmethod name='resize'><int32_t name='w'/><int32_t name='h'/></vmethod>
            <vmethod name='set_port_flags'/>
            <vmethod is-destructor='true'/>
        </virtual-methods>

        <custom-methods>
            <cmethod name='feed_key'/>
        </custom-methods>
    </class-type>

</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
