<data-definition>
    <bitfield-type type-name="musical_form_feature" base-type="uint32_t"> bay12: MUSICAL_FLAG_*
        <flag-bit name='GlideFromNoteToNote' comment='Slides'/>
        <flag-bit name='UseGraceNotes'/>
        <flag-bit name='UseMordents'/>
        <flag-bit name='MakeTrills'/>
        <flag-bit name='PlayRapidRuns'/>
        <flag-bit name='LocallyImprovise' comment='Melisma'/>
        <flag-bit name='SpreadSyllablesOverManyNotes' comment='Syllabic'/>
        <flag-bit name='MatchNotesAndSyllables' comment='LocalImprovisation'/>

        <flag-bit name='Syncopate'/>
        <flag-bit name='AddFills'/>
        <flag-bit name='AlternateTensionAndRepose'/>
        <flag-bit name='ModulateFrequently'/>
        <flag-bit name='PlayArpeggios'/>
        <flag-bit name='PlayStaccato'/>
        <flag-bit name='PlayLegato'/>
        <flag-bit name='FreelyAdjustBeats'/>
    </bitfield-type>

    <enum-type type-name='musical_form_style' base-type='int32_t'> bay12: MusicalDynamicType
        <enum-item name='None' value='-1'/>

        -- tempo styles
        <enum-item name='FreeTempo'/>
        <enum-item name='VerySlow'/>
        <enum-item name='Slow'/>
        <enum-item name='WalkingPace'/>
        <enum-item name='ModeratelyPaced'/>
        <enum-item name='ModeratelyFast'/>
        <enum-item name='Fast'/>
        <enum-item name='VeryFast'/>
        <enum-item name='ExtremelyFast'/>
        <enum-item name='DoubleTempo' comment="twice the tempo of the last passage"/>
        --  10
        <enum-item name='HalfTempo' comment="half the tempo of the previous passage"/>
        <enum-item name='Faster' comment="more quickly than the last passage"/>
        <enum-item name='Slower' comment="slower than the last passage"/>
        <enum-item name='ResumeTempo' comment="resumes the previous tempo"/>
        <enum-item name='OriginalTempo' comment="resumes the original tempo"/>
        <enum-item name='Accelerates'/>
        <enum-item name='SlowsAndBroadens'/>
        <enum-item name='ConsistentlySlowing'/>
        <enum-item name='HurriedPace'/>
        <enum-item name='GraduallySlowsAtEnd'/>
        --  20
        -- dynamic styles
        <enum-item name='WhisperedUndertones'/>
        <enum-item name='VerySoft'/>
        <enum-item name='Soft'/>
        <enum-item name='ModeratelySoft'/>
        <enum-item name='ModeratelyLoud'/>
        <enum-item name='Loud'/>
        <enum-item name='VeryLoud'/>
        <enum-item name='BecomeLouderAndLouder'/>
        <enum-item name='BecomeSofterAndSofter'/>
        <enum-item name='FadeIntoSilence'/>
        --  30
        <enum-item name='StartLoudThenImmediatelySoft'/>
        -- more tempo styles
        <enum-item name='SlowsAndDiesAwayAtEnd'/>
        <enum-item name='BecomesCalmerAtEnd'/>
        <enum-item name='BecomesFrenzied'/>
        -- overall styles
        <enum-item name='StressRhythm'/>
        <enum-item name='BeStately'/>
        <enum-item name='BeBright'/>
        <enum-item name='BeLively'/>
        <enum-item name='BeSkilled'/>
        <enum-item name='BeVigorous'/>
        --  40
        <enum-item name='BeSpirited'/>
        <enum-item name='BeDelicate'/>
        <enum-item name='BeFiery'/>
        <enum-item name='BringSenseOfMotion'/>
        <enum-item name='BeDecisive'/>
        <enum-item name='WithFeeling' since='v0.47.01'/>
        <enum-item name='FeelAgitated'/>
        <enum-item name='BePassionate'/>
        <enum-item name='Sparkle'/>
        <enum-item name='BeBroad'/>
        <enum-item name='BeMadeSweetly'/>
        --  50
        <enum-item name='BeStrong'/>
        <enum-item name='BeEnergetic'/>
        <enum-item name='BeForceful'/>
        <enum-item name='FeelHeroic'/>
        <enum-item name='BeMadeExpressively'/>
        <enum-item name='FeelFurious'/>
        <enum-item name='BeJoyful'/>
        <enum-item name='BeGrand'/>
        <enum-item name='BeMerry'/>
        <enum-item name='BeGraceful'/>
        --  60
        <enum-item name='BuildAsItProceeds'/>
        <enum-item name='EvokeTears'/>
        <enum-item name='BeMelancholic'/>
        <enum-item name='FeelMournful'/>
        <enum-item name='BeMadeWithLightTouch'/>
        <enum-item name='FeelHeavy'/>
        <enum-item name='FeelMysterious'/>
        <enum-item name='BeJumpy'/>
        <enum-item name='FeelPlayful'/>
        <enum-item name='FeelTender'/>
        --  70
        <enum-item name='FeelCalm'/>
        <enum-item name='BeTriumphant'/>
    </enum-type>

    <enum-type type-name='musical_form_pitch_style' base-type='int32_t'> bay12: HarmonicStructureType
        <enum-item name='None' value='-1'/>
        <enum-item name='SinglePitchesOnly'/>
        <enum-item name='IntervalsOnly'/>
        <enum-item name='SparseChords'/>
        <enum-item name='PitchClusters'/>
        <enum-item name='ChordLayers'/>
    </enum-type>

    <bitfield-type type-name='melody_accidental_flag' base-type='uint32_t'> bay12: MELODY_ACCIDENTAL_FLAG_*
        <flag-bit name='rising' comment='otherwise falling'/>
        <flag-bit name='flattened'/>
        <flag-bit name='sharpened'/>
    </bitfield-type>

    <struct-type type-name='musical_form_interval' original-name='melody_accidentalst'>
        <int32_t name='degree'/>
        <bitfield name='flags' base-type='uint32_t' type-name='melody_accidental_flag'/>
    </struct-type>

    <enum-type type-name='musical_form_melody_style' base-type='int32_t'> bay12: MelodyPatternType
        <enum-item name='Rising'/>
        <enum-item name='Falling'/>
        <enum-item name='RisingFalling'/>
        <enum-item name='FallingRising'/>
    </enum-type>

    <enum-type type-name='musical_form_melody_frequency' base-type='int32_t'> bay12: MelodyFrequencyType
        <enum-item name='Always'/>
        <enum-item name='Often'/>
        <enum-item name='Sometimes'/>
    </enum-type>

    <struct-type type-name='musical_form_melodies' original-name='melodyst'>
        <enum name='style' type-name='musical_form_melody_style'/>
        <enum name='frequency' type-name='musical_form_melody_frequency'/>
        <stl-vector name='intervals' pointer-type='musical_form_interval'/>
        <bitfield name='features' base-type='uint32_t' type-name='musical_form_feature'/>
    </struct-type>

    <enum-type type-name='musical_form_passage_length_type' base-type='int32_t'> bay12: VoicePhraseLengthType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='Short'/>
        <enum-item name='MidLength'/>
        <enum-item name='Long'/>
        <enum-item name='Varied'/>
    </enum-type>

    <enum-type type-name='musical_form_passage_component_type' base-type='int32_t'> bay12: VoiceRoleType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='Melody'/>
        <enum-item name='Counterpoint'/>
        <enum-item name='Harmony'/>
        <enum-item name='Rhythm'/>
        <enum-item name='Unspecified'/>
    </enum-type>

    <enum-type type-name='musical_form_passage_type' base-type='int32_t'> bay12: MusicalPassageType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='Unrelated' comment='Simple'/>
        <enum-item name='Introduction'/>
        <enum-item name='Exposition'/>
        <enum-item name='Recapitulation'/>
        <enum-item name='Synthesis'/>
        <enum-item name='Verse'/>
        <enum-item name='Chorus'/>
        <enum-item name='Finale'/>
        <enum-item name='Coda'/>
        <enum-item name='BridgePassage'/>
        <enum-item name='Theme'/>
        <enum-item name='Variation'/>
    </enum-type>

    <struct-type type-name='musical_form_passage' original-name='musical_form_passagest'>
        <enum name='type' type-name='musical_form_passage_type'/>
        <int32_t name='passage_reference' init-value='-1' comment="used when doing Exposition, Recapitualation, Synthesis, and Variation"/>
        <int32_t name='passage_range_end' init-value='-1' comment="when doing Synthesis of a range of passages"/>
        <int32_t name='min_number'/>
        <int32_t name='max_number'/>
        <int32_t name='poetic_form_id' ref-target='poetic_form'/>
        <int32_t name='written_content_id' ref-target='written_content' comment="suspect bug in exported legends (and possibly DF itself) as no mentioning of the poems (or any alternative) referenced here were mentioned in the two entries examined"/>
        <int32_t name='scale_id' ref-target='scale'/>
        <int32_t name='scale_sub_id' comment="references the scales element of the scale"/>
        <int32_t name='rhythm_id' ref-target='rhythm'/>
        <int32_t name='sub_rhythm' comment="Guess, based on the pattern above"/>
        <int32_t name='rhythm_pattern' comment="references the patterns element of rhythm"/>
        <stl-vector name='instruments' type-name='int32_t' comment="indices into the instruments vector"/>
        <stl-vector name='components' type-name='musical_form_passage_component_type'/>
        <stl-vector name='passage_lengths' type-name='musical_form_passage_length_type'/>
        <stl-vector name='lowest_register_range' type-name='int32_t' init-value='-1' comment="0-3 seen. Probably indices into the registers of the instruments referenced. Found no field for timbre description, though"/>
        <stl-vector name='highest_register_range' type-name='int32_t' init-value='-1' comment="0-3 seen. Probably indices into the registers of the instruments referenced. Found no field for timbre description, though"/>
        <enum name='tempo_style' type-name='musical_form_style'/>
        <enum name='dynamic_style' type-name='musical_form_style'/>
        <enum name='overall_style' type-name='musical_form_style'/>
        <bitfield name='features' base-type='uint32_t' type-name='musical_form_feature'/>
        <enum name='pitch_style' type-name='musical_form_pitch_style'/>
        <stl-vector name='melodies' pointer-type='musical_form_melodies'/>
        <int32_t name='min_unit_length' init-value='-1'/>
        <int32_t name='max_unit_length' init-value='-1'/>
    </struct-type>

    <bitfield-type type-name='musical_form_voice_flag' base-type='uint32_t'> bay12: MUSICAL_FORM_VOICE_FLAG_*
        <flag-bit name='singer'/>
        <flag-bit name='speaker'/>
        <flag-bit name='chanter'/>
    </bitfield-type>

    <struct-type type-name='musical_form_instruments' original-name='musical_form_voicest'>
        <int32_t name='instrument_subtype' ref-target='itemdef_instrumentst' comment='-1 = vocal'/>
        <bitfield base-type='uint32_t' type-name='musical_form_voice_flag' name='substitutions'/>
        <bitfield base-type='uint32_t' type-name='musical_form_feature' name='features'/>
        <int32_t name='minimum_required' comment='tentative'/>
        <int32_t name='maximum_permitted' comment='tentative'/>
        <enum name='dynamic_style' type-name='musical_form_style'/>
        <enum name='overall_style' type-name='musical_form_style'/>
    </struct-type>

    <struct-type type-name='musical_form_play_orderst'>
        <static-array name='passage_index' count='3' type-name='int32_t'/>
        <int32_t name='passage_num'/>
        <int32_t name='min_number'/>
        <int32_t name='max_number'/>
    </struct-type>

    <enum-type type-name='musical_form_purpose' base-type='int32_t'> bay12: MusicalFormIntentType
        <enum-item name='Entertainment'/>
        <enum-item name='Commemoration'/>
        <enum-item name='Devotion'/>
        <enum-item name='Military'/>
    </enum-type>

    <bitfield-type type-name='musical_form_flag' base-type='uint32_t'>
        <flag-bit name='produces_individual_songs' comment='has_compositions'/>
        <flag-bit name='repeats_as_necessary'/>
    </bitfield-type>

    <struct-type type-name='musical_form' original-name='musical_formst' instance-vector='$global.world.musical_forms.all' key-field='id'>
        <int32_t name='id'/>
        <compound name='name' type-name='language_name'/>
        <int32_t name="originating_entity" ref-target="historical_entity" comment="ID of the entity from which the musical form originated."/>
        <int32_t name="original_author" ref-target="historical_figure" comment="historical figure ID of the composer"/>
        <stl-vector name='passages' pointer-type='musical_form_passage'/>
        <stl-vector name='instruments' pointer-type='musical_form_instruments'/>
        <stl-vector name='melodies' pointer-type='musical_form_melodies'/>
        <stl-vector name='play_order' pointer-type='musical_form_play_orderst'/>
        <enum name='tempo_style' type-name='musical_form_style'/>
        <enum name='dynamic_style' type-name='musical_form_style'/>
        <enum name='overall_style' type-name='musical_form_style'/>
        <int32_t name='poetic_form_id' ref-target='poetic_form'/>
        <int32_t name='written_content_id' ref-target='written_content'/>
        <int32_t name='scale_id' ref-target='scale'/>
        <int32_t name='scale_subid' comment='reference to scale_sub2'/>
        <int32_t name='rhythm_id' ref-target='rhythm'/>
        <int32_t name='sub_rhythm' comment='reference to sub_rhythms'/>
        <int32_t name='rhythm_pattern' comment='reference to patterns'/>
        <bitfield name='features' type-name='musical_form_feature'/>
        <enum name='pitch_style' type-name='musical_form_pitch_style'/>
        <enum name='purpose' type-name='musical_form_purpose'/>
        <int32_t name='devotion_target' ref-target='historical_figure'/>
        <bitfield base-type='uint32_t' type-name='musical_form_flag' name='flags'/>
    </struct-type>

    <struct-type type-name='musical_form_handlerst'>
        <stl-vector name='all' pointer-type='musical_form'/>
        <stl-vector name='order_load' pointer-type='musical_form' has-bad-pointers='true'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
