<data-definition>
    <bitfield-type type-name='beat_flag' base-type='uint32_t'> bay12: RHYTHM_BEAT_FLAG_*
        <flag-bit name='Accent'/>
        <flag-bit name='Regular'/>
        <flag-bit name='Early'/>
        <flag-bit name='Late'/>
    </bitfield-type>

    <struct-type type-name='rhythm_barst'>
        <pointer name='beat' is-array='true' type-name='beat_flag' comment="Length as per length field"/>
        <int32_t name='length'/>
    </struct-type>

    <struct-type type-name='rhythm_pattern' original-name='rhythm_patternst'>
        <stl-string name='name'/>
        <stl-vector name='bars' pointer-type='rhythm_barst'/>
        <pointer name='beat_name' type-name='stl-string' is-array='true' comment="length as per length field"/>
        <pointer name='beat_abbreviation' type-name='stl-string' is-array='true' comment="length as per length field"/>
        <int32_t name='length'/>
    </struct-type>

    <bitfield-type type-name='rhythm_construction_pattern_flag' base-type='uint32_t'> bay12: RHYTHM_CONSTRUCTION_PATTERN_FLAG_*
        <flag-bit name='Primary'/>
        <flag-bit name='Secondary'/>
    </bitfield-type>

    <bitfield-type type-name='rhythm_construction_flag' base-type='uint32_t'> bay12: RHYTHM_CONSTRUCTION_FLAG_*
        <flag-bit name='polymetric'/>
    </bitfield-type>

    <struct-type type-name='sub_rhythm' original-name='rhythm_constructionst'>
        <stl-string name='name'/>
        <stl-vector name='patterns' type-name='int32_t' comment="indices into patterns"/>
        <stl-vector name='pattern_flags' type-name='rhythm_construction_pattern_flag' comment="Same length as patterns"/>
        <bitfield name='flags' base-type='uint32_t' type-name='rhythm_construction_flag'/>
    </struct-type>

    <bitfield-type type-name='rhythm_flag' base-type='uint32_t'> bay12: RHYTHM_FLAG_*
        <flag-bit name='fundamental_polyrhythm'/>
        <flag-bit name='fundamental_polymeter'/>
    </bitfield-type>

    <struct-type type-name='rhythm' original-name='rhythmst' instance-vector='$global.world.rhythms.all' key-field='id'>
        <int32_t name='id'/>
        <stl-vector name='patterns' pointer-type='rhythm_pattern'/>
        <stl-vector name='sub_rhythms' pointer-type='sub_rhythm'/>
        <bitfield name='flags' base-type='uint32_t' type-name='rhythm_flag'/>
    </struct-type>

    <struct-type type-name='rhythm_handlerst'>
        <stl-vector name='all' pointer-type='rhythm'/>
        <stl-vector name='order_load' pointer-type='rhythm' has-bad-pointers='true'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
