<data-definition>
    <enum-type type-name='entity_raw_flags'> bay12: EntityDefFlagType
        <enum-item name='CIV_CONTROLLABLE'/> SITE_CONTROLLABLE
        <enum-item name='INDIV_CONTROLLABLE'/> ALL_MAIN_POPS_CONTROLLABLE
        <enum-item name='LAYER_LINKED'/>
        <enum-item name='INDOOR_WOOD'/>
        <enum-item name='WOOD_ARMOR'/>
        <enum-item name='SIEGER'/>
        <enum-item name='AMBUSHER'/>
        <enum-item name='BABYSNATCHER'/>

        <enum-item name='ITEM_THIEF'/>
        <enum-item name='CLOTHING'/>
        <enum-item name='CURRENCY_BY_YEAR'/>
        <enum-item name='METAL_PREF'/>
        <enum-item name='GEM_PREF'/>
        <enum-item name='STONE_PREF'/>
        <enum-item name='WOOD_WEAPONS'/>
        <enum-item name='BUILDS_OUTDOOR_FORTIFICATIONS'/>

        <enum-item name='RIVER_PRODUCTS'/>
        <enum-item name='OCEAN_PRODUCTS'/>
        <enum-item name='INDOOR_FARMING'/>
        <enum-item name='OUTDOOR_FARMING'/>
        <enum-item name='USE_CAVE_ANIMALS'/>
        <enum-item name='USE_EVIL_ANIMALS'/>
        <enum-item name='USE_ANIMAL_PRODUCTS'/>
        <enum-item name='COMMON_DOMESTIC_PACK'/>

        <enum-item name='COMMON_DOMESTIC_PULL'/>
        <enum-item name='COMMON_DOMESTIC_MOUNT'/>
        <enum-item name='COMMON_DOMESTIC_PET'/>
        <enum-item name='SUBTERRANEAN_CLOTHING'/>
        <enum-item name='USE_EVIL_WOOD'/>
        <enum-item name='USE_GOOD_WOOD'/>
        <enum-item name='USE_EVIL_PLANTS'/>
        <enum-item name='USE_GOOD_PLANTS'/>

        <enum-item name='USE_GOOD_ANIMALS'/>
        <enum-item name='USE_ANY_PET_RACE'/>
        <enum-item name='USE_MISC_PROCESSED_WOOD_PRODUCTS'/>
        <enum-item name='IMPROVED_BOWS'/>
        <enum-item name='OUTDOOR_WOOD'/>
        <enum-item name='LOCAL_BANDITRY'/>
        <enum-item name='BUILDS_OUTDOOR_TOMBS'/>
        <enum-item name='INVADERS_IGNORE_NEUTRALS'/>

        <enum-item name='AT_PEACE_WITH_WILDLIFE'/>
        <enum-item name='EQUIPMENT_IMPROVEMENTS'/>
        <enum-item name='ABUSE_BODIES'/>
        <enum-item comment='unused'/>
        <enum-item name='GENERATED'/>
        <enum-item name='SKULKING'/>
        <enum-item name='HAS_LAND_HOLDER'/>
        <enum-item name='MERCHANT_NOBILITY'/>

        <enum-item name='TREE_CAP_DIPLOMACY'/>
        <enum-item name='DIPLOMAT_BODYGUARDS'/>
        <enum-item name='MERCHANT_BODYGUARDS'/>
        <enum-item name='INDOOR_ORCHARDS'/>
        <enum-item name='OUTDOOR_ORCHARDS'/>
        <enum-item name='WANDERER'/>
        <enum-item name='BEAST_HUNTER'/>
        <enum-item name='SCOUT'/>

        <enum-item name='WILL_ACCEPT_TRIBUTE'/>
        <enum-item name='INDOOR_GARDENS'/>
        <enum-item name='OUTDOOR_GARDENS'/>
        <enum-item name='MERCENARY'/>
        <enum-item name='SITE_GUARDIAN'/>
        <enum-item name='DIVINE_MAT_WEAPONS'/>
        <enum-item name='DIVINE_MAT_ARMOR'/>
        <enum-item name='DIVINE_MAT_CRAFTS'/>

        <enum-item name='DIVINE_MAT_CLOTHING'/>
        <enum-item name='GENERATE_KEYBOARD_INSTRUMENTS'/>
        <enum-item name='GENERATE_STRINGED_INSTRUMENTS'/>
        <enum-item name='GENERATE_WIND_INSTRUMENTS'/>
        <enum-item name='GENERATE_PERCUSSION_INSTRUMENTS'/>
        <enum-item name='GENERATE_POETIC_FORMS'/>
        <enum-item name='GENERATE_MUSICAL_FORMS'/>
        <enum-item name='GENERATE_DANCE_FORMS'/>

        <enum-item name='SET_SCHOLARS_ON_VALUES_AND_JOBS'/>
        <enum-item name='NO_ARTIFACT_CLAIMS'/>
        <enum-item name='USE_NON_EXOTIC_PET_RACE'/>
        <enum-item name='MISSING_UNDERWORLD_DISASTERS'/>
    </enum-type>

    <enum-type type-name='site_type'> bay12: SiteType
        <enum-item name='PLAYER_FORTRESS'/>
        <enum-item name='DARK_FORTRESS'/>
        <enum-item name='CAVE'/>
        <enum-item name='CAVE_DETAILED'/>
        <enum-item name='TREE_CITY'/>
        <enum-item name='CITY'/>
        <enum-item name='IMPORTANT_LOCATION'/>
        <enum-item name='LAIR'/>
        <enum-item name='FORTRESS'/>
        <enum-item name='CAMP'/>
        <enum-item name='MONUMENT'/>
    </enum-type>

    <enum-type type-name='ethic_type' base-type='int16_t'> bay12: EthicType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='KILL_ENTITY_MEMBER'/>
        <enum-item name='KILL_NEUTRAL'/>
        <enum-item name='KILL_ENEMY'/>
        <enum-item name='KILL_ANIMAL'/>
        <enum-item name='KILL_PLANT'/>
        <enum-item name='TORTURE_AS_EXAMPLE'/>
        <enum-item name='TORTURE_FOR_INFORMATION'/>
        <enum-item name='TORTURE_FOR_FUN'/>
        <enum-item name='TORTURE_ANIMALS'/>
        <enum-item name='TREASON'/>
        <enum-item name='OATH_BREAKING'/>
        <enum-item name='LYING'/>
        <enum-item name='VANDALISM'/>
        <enum-item name='TRESPASSING'/>
        <enum-item name='THEFT'/>
        <enum-item name='ASSAULT'/>
        <enum-item name='SLAVERY'/>
        <enum-item name='EAT_SAPIENT_OTHER'/>
        <enum-item name='EAT_SAPIENT_KILL'/>
        <enum-item name='MAKE_TROPHY_SAME_RACE'/>
        <enum-item name='MAKE_TROPHY_SAPIENT'/>
        <enum-item name='MAKE_TROPHY_ANIMAL'/>
    </enum-type>

    <enum-type type-name='ethic_response' base-type='int16_t'> bay12: EthicResponseType
        <enum-item name='NOT_APPLICABLE'/>
        <enum-item name='ACCEPTABLE'/>
        <enum-item name='PERSONAL_MATTER'/>
        <enum-item name='JUSTIFIED_IF_NO_REPERCUSSIONS'/>
        <enum-item name='JUSTIFIED_IF_GOOD_REASON'/>
        <enum-item name='JUSTIFIED_IF_EXTREME_REASON'/>
        <enum-item name='JUSTIFIED_IF_SELF_DEFENSE'/>
        <enum-item name='ONLY_IF_SANCTIONED'/>
        <enum-item name='MISGUIDED'/>
        <enum-item name='SHUN'/>
        <enum-item name='APPALLING'/>
        <enum-item name='PUNISH_REPRIMAND'/>
        <enum-item name='PUNISH_SERIOUS'/>
        <enum-item name='PUNISH_EXILE'/>
        <enum-item name='PUNISH_CAPITAL'/>
        <enum-item name='UNTHINKABLE'/>
        <enum-item name='REQUIRED'/>
    </enum-type>

    <enum-type type-name='entity_name_type' base-type='int16_t'> bay12: EntityDefSelector
        <enum-item name='OTHER' comment='MAIN'/>
        <enum-item name='CIV'/>
        <enum-item name='SITE'/>
        <enum-item name='VESSEL'/>
        <enum-item name='MILITARY_UNIT'/>
        <enum-item name='RELIGION'/>
        <enum-item name='TEMPLE'/>
        <enum-item name='WAR'/>
        <enum-item name='BATTLE'/>
        <enum-item name='SIEGE'/>
        <enum-item name='ROAD'/>
        <enum-item name='BRIDGE'/>
        <enum-item name='TUNNEL'/>
        <enum-item name='WALL'/>
        <enum-item name='LIBRARY'/>
        <enum-item name='FESTIVAL'/>
        <enum-item name='MERCHANT_COMPANY'/>
        <enum-item name='CRAFT_GUILD'/>
        <enum-item name='HOSPITAL'/>
    </enum-type>

    <struct-type type-name='entity_raw' original-name='entity_defst' instance-vector='$global.world.raws.entities'>
        <stl-string name='code'/>
        <int32_t name='index' since='v0.40.01' comment='into instace-vector'/>
        <stl-vector name='raws' pointer-type='stl-string' since='v0.40.01'/>

        <code-helper name='describe'>$.translation</code-helper>

        <stl-vector name='creature_ids' type-name='int16_t' ref-target='creature_raw'/>
        <stl-vector name='creatures' pointer-type='stl-string'/>

        <compound name='equipment'> not an actual compound
            <stl-vector name='digger_id' type-name='int16_t' ref-target='itemdef_weaponst'/>
            <stl-vector name='weapon_id' type-name='int16_t' ref-target='itemdef_weaponst'/>
            <stl-vector name='armor_id' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='ammo_id' type-name='int16_t' ref-target='itemdef_ammost'/>
            <stl-vector name='helm_id' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='gloves_id' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='shoes_id' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='pants_id' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='shield_id' type-name='int16_t' ref-target='itemdef_shieldst'/>
            <stl-vector name='trapcomp_id' type-name='int16_t' ref-target='itemdef_trapcompst'/>
            <stl-vector name='toy_id' type-name='int16_t' ref-target='itemdef_toyst'/>
            <stl-vector name='instrument_id' type-name='int16_t' ref-target='itemdef_instrumentst'/>
            <stl-vector name='tool_id' type-name='int16_t' ref-target='itemdef_toolst'/>
            <stl-vector name='siegeammo_id' type-name='int16_t' ref-target='itemdef_siegeammost'/>

            <stl-vector name='armor_rarity' type-name='int8_t'/>
            <stl-vector name='helm_rarity' type-name='int8_t'/>
            <stl-vector name='gloves_rarity' type-name='int8_t'/>
            <stl-vector name='shoes_rarity' type-name='int8_t'/>
            <stl-vector name='pants_rarity' type-name='int8_t'/>

            <stl-vector name='digger_str' pointer-type='stl-string'/>
            <stl-vector name='weapon_str' pointer-type='stl-string'/>
            <stl-vector name='armor_str' pointer-type='stl-string'/>
            <stl-vector name='ammo_str' pointer-type='stl-string'/>
            <stl-vector name='helm_str' pointer-type='stl-string'/>
            <stl-vector name='gloves_str' pointer-type='stl-string'/>
            <stl-vector name='shoes_str' pointer-type='stl-string'/>
            <stl-vector name='pants_str' pointer-type='stl-string'/>
            <stl-vector name='shield_str' pointer-type='stl-string'/>
            <stl-vector name='trapcomp_str' pointer-type='stl-string'/>
            <stl-vector name='toy_str' pointer-type='stl-string'/>
            <stl-vector name='instrument_str' pointer-type='stl-string'/>
            <stl-vector name='siegeammo_str' pointer-type='stl-string'/>
            <stl-vector name='tool_str' pointer-type='stl-string'/>
        </compound>

        <stl-vector name='currency_value' type-name='int32_t'
                    index-refers-to='(material-by-id 0 $)'/>

        <df-flagarray name='flags' index-enum='entity_raw_flags'/>
        <stl-string name='translation'/>

        <compound name='symbols'> not an actual compound
            <static-array name='symbols_major' type-name='language_word_table' index-enum='entity_name_type' count='19'/>
            <static-array name='symbols_minor' type-name='language_word_table' index-enum='entity_name_type' count='19'/>
            <static-array name='select_symbol' index-enum='entity_name_type' count='19'>
                <stl-vector pointer-type='stl-string'/>
            </static-array>
            <static-array name='subselect_symbol' index-enum='entity_name_type' count='19'>
                <stl-vector pointer-type='stl-string'/>
            </static-array>
            <static-array name='cull_symbol' index-enum='entity_name_type' count='19'>
                <stl-vector pointer-type='stl-string'/>
            </static-array>
        </compound>

        <static-array name='sphere_alignment' type-name='int32_t' count='130' index-enum='sphere_type'/>
        <static-array name='art_facet_modifier' type-name='int32_t' count='4' index-enum='art_facet_type'/>
        <static-array name='art_image_element_modifier' type-name='int32_t' count='5' index-enum='art_image_element_type'/>
        <static-array name='item_improvement_modifier' type-name='int32_t'
                      count='14' index-enum='improvement_type'/>

        <static-array name='friendly_color' type-name='int16_t' count='3'/>

        <enum base-type='int32_t' name='default_site_type' type-name='world_site_type'/>
        <static-array name='likes_site' type-name='int8_t' count='11' index-enum='site_type'/>
        <static-array name='tolerates_site' type-name='int8_t' count='11' index-enum='site_type'/>

        <static-array name='biome_support' type-name='int32_t' count='51' index-enum='biome_type'/>
        <static-array name='start_biome' type-name='int8_t' count='51' index-enum='biome_type'/>
        <static-array name='settlement_biome' type-name='int8_t' count='51' index-enum='biome_type'/>

        <static-array name='active_season' type-name='int8_t' count='4' index-enum='season'/>

        <compound name='progress_trigger'>  not an actual compound
            <int16_t name='population'/>
            <int16_t name='production'/>
            <int16_t name='trade'/>
            <int16_t name='pop_siege'/>
            <int16_t name='prod_siege'/>
            <int16_t name='trade_siege'/>
        </compound>

        <static-array name='ethic' count='22' index-enum='ethic_type'>
            <enum base-type='int16_t' type-name='ethic_response'/>
        </static-array>

        <static-array name='values' type-name='int32_t' count='64' index-enum='value_type'/>
        <static-array name='variable_value_min' type-name='int32_t' count='64' index-enum='value_type' since='v0.42.01'/>
        <static-array name='variable_value_max' type-name='int32_t' count='64' index-enum='value_type' since='v0.42.01'/>
        <bitfield name='scholar' base-type='uint32_t'> bay12: ENTITY_SCHOLAR_FLAG_*
            <flag-bit name='PHILOSOPHER'/>
            <flag-bit name='MATHEMATICIAN'/>
            <flag-bit name='HISTORIAN'/>
            <flag-bit name='ASTRONOMER'/>
            <flag-bit name='NATURALIST'/>
            <flag-bit name='CHEMIST'/>
            <flag-bit name='GEOGRAPHER'/>
            <flag-bit name='DOCTOR'/>

            <flag-bit name='ENGINEER'/>
        </bitfield>

        <int32_t name='max_site_pop_number'/>
        <int32_t name='max_pop_number'/>
        <int32_t name='max_starting_civ_number'/>

        <stl-vector name='religion' type-name='int16_t'/>
        <stl-vector name='religion_sphere'>
            <enum base-type='int16_t' type-name='sphere_type'/>
        </stl-vector>

        <compound name='jobs'> not an actual compound
            <static-array name='permitted_job' type-name='bool'
                          index-enum='profession'/>
            <static-array name='permitted_labor' type-name='bool'
                          index-enum='unit_labor' count='94'/>

            <static-array name='world_construction' type-name='bool'
                          index-enum='world_construction_type' count='4'/>
        </compound>

        <stl-vector name='positions' pointer-type='entity_position_raw'/>

        <static-array name='variable_positions' type-name='int8_t'
                      index-enum='entity_position_responsibility' count='43'/>

        <static-array name='site_variable_positions' type-name='int8_t'
                      index-enum='entity_position_responsibility' count='43'/>

        <stl-vector name='tissue_styles'>
            <pointer> bay12: entity_def_tissue_stylest
                <stl-string name='name'/>
                <stl-vector name='preferred_shapings' type-name='tissue_style_type'/>
                <int32_t name='maintain_length_min'/>
                <int32_t name='maintain_length_max'/>
            </pointer>
        </stl-vector>

        <compound name='workshops'> not an actual compound
            <stl-vector name='permitted_building_str' pointer-type='stl-string'/>
            <stl-vector name='permitted_building_id' type-name='int32_t' ref-target='building_def'/>
            <stl-vector name='permitted_reaction_str' pointer-type='stl-string'/>
            <stl-vector name='permitted_reaction_id' type-name='int32_t' ref-target='reaction'/>
        </compound>

        <int32_t name='banditry'/>

        <stl-vector pointer-type='stl-string' name='gem_shapes_str'/>
        <stl-vector pointer-type='stl-string' name='stone_shapes_str'/>
        <stl-vector name='gem_shapes' type-name='int32_t' ref-target='descriptor_shape'/>
        <stl-vector name='stone_shapes' type-name='int32_t' ref-target='descriptor_shape'/>
        <int32_t name='source_hfid' ref-target='historical_figure'/>
        <int32_t name='source_enid' ref-target='historical_entity' since='v0.42.01'/>
        <stl-vector pointer-type='entity_animal_raw' name='animal'/>

        <stl-vector pointer-type='stl-string' name='currency_str1'/>
        <stl-vector pointer-type='stl-string' name='currency_str2'/>
    </struct-type>

    <struct-type type-name='entity_animal_raw' original-name='entity_def_animalst'>
        <stl-string name='token'/>
        <stl-vector pointer-type='stl-string' name='caste_token'/>
        <stl-vector pointer-type='stl-string' name='animal_class'/>
        <stl-vector pointer-type='stl-string' name='forbidden_class'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: ENTITY_DEF_ANIMAL_FLAG_*
            <flag-bit name='ALWAYS_PRESENT'/>
            <flag-bit name='NEVER_MOUNT'/>
            <flag-bit name='ALWAYS_MOUNT'/>
            <flag-bit name='NEVER_WAGON_PULLER'/>
            <flag-bit name='ALWAYS_WAGON_PULLER'/>
            <flag-bit name='NEVER_SIEGE'/>
            <flag-bit name='ALWAYS_SIEGE'/>
            <flag-bit name='NEVER_PET'/>

            <flag-bit name='ALWAYS_PET'/>
            <flag-bit name='NEVER_PACK_ANIMAL'/>
            <flag-bit name='ALWAYS_PACK_ANIMAL'/>
        </bitfield>
    </struct-type>

    <enum-type type-name='entity_position_raw_flags'> bay12: EntityDefPositionFlagType
        <enum-item name='SITE'/>
        <enum-item name='ELECTED'/>
        <enum-item name='CONQUERED_SITE'/>
        <enum-item name='MILITARY_SCREEN_ONLY'/>
        <enum-item name='GENDER_MALE'/>
        <enum-item name='GENDER_FEMALE'/>
        <enum-item name='SUCCESSION_BY_HEIR'/>
        <enum-item name='EXPORTED_IN_LEGENDS'/>

        <enum-item name='FLASHES'/>
        <enum-item name='BRAG_ON_KILL'/>
        <enum-item name='CHAT_WORTHY'/>
        <enum-item name='DO_NOT_CULL'/>
        <enum-item name='KILL_QUEST'/>
        <enum-item name='DETERMINES_COIN_DESIGN'/>
        <enum-item name='ACCOUNT_EXEMPT'/>
        <enum-item name='DUTY_BOUND'/>

        <enum-item name='COLOR'/>
        <enum-item name='RULES_FROM_LOCATION'/>
        <enum-item name='MENIAL_WORK_EXEMPTION'/>
        <enum-item name='MENIAL_WORK_EXEMPTION_SPOUSE'/>
        <enum-item name='SLEEP_PRETENSION'/>
        <enum-item name='PUNISHMENT_EXEMPTION'/>
        <enum-item name='QUEST_GIVER'/>
        <enum-item name='SPECIAL_BURIAL'/>

        <enum-item name='REQUIRES_MARKET'/>
    </enum-type>

    <enum-type type-name='entity_position_responsibility' base-type='int16_t'> bay12: PositionResponsibilityType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='LAW_MAKING'/>
        <enum-item name='LAW_ENFORCEMENT'/>
        <enum-item name='RECEIVE_DIPLOMATS'/>
        <enum-item name='MEET_WORKERS'/>
        <enum-item name='MANAGE_PRODUCTION'/>
        <enum-item name='TRADE'/>
        <enum-item name='ACCOUNTING'/>
        <enum-item name='ESTABLISH_COLONY_TRADE_AGREEMENTS'/>
        <enum-item name='MAKE_INTRODUCTIONS'/>
        <enum-item name='MAKE_PEACE_AGREEMENTS'/>
        <enum-item name='MAKE_TOPIC_AGREEMENTS'/>
        <enum-item name='COLLECT_TAXES'/>
        <enum-item name='ESCORT_TAX_COLLECTOR'/>
        <enum-item name='EXECUTIONS'/>
        <enum-item name='TAME_EXOTICS'/>
        <enum-item name='RELIGION'/>
        <enum-item name='ATTACK_ENEMIES'/>
        <enum-item name='PATROL_TERRITORY'/>
        <enum-item name='MILITARY_GOALS'/>
        <enum-item name='MILITARY_STRATEGY'/>
        <enum-item name='UPGRADE_SQUAD_EQUIPMENT'/>
        <enum-item name='EQUIPMENT_MANIFESTS'/>
        <enum-item name='SORT_AMMUNITION'/>
        <enum-item name='BUILD_MORALE'/>
        <enum-item name='HEALTH_MANAGEMENT'/>
        <enum-item name='ESPIONAGE'/>
        <enum-item name='ADVISE_LEADERS'/>
        <enum-item name='OVERSEE_LEADER_HOUSEHOLD'/>
        <enum-item name='MANAGE_ANIMALS'/>
        <enum-item name='MANAGE_LEADER_HOUSEHOLD_FOOD'/>
        <enum-item name='MANAGE_LEADER_HOUSEHOLD_DRINKS'/>
        <enum-item name='PREPARE_LEADER_MEALS'/>
        <enum-item name='MANAGE_LEADER_HOUSEHOLD_CLEANLINESS'/>
        <enum-item name='MAINTAIN_SEWERS'/>
        <enum-item name='FOOD_SUPPLY'/>
        <enum-item name='FIRE_SAFETY'/>
        <enum-item name='JUDGE'/>
        <enum-item name='BUILDING_SAFETY'/>
        <enum-item name='CONSTRUCTION_PERMITS'/>
        <enum-item name='MAINTAIN_ROADS'/>
        <enum-item name='MAINTAIN_BRIDGES'/>
        <enum-item name='MAINTAIN_TUNNELS'/>
        <enum-item name='DELIVER_MESSAGES'/>
    </enum-type>

    <struct-type type-name='entity_position_raw' original-name='entity_def_positionst'>
        <stl-string name='code'/>
        <int32_t name='id'/>
        <df-flagarray name='flags' index-enum='entity_position_raw_flags'/>

        <static-array name='allowed_creature_str' count='2'>
            <stl-vector pointer-type='stl-string'/>
        </static-array>
        <stl-vector name='allowed_creature' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='allowed_class' pointer-type='stl-string'/>

        <static-array name='rejected_creature_str' count='2'>
            <stl-vector pointer-type='stl-string'/>
        </static-array>
        <stl-vector name='rejected_creature' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='rejected_class' pointer-type='stl-string'/>

        <static-array type-name='stl-string' name='name' count='2'/> bay12: string[EntityDefPositionStringType]
        <static-array type-name='stl-string' name='name_female' count='2'/>
        <static-array type-name='stl-string' name='name_male' count='2'/>
        <static-array type-name='stl-string' name='spouse' count='2'/>
        <static-array type-name='stl-string' name='spouse_female' count='2'/>
        <static-array type-name='stl-string' name='spouse_male' count='2'/>
        <static-array type-name='stl-string' name='squad' count='2'/>
        <stl-string name='land_name'/>

        <int16_t name='squad_size'/>

        <stl-vector name='commander_str' pointer-type='stl-string'/>
        <stl-vector name='commander_id' type-name='int32_t'/>
        <stl-vector name='commander_types' type-name='int16_t'/>

        <int16_t name='land_holder'/>
        <int16_t name='number'/>
        <int16_t name='requires_population'/>
        <enum name='execution_skill' type-name='job_skill' base-type='int16_t'/>
        <int32_t name='precedence'/>

        <stl-string name='replaced_by_str'/>
        <int32_t name='replaced_by'/>

        <stl-vector name='appointed_by_str' pointer-type='stl-string'/>
        <stl-vector name='appointed_by' type-name='int32_t'/>

        <stl-vector name='succession_by_position_str' pointer-type='stl-string'/>
        <stl-vector name='succession_by_position' type-name='int32_t'/>

        <static-array type-name='bool' name='responsibilities' count='43' index-enum='entity_position_responsibility'/>
        <static-array type-name='int16_t' name='color' count='3'/>

        <int32_t name='required_boxes'/>
        <int32_t name='required_cabinets'/>
        <int32_t name='required_racks'/>
        <int32_t name='required_stands'/>

        <int32_t name='required_office'/> bay12: int32_t[DemandRooms]
        <int32_t name='required_bedroom'/>
        <int32_t name='required_dining'/>
        <int32_t name='required_tomb'/>

        <int32_t name='mandate_max'/>
        <int32_t name='demand_max'/>

        <stl-string name='description'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
