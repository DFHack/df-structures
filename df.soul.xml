<data-definition>
    -- Unused: PracticalExperienceType

    <struct-type type-name='unit_instrument_skill' original-name='practical_experience_instrumentst'>
        <int32_t name="id" ref-target='itemdef_instrumentst'/>
        <code-helper name='describe'>(describe-obj $global.world.raws.itemdefs.instruments[$.id].name)</code-helper>
        <enum base-type='int32_t' name="rating" type-name='skill_rating'/>
        <int32_t name="experience"/>
    </struct-type>

    <struct-type type-name='unit_poetic_skill' original-name='practical_experience_poetic_formst'>
        <int32_t name="id" ref-target='poetic_form'/>
        <code-helper name='describe'>(describe-obj $global.world.poetic_forms.all[$.id].name)</code-helper>
        <enum base-type='int32_t' name="rating" type-name='skill_rating'/>
        <int32_t name="experience"/>
    </struct-type>

    <struct-type type-name='unit_musical_skill' original-name='practical_experience_musical_formst'>
        <int32_t name="id" ref-target='musical_form'/>
        <code-helper name='describe'>(describe-obj $global.world.musical_forms.all[$.id].name)</code-helper>
        <enum base-type='int32_t' name="rating" type-name='skill_rating'/>
        <int32_t name="experience"/>
    </struct-type>

    <struct-type type-name='unit_dance_skill' original-name='practical_experience_dance_formst'>
        <int32_t name="id" ref-target='dance_form'/>
        <code-helper name='describe'>(describe-obj $global.world.dance_forms.all[$.id].name)</code-helper>
        <enum base-type='int32_t' name="rating" type-name='skill_rating'/>
        <int32_t name="experience"/>
    </struct-type>

    <struct-type type-name='practical_experiencest'>
        <stl-vector pointer-type='unit_instrument_skill' name='musical_instruments'/>
        <stl-vector pointer-type='unit_poetic_skill' name='poetic_forms'/>
        <stl-vector pointer-type='unit_musical_skill' name='musical_forms'/>
        <stl-vector pointer-type='unit_dance_skill' name='dance_forms'/>
    </struct-type>

    <struct-type type-name='unit_soul' original-name='soulst'>
        <int32_t name='id'/>

        <compound name='name' type-name='language_name'/>

        <int32_t name='race' ref-target='creature_raw'/>
        <enum name='sex' type-name='pronoun_type'/>
        <int16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>

        <code-helper name='describe'>
            (describe-obj $.name)
            (awhen (find-creature $.race)
            (fmt "~:(~A ~A~)" $it.caste[$.caste].caste_id $it.creature_id))
        </code-helper>

        <bitfield type-name='orientation_flags' name='orientation_flags'/>
        <int32_t name='birth_year' init-value='-1'/>
        <int32_t name='birth_time' init-value='-1'/>
        <int32_t name='curse_year' init-value='-1' since='v0.34.01' comment='bay12: frozen_age_year'/>
        <int32_t name='curse_time' init-value='-1' since='v0.34.01' comment='bay12: frozen_age_season_count'/>
        <int32_t name='birth_year_bias' init-value='0' since='v0.34.01' comment='bay12: credit_age_year'/>
        <int32_t name='birth_time_bias' init-value='0' since='v0.34.01' comment='bay12: credit_age_season_count'/>
        <int32_t name='old_year' init-value='-1' comment='bay12: age_death_year'/>
        <int32_t name='old_time' init-value='-1' comment='bay12: age_death_season_count'/>

        <static-array type-name='unit_attribute' name='mental_attrs' count='13' index-enum='mental_attribute_type'/>

        <stl-vector name='skills' pointer-type='unit_skill'/>
        <stl-vector name='preferences' pointer-type='unit_preference'/>

        <compound type-name='unit_personality' name='personality'/>

        <pointer name='performance_skills' type-name='practical_experiencest' since='v0.42.01'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
