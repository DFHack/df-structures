{"version":1,"ops":[{"type":1,"author":{"id":"b557f89d859694906b6aaad860dfa0f74f23dbaa"},"timestamp":1582737377,"metadata":{"github-id":"MDU6SXNzdWU1NzE1MzY3MzM=","github-url":"https://github.com/DFHack/df-structures/issues/369","origin":"github"},"title":"invalid strings in unit.enemy.undead.undead_name","message":"Tested on linux32/linux64 using https://github.com/DFHack/dfhack/commit/e26787604a223c924ed96db79e4438e2a2cf806d and c0edb62eba997b09c19b67133d20713901d94bc9\n\nMaybe a missing int32_t before root_body_part_id. There is a valid string one pointer alignment further. The string offset looks like the offset of a int16_t (probably root_body_part_id).\n\nlinux64: expected string at 0x7fffbb416388, at 0x7fffbb416390 0x19bbf58 is the empty string.\n\n    7fffbb416370\t 0000000000000001 00000003ffffffff\n    7fffbb416380\t 0000000100000000 d2d2d2d2d2d20000\n    7fffbb416390\t 00000000019bbf58 0000000000000001\n\nlinux32: expected string at 0xde595fd8, at 0xde595fdc 0xde59601c is a valid (non-empty) string.\n\n    de595fc0\t 00000001 00000000 ffffffff 00000003\n    de595fd0\t 00000000 00000000 d2d20003 de59601c\n    de595fe0\t 00000000 00000000 00000000 00000025","files":null}]}