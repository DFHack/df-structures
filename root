{"version":1,"ops":[{"type":1,"author":{"id":"dc07f1dff8eee6d97a060efd0e58b122b9009d24"},"timestamp":1515661458,"metadata":{"github-id":"MDU6SXNzdWUyODc3MDk5MTg=","github-url":"https://github.com/DFHack/df-structures/issues/237","origin":"github"},"title":"df.world_data.xml:world_region reanimation investigation","message":"I've done some investigation regarding reanimation. Quietust commented that unk_1e4 and unk_1e6 used to be related to reanimation in old DF versions when the evil/good flags were proposed to be named, and I've used that as a starting assumption.\n\nThis issue is raised with the hope of starting an investigation discussion that can eventually lead to a structure update pull request.\n\nAs far as I've seen, a region interaction involving reanimation associated to an evil region does not actually result in the embark being reanimating, as such embarks frequently end up being non animating.\nGenerating a world with extra evil regions I've embarked a fair number of times, and my preliminary results are:\n- unk_1e6 generated with a value of 256 causes the evil embark to be reanimating, while 0 causes it not to be.\n- unk_1e6 has been seen to have a value of 1 on neutral regions only. Only 0, 1, and 256 has been observed.\n- unk_1e6 DFHacked from 0 to 256 does NOT seem to work to convert an evil \"reanimating\" region into an actually reanimating one, so there is probably some additional requirement somewhere.\n- unk_1e4 with a value of 100 caused every piece of greenery to be dead at the embark of an evil \"reanimating\" biome, and DFHacking 0 -\u003e 100 caused a non dead region to be a 100% dead one on a subsequent embark (beside the previous fortress).\n- unk_1e4 with a value of 59 had about half of the trees being dead.\n- unk_1e4 has been observed to have a value \u003e 256, but I haven't seen the first byte to have any bit other than bit 0 set.\n- Actually reanimating biomes have been observed with unk_1e4 = 0, so unk_1e4 is probably not involved in that distinction.\n- Both unk_1e4 and unk_1e6 are set during worldgen BEFORE good/evil is assigned. Thus, they can have non zero values for regions that are not (later) defined as evil. [Edit 2: WRONG. See below]\n- unk_1e6 DFHacked from 256 to 0 did NOT work to convert an evil reanimating region to a \"failing reanimation\" one, i.e. the new embark, next to a previous one, reanimates as well.\n- unk_1e4 DFHacked from 256 to 356 on a good region caused all vegetation to be dead on embark.\n- unk_1e4 has so far been seen to be \u003e= 256 only on good and evil regions, not neutral ones. Values greater than 256 has been seen only on evil regions, which is reasonable given the previous observation.\n- \"dead percentage\" \u003e 0 has been seen only together with unk_1e6 = 256.\n\nCurrent guesses:\n- unk_1e4 is actually two fields: one boolean of unknown function, followed by an 8 bit integer one that acts as a dead percentage.\n- unk_1e6 is actually two fields where the first one is boolean. The first one would be a \"reanimating\" flag, and the second one is unknown.\n\nRemains to be investigated:\n- Is the \"dead percentage\" a correct interpretation (i.e. the value range being 0 - 100)?\n- What's the missing piece(s) that distinguish an actually reanimating region from one that has the interaction but \"doesn't work\", apart from the \"reanimating\" flag?\n- What is the function of the unk_1e4 boolean, and is it a boolean?\n- What's the function of the second byte of unk_1e6?\n\nEdit: Some basic assumptions seem to have been incorrect. There appears to be two kinds of \"reanimation\" regions, one non functional one that has a target but no effect, and the second kind that has both a corpse target and a reanimation effect, where only the second kind is functional. Swapping the interactions between a non functional reanimating evil region and a functional one swapped the effect, and assigning a functional reanimating regional interaction to a good region (previously changed to have dead vegetation) caused reanimation to take effect.\n\nThus, I think the data is:\nunk_1e4 byte 1: boolean flag of unknown function\nunk_1e4 byte 2: dead percentage (0 - 100) controlling dead vegetation\nunk_1e6 byte 1: reanimating. Guides DF to select a regional interaction containing reanimation for the region, but does not control reanimation itself. Thus, it indicates reanimation in an unhacked game (possibly excluding worlds where no reanimating interactions exist).\nunk_1e6 byte 2: Boolean flag of unknown function, that may be set only on neutral regions.\n\nI've run the following script on a number of quickly generated medium worlds with good and evil increased to 100 both for small regions, and haven't found any case where anything violating the assumptions has reported.\n\n````function y ()\n  for i, region in ipairs (df.global.world.world_data.regions) do\n    if region.unk_1e6 == 1 and\n       (region.good or region.evil) then\n      dfhack.println (\"unk_6 = 1 for non neutral region\", i, region.unk_1e4, region.unk_1e6, region.good, region.evil)\n    end\n    \n    if region.unk_1e4 \u003e 356 or\n       (region.unk_1e4 \u003c 256 and region.unk_1e4 \u003e 100) then\n      dfhack.println (\"dead percentage out of 0 .. 100 range\", i, region.unk_1e4, region.unk_1e6, region.good, region.evil)\n    end\n    \n    if region.unk_1e4 \u003e 0 and region.unk_1e4 ~= 256 and not region.evil then\n      dfhack.println (\"non zero dead percentage for non evil region\", i, region.unk_1e4, region.unk_1e6, region.good, region.evil)\n    end\n    \n    if region.unk_1e4 \u003e 0 and region.unk_1e4 ~= 256 and region.unk_1e6 ~= 256 then\n      dfhack.println (\"non zero dead percentage when reanimating isn't set\", i, region.unk_1e4, region.unk_1e6, region.good, region.evil)\n    end\n    \n    if region.unk_1e6 ~= 0 and region.unk_1e6 ~= 1 and region.unk_1e6 ~= 256 then\n      dfhack.println (\"unk_1e6 not consisting of two booleans that are never set together\", i, region.unk_1e4, region.unk_1e6, region.good, region.evil)\n    end\n  end\nend\n\ny ()``\n\nEdit 2:\nThe good, evil, and unk_1e4 first byte flag are set during the Good/Evil placement phase during worldgen, while both unk_1e6 flags and the dead percentage flag in unk_1e4 are set during the \"other beasts\" worldgen phase. It can be noted that df.global.world.interaction_instances are generated during this phase as well, which makes sense.","files":null}]}