<data-definition>
    <bitfield-type type-name='unit_flags1' base-type='uint32_t'>
        <flag-bit name='move_state'
                  comment='Can the dwarf move or are they waiting for their movement timer'/>
        <flag-bit name='dead'
                  comment='Dead (might also be set for incoming/leaving critters that are alive)'/>
        <flag-bit name='has_mood' comment='Currently in mood'/>
        <flag-bit name='had_mood' comment='Had a mood already'/>

        <flag-bit name='marauder' comment='wide class of invader/inside creature attackers'/>
        <flag-bit name='drowning' comment='Is currently drowning'/>
        <flag-bit name='merchant' comment='An active merchant'/>
        <flag-bit name='forest'
                  comment='used for units no longer linked to merchant/diplomacy, they just try to leave mostly'/>

        <flag-bit name='left' comment='left the map'/>
        <flag-bit name='rider' comment='Is riding an another creature'/>
        <flag-bit name='incoming'/>
        <flag-bit name='diplomat'/>

        <flag-bit name='zombie'/>
        <flag-bit name='skeleton'/>
        <flag-bit name='can_swap' comment='Can swap tiles during movement (prevents multiple swaps)'/>
        <flag-bit name='on_ground' comment='The creature is laying on the floor, can be conscious'/>

        <flag-bit name='projectile' comment='Launched into the air? Funny.'/>
        <flag-bit name='active_invader' comment='Active invader (for organized ones)'/>
        <flag-bit name='hidden_in_ambush'/>
        <flag-bit name='invader_origin' comment='Invader origin (could be inactive and fleeing)'/>

        <flag-bit name='coward' comment='Will flee if invasion turns around'/>
        <flag-bit name='hidden_ambusher' comment='Active marauder/invader moving inward?'/>
        <flag-bit name='invades' comment='Marauder resident/invader moving in all the way'/>
        <flag-bit name='check_flows' comment='Check against flows next time you get a chance'/>

        <flag-bit name='ridden'/>
        <flag-bit name='caged'/>
        <flag-bit name='tame'/>
        <flag-bit name='chained'/>

        <flag-bit name='royal_guard'/>
        <flag-bit name='fortress_guard'/>
        <flag-bit name='suppress_wield'/>
        <flag-bit name='important_historical_figure' comment='Is an important historical figure'/>
    </bitfield-type>

    <bitfield-type type-name='unit_flags2' base-type='uint32_t'>
        <flag-bit name='swimming'/>
        <flag-bit name='sparring'/>
        <flag-bit name='no_notify' comment='Do not notify about level gains (for embark etc)'/>
        <flag-bit name='unused'/>

        <flag-bit name='calculated_nerves'/>
        <flag-bit name='calculated_bodyparts'/>
        <flag-bit name='important_historical_figure'
                  comment='Is important historical figure (slight variation)'/>
        <flag-bit name='killed'
                  comment='Has been killed by kill function (slightly different from dead, not necessarily violent death)'/>

        <flag-bit name='cleanup_1' comment='Must be forgotten by forget function (just cleanup)'/>
        <flag-bit name='cleanup_2' comment='Must be deleted (cleanup)'/>
        <flag-bit name='cleanup_3' comment='Recently forgotten (cleanup)'/>
        <flag-bit name='for_trade' comment='Offered for trade'/>

        <flag-bit name='trade_resolved'/>
        <flag-bit name='has_breaks'/>
        <flag-bit name='gutted'/>
        <flag-bit name='circulatory_spray'/>

        <flag-bit name='locked_in_for_trading'
                  comment="Locked in for trading (it's a projectile on the other set of flags, might be what the flying was)"/>
        <flag-bit name='slaughter' comment='marked for slaughter'/>
        <flag-bit name='underworld' comment='Underworld creature'/>
        <flag-bit name='resident' comment='Current resident'/>

        <flag-bit name='cleanup_4'
                  comment='Marked for special cleanup as unused load from unit block on disk'/>
        <flag-bit name='calculated_insulation' comment='Insulation from clothing calculated'/>
        <flag-bit name='visitor_uninvited' comment='Uninvited guest'/>
        <flag-bit name='visitor'/>

        <flag-bit name='calculated_inventory' comment='Inventory order calculated'/>
        <flag-bit name='vision_good' comment='Vision -- have good part'/>
        <flag-bit name='vision_damaged' comment='Vision -- have damaged part'/>
        <flag-bit name='vision_missing' comment='Vision -- have missing part'/>

        <flag-bit name='breathing_good' comment='Breathing -- have good part'/>
        <flag-bit name='breathing_problem' comment='Breathing -- having a problem'/>
        <flag-bit name='roaming_wilderness_population_source'/>
        <flag-bit name='roaming_wilderness_population_source_not_a_map_feature'/>
    </bitfield-type>

    <bitfield-type type-name='unit_flags3' base-type='uint32_t'>
        <flag-bit name='unk0' comment='Is 1 for new and dead creatures, periodicaly set to 0 for non-dead creatures.'/>
        <flag-bit name='unk1' comment='Is 1 for new creatures, periodically set to 0 for non-dead creatures.'/>
        <flag-bit name='unk2' comment='Is set to 1 every tick for non-dead creatures.'/>
        <flag-bit name='unk3' comment='Is periodically set to 0 for non-dead creatures.'/>

        <flag-bit name='announce_titan' comment='Announces creature like an FB or titan.'/>
        <flag-bit name='unk5'/>
        <flag-bit name='unk6'/>
        <flag-bit name='unk7'/>

        <flag-bit name='body_temp_in_range' comment='Is set to 1 every tick for non-dead creatures.'/>
        <flag-bit name='wait_until_reveal' comment='Blocks all kind of things until tile is revealed.'/>
        <flag-bit name='scuttle'>
            <comment>
                Scuttle creature: causes creature to be killed, leaving a behind
                corpse and generating negative thoughts like a real kill.
            </comment>
        </flag-bit>
        <flag-bit name='unk11'/>

        <flag-bit name='ghostly'/>
        <flag-bit name='unk13'/>
        <flag-bit name='unk14'/>
        <flag-bit name='unk15'/>

        <flag-bit name='unk16' comment='something to do with werewolves?'/>
    </bitfield-type>

    <enum-type type-name='personality_facet_type'>
        <enum-item name='ANXIETY'/>
        <enum-item name='ANGER'/>
        <enum-item name='DEPRESSION'/>
        <enum-item name='SELF_CONSCIOUSNESS'/>
        <enum-item name='IMMODERATION'/>
        <enum-item name='VULNERABILITY'/>
        <enum-item name='FRIENDLINESS'/>
        <enum-item name='GREGARIOUSNESS'/>
        <enum-item name='ASSERTIVENESS'/>
        <enum-item name='ACTIVITY_LEVEL'/>
        <enum-item name='EXCITEMENT_SEEKING'/>
        <enum-item name='CHEERFULNESS'/>
        <enum-item name='IMAGINATION'/>
        <enum-item name='ARTISTIC_INTEREST'/>
        <enum-item name='EMOTIONALITY'/>
        <enum-item name='ADVENTUROUSNESS'/>
        <enum-item name='INTELLECTUAL_CURIOSITY'/>
        <enum-item name='LIBERALISM'/>
        <enum-item name='TRUST'/>
        <enum-item name='STRAIGHTFORWARDNESS'/>
        <enum-item name='ALTRUISM'/>
        <enum-item name='COOPERATION'/>
        <enum-item name='MODESTY'/>
        <enum-item name='SYMPATHY'/>
        <enum-item name='SELF_EFFICACY'/>
        <enum-item name='ORDERLINESS'/>
        <enum-item name='DUTIFULNESS'/>
        <enum-item name='ACHIEVEMENT_STRIVING'/>
        <enum-item name='SELF_DISCIPLINE'/>
        <enum-item name='CAUTIOUSNESS'/>
    </enum-type>

	<enum-type type-name='face_and_hair_appearance_trait_order' comment='NOT an index: traits might have duplicates or not exist depending on the creature, but they always happen in this order.'>
		<enum-item name='eye_closeness' comment='lo is wide-set, hi is close-set' />
		<enum-item name='eye_depth' comment='lo is bulging, large is sunken' />
		<enum-item name='eye_wideness' comment='lo is slit eyes, hi is round eyes' />
		<enum-item name='iris_size' comment='lo is small, hi is large' />
		<enum-item name='lip_thickness' comment='lo is thin, hi is thick' />
		<enum-item name='nose_thickness' comment='lo is thin, hi is thick' />
		<enum-item name='nose_length' comment='lo is short, hi is long' />
		<enum-item name='nose_tipped_up_ness' comment='lo is hooked, hi is upturned' />
		<enum-item name='nose_bridge_concavity' comment='lo is concave, hi is convex' />
		<enum-item name='ear_flatness' comment='lo is flattened, hi is splayed' />
		<enum-item name='ear_lobe_freedom' comment='lo is attached, hi is swinging' />
		<enum-item name='ear_broadness' comment='lo is narrow, hi is broad' />
		<enum-item name='ear_tallness' comment='lo is short, hi is tall' />
		<enum-item name='teeth_spacing' comment='lo is tangled, hi is wide' />
		<enum-item name='teeth_length' comment='lo is short, hi is long' />
		<enum-item name='cheekbone_height' comment='lo is low, hi is high' />
		<enum-item name='chin_thickness' comment='lo is narrow, hi is broad' />
		<enum-item name='chin_protrusion' comment='lo is recessed, hi is jutting' />
		<enum-item name='chin_squareness' comment='lo is round, hi is square' />
		<enum-item name='voice_deepness' comment='lo is high-pitched, hi is deep' />
		<enum-item name='voice_raspiness' comment='lo is clear, hi is grating and raspy' />
		<enum-item name='head_thickness' comment='lo is narrow, hi is broad' />
		<enum-item name='head_height' comment='lo is short, hi is tall' />
		<enum-item name='eyebrow_length' comment='lo is short, hi is long' />
		<enum-item name='eyebrow_denseness' comment='lo is sparse, hi is dense' />
		<enum-item name='eyebrow_height' comment='lo is low, hi is high' />
		<enum-item name='sideburn_length' comment = 'lo is short, hi is long' />
		<enum-item name='moustache_length' comment = 'lo is short, hi is long' />
		<enum-item name='beard_length' comment = 'lo is short, hi is long' />
		<enum-item name='hair_length' comment='lo is short, hi is long' />
		<enum-item name='unknown_1' comment='not present in female dwarves'/>
		<enum-item name='hair_curliness' comment='lo is straight, hi is curly' />
		<enum-item name='hair_grease' comment='lo is crinkly, hi is greasy' />
		<enum-item name='hair_density' comment='lo is sparse, hi is dense' />
		<enum-item name='unknown_2' comment='not present in female dwarves'/>
		<enum-item name='skin_wrinkles' comment='0 is very smooth, hi is wrinkled' />
	</enum-type>

    <enum-type type-name='physical_attribute_type'>
        <enum-item name='STRENGTH'/>
        <enum-item name='AGILITY'/>
        <enum-item name='TOUGHNESS'/>
        <enum-item name='ENDURANCE'/>
        <enum-item name='RECUPERATION'/>
        <enum-item name='DISEASE_RESISTANCE'/>
    </enum-type>

    <enum-type type-name='mental_attribute_type'>
        <enum-item name='ANALYTICAL_ABILITY'/>
        <enum-item name='FOCUS'/>
        <enum-item name='WILLPOWER'/>
        <enum-item name='CREATIVITY'/>
        <enum-item name='INTUITION'/>
        <enum-item name='PATIENCE'/>
        <enum-item name='MEMORY'/>
        <enum-item name='LINGUISTIC_ABILITY'/>
        <enum-item name='SPATIAL_SENSE'/>
        <enum-item name='MUSICALITY'/>
        <enum-item name='KINESTHETIC_SENSE'/>
        <enum-item name='EMPATHY'/>
        <enum-item name='SOCIAL_AWARENESS'/>
    </enum-type>

    <enum-type type-name='mood_type' base-type='int16_t'>
        <enum-item name='None' value='-1'/>
        <enum-item name='Fey'/>
        <enum-item name='Secretive'/>
        <enum-item name='Possessed'/>
        <enum-item name='Macabre'/>
        <enum-item name='Fell'/>
        <enum-item name='Melancholy'/>
        <enum-item name='Raving'/>
        <enum-item name='Berserk'/>
        <enum-item name='Baby'/>
        <enum-item name='Traumatized'/>
    </enum-type>

    <enum-type type-name='ghost_type' base-type='int16_t'>
        <enum-item name='MurderousGhost'/>
        <enum-item name='SadisticGhost'/>
        <enum-item name='SecretivePoltergeist'/>
        <enum-item name='EnergeticPoltergeist'/>
        <enum-item name='AngryGhost'/>
        <enum-item name='ViolentGhost'/>
        <enum-item name='MoaningSpirit'/>
        <enum-item name='HowlingSpirit'/>
        <enum-item name='TroublesomePoltergeist'/>
        <enum-item name='RestlessHaunt'/>
        <enum-item name='ForlornHaunt'/>
    </enum-type>

    <enum-type type-name='animal_training_level' base-type='int32_t'>
        <enum-item name='SemiWild'/>
        <enum-item name='Trained'/>
        <enum-item name='WellTrained'/>
        <enum-item name='SkilfullyTrained'/>
        <enum-item name='ExpertlyTrained'/>
        <enum-item name='ExceptionallyTrained'/>
        <enum-item name='MasterfullyTrained'/>
        <enum-item name='Domesticated'/>
        <enum-item name='Unk8'/>
        <enum-item name='WildUntamed'
                   comment='Seems to be used as default when not flags1.tame'/>
    </enum-type>

    <struct-type type-name='unit' key-field='id' instance-vector='$global.world.units.all'>
        <compound type-name='language_name' name='name'/>

        <code-helper name='describe'>
            (describe-obj $.name)
            (awhen (find-creature $.race)
            (fmt "~:(~A ~A~)" $it.caste[$.caste].caste_id $it.creature_id))
        </code-helper>

        <stl-string name='custom_profession'/>

        <enum base-type='int16_t' name='profession' type-name='profession'/>
        <enum base-type='int16_t' name='profession2' type-name='profession'/>

        <int32_t name='race' ref-target='creature_raw'/>

        <compound name='pos' type-name='coord'/>
        <compound name='old_pos' type-name='coord'>
            <comment>
                E.g. for a dead miner, holds the place where he
                was likely hanging around when he got the command
                to mine in an aquifer.
            </comment>
        </compound>

        <compound name='unknown1'>
            <uint32_t name='unk_9c'/>
            <int16_t name='unk_a0'/>
            <padding size='2'/>
            <int16_t name='unk_a4a'/>
            <int16_t name='unk_a4b'/>
        </compound>

        <compound name='path'>
            <compound name='dest' type-name='coord'/>

            <int16_t name='unk_ae' comment='-1 unless dest valid'/>

            <compound name='path' type-name='coord_path'/>
        </compound>

        <compound name='flags1' type-name='unit_flags1'/>
        <compound name='flags2' type-name='unit_flags2'/>
        <compound name='flags3' type-name='unit_flags3'/>

        <compound name='unknown2'>
            -- defined for visiting diplomats
            <int8_t name='unk_ec'/>
            <int32_t name='unk_f0' ref-target='historical_entity'/>
            <int16_t name='unk_f4'/>
            <padding size='2'/>
        </compound>

        <int16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>
        <int8_t name='sex' comment='-1 n/a, 0 female, 1 male'/>

        <int32_t name='id'/>

        <int16_t name='unk_100'/>

        <enum name='training_level' base-type='int32_t'
              type-name='animal_training_level' init-value='WildUntamed'/>
        <int32_t name='unk_104'/>

        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int32_t name='population_id' ref-target='entity_population'/>
        <int32_t comment='v0.34.01'/>
        <int32_t name='invasion_id' ref-target='invasion_info'/>

        <compound name='unknown3'>
            <compound name='unk_path' type-name='coord_path'/>

            <uint32_t name='unk_144'/>
        </compound>

        <stl-vector name='specific_refs'>
            <pointer type-name='specific_ref'/>
        </stl-vector>
        <stl-vector name='refs'>
            <pointer type-name='general_ref'/>
        </stl-vector>

        <compound name='military'>
            <int32_t name='squad_index' ref-target='squad'/>
            <int32_t name='squad_position'/>
            <int32_t name='patrol_cooldown'/>
            <int32_t name='patrol_timer'/>

            <int16_t name='cur_uniform'/>

            <static-array name='uniforms' count='4'>
                <stl-vector>
                    <int32_t ref-target='item'/>
                </stl-vector>
            </static-array>

            <stl-vector comment='v0.34.06'/>

            <bitfield name='pickup_flags'>
                <flag-bit name='update'/>
            </bitfield>

            <stl-vector name='uniform_pickup'>
                <int32_t ref-target='item'/>
            </stl-vector>
            <stl-vector name='uniform_drop'>
                <int32_t ref-target='item'/>
            </stl-vector>

            <stl-vector name='individual_drills'>
                <int32_t ref-target='activity_entry'/>
            </stl-vector>
        </compound>

        <compound name='unknown4'>
            <compound name='population' type-name='world_population_ref'/>

            <uint32_t name='animal_leave_countdown'
                      comment='once 0, it heads for the edge and leaves'/>
            <uint32_t name='unk_20c'/>
        </compound>

        <enum base-type='int16_t' name='mood' type-name='mood_type'/>
        <int16_t name='unk_18e'/>

        <compound name='relations'>
            <uint32_t name='pregnancy_timer'/>
            <pointer name='pregnancy_ptr' type-name='unit_genes'/>
            <int16_t name='pregnancy_mystery' comment='-1 = crash, 1 = many cats'/>
            <int16_t name='unk_21c_b'/>
            <pointer name='ghost_info' type-name='unit_ghost_info'/>

            <int32_t comment='v0.34.01'/>

            <int32_t name='birth_year'/>
            <int32_t name='birth_time'/>
            <int32_t name='curse_year' comment='v0.34.01'/>
            <int32_t name='curse_time' comment='v0.34.01'/>

            <int32_t comment='v0.34.01'/>
            <int32_t comment='v0.34.01'/>

            <int32_t name='old_year' comment='could there be a death of old age time??'/>
            <int32_t name='old_time'/>

            <pointer type-name='unit' name='following'/>
            <uint16_t name='unk_238' comment='invalid unless following'/>

            <int32_t name='pet_owner_id' ref-target='unit'/>
            <int32_t name='spouse_id' ref-target='unit'
                     comment='not used in relationship screen..'/>
            <int32_t name='mother_id' ref-target='unit'/>
            <int32_t name='father_id' ref-target='unit'/>
            <int32_t name='last_attacker_id' ref-target='unit'/>
            <int32_t name='group_leader_id' ref-target='unit'
                     comment='used by goblins, adv mode companions etc'/>
            <int32_t name='draggee_id' ref-target='unit'
                     comment='unit being dragged by this one'/>
            <int32_t name='dragger_id' ref-target='unit'
                     comment='unit that drags this one'/>
            <int32_t name='rider_mount_id' ref-target='unit'/>
            <int32_t name='lover_id' ref-target='unit'/>
            <int16_t name='unk_264'/>
        </compound>

        <compound name='last_hit' type-name='history_hit_item'/>

        <int32_t name='riding_item_id' ref-target='item' comment='v0.34.08'/>

        <stl-vector name='inventory'>
            <pointer type-name='unit_inventory_item'/>
        </stl-vector>

        <stl-vector name='owned_items'>
            <int32_t ref-target='item'/>
        </stl-vector>
        <stl-vector name='traded_items' comment='items brought to trade depot'>
            <int32_t ref-target='item'/>
        </stl-vector>
        <stl-vector name='owned_buildings'>
            <pointer type-name='building'/>
        </stl-vector>
        <stl-vector name='corpse_parts' comment='entries remain even when items are destroyed'>
            <int32_t ref-target='item'/>
        </stl-vector>

        <compound name='job'>
            <uint32_t name='unk_2d8'/>
            <uint32_t name='unk_2dc'/>
            <pointer type-name='unit' name='hunt_target'/>
            <pointer type-name='building' name='destroy_target'/>
            <int16_t name='unk_2e8'/> // fight related
            <int16_t name='unk_2ea'/> // fight related
            <uint16_t name='unk_2ec'/>
            <uint16_t name='unk_2ee'/>
            <uint16_t name='unk_2f0_cntr'/> // increments every tick
            <pointer comment='df_job' name='current_job' type-name='job'/>
            <enum base-type='int16_t' type-name='job_skill' name='mood_skill'/>
            <uint32_t name='unk_2fc'/>
            <uint32_t name='unk_300'/>
            <uint32_t name='unk_304'/>
        </compound>

        <compound name='body'>
            <compound name='components' type-name='body_component_info'/>

            <stl-vector name='wounds'>
                <pointer type-name='unit_wound'/>
            </stl-vector>
            <int32_t name='wound_next_id'/>

            <static-array name='unk_39c' type-name='int32_t' count='10'/>

            <pointer name='body_plan' type-name='caste_body_info'/>

            <uint16_t name='unk_3c8'/>

            <static-array type-name='unit_attribute' name='physical_attrs'
                          count='6' index-enum='physical_attribute_type'/>

            <static-array type-name='int32_t' name='physical_attr_unk3'
                          count='6' index-enum='physical_attribute_type'/>

            <uint32_t name='blood_max'/>
            <uint32_t name='blood_count'/> // 490
            <uint32_t name='unk_494'/>

            <stl-vector name='spatters'>
                <pointer type-name='unit_spatter'/>
            </stl-vector>

            <stl-vector name='body_app_modifiers' type-name='uint32_t'/>
            <stl-vector type-name='uint32_t' name='face_and_hair_appearance'/>
            <uint32_t name='unk_4c8'/>
        </compound>

        <compound name='appearance'>
            <stl-vector type-name='int16_t' name='unk_4cc'/>
            <stl-vector type-name='int32_t' name='unk_4dc'/>
            <stl-vector type-name='int32_t' name='unk_4ec'/>
            <stl-vector type-name='int32_t' name='unk_4fc'/>
            <stl-vector type-name='int32_t' name='unk_50c'/>

            <compound name='genes' type-name='unit_genes'/>

            <stl-vector name='colors' type-name='int32_t'/>
        </compound>

        <compound name='counters'>
            <int32_t name='think_counter'/> // 53c decrements every job_counter reroll, set when changing jobs
            <int32_t name='job_counter'/> // 540 current_job unit/walk done when reach -1, decremented every tick
            <int32_t name='unk_544'/> // if set, decrements every job_counter reroll
            <int16_t name='unk_548'/>

            <int32_t name='death_id' ref-target='death_info' comment='v0.34.01'/>

            <int16_t name='winded'/>
            <int16_t name='stunned'/> // 54c decrements every tick, unstun at 0
            <int16_t name='unconscious'/>
            <int16_t name='unk_550'/>
            <int16_t name='webbed'/>

            <compound name='unk_554' type-name='coord'/>
            <compound name='unk_55a' type-name='coord'/>

            <int16_t name='soldier_mood_countdown'/>
            <enum name='soldier_mood' base-type='int16_t'>
                <enum-item name='None' value='-1'/>
                <enum-item name='MartialTrance'/>
                <enum-item name='Enranged'/>
                <enum-item name='Tantrum'/>
            </enum>

            <uint32_t name='pain'/>
            <uint32_t name='nausea'/>
            <uint32_t name='dizziness'/>
        </compound>

        <compound name='curse'>
            <compound name='add_tags1' type-name='cie_add_tag_mask1'/>
            <compound name='rem_tags1' type-name='cie_add_tag_mask1'/>
            <compound name='add_tags2' type-name='cie_add_tag_mask2'/>
            <compound name='rem_tags2' type-name='cie_add_tag_mask2'/>

            <bool name='name_visible' comment='v0.34.01'/>
            <stl-string name='name' comment='v0.34.01'/>
            <stl-string name='name_plural' comment='v0.34.01'/>
            <stl-string name='name_adjective' comment='v0.34.01'/>

            <uint32_t name='sym_and_color1' comment='v0.34.01'/>
            <uint32_t name='sym_and_color2' comment='v0.34.01'/>
            <uint32_t name='flash_period' comment='v0.34.01'/>
            <uint32_t name='flash_time2' comment='v0.34.01'/>

            <stl-vector comment='v0.34.01'/>
            <stl-vector name='appearance_change' type-name='int32_t' comment='v0.34.01'/>
            <uint32_t comment='v0.34.01'/>
            <uint32_t comment='v0.34.01'/>

            <pointer name='attr_change' comment='v0.34.01'>
                <static-array name='phys_att_perc' type-name='int32_t'
                              count='6' index-enum='physical_attribute_type'/>
                <static-array name='phys_att_unk' type-name='int32_t'
                              count='6' index-enum='physical_attribute_type'/>
                <static-array name='ment_att_perc' type-name='int32_t'
                              count='13' index-enum='mental_attribute_type'/>
                <static-array name='ment_att_unk' type-name='int32_t'
                              count='13' index-enum='mental_attribute_type'/>
            </pointer>
            <uint32_t comment='v0.34.01'/>

            <stl-vector comment='v0.34.01'/>
            <stl-vector comment='v0.34.01'/>
            <stl-vector comment='v0.34.01'/>
            <int32_t name='time_on_site' comment='v0.34.01'/>
            <stl-vector type-name='int32_t' comment='v0.34.01'/>
            <stl-vector type-name='int32_t' comment='v0.34.01'/>
        </compound>

        <compound name='counters2'>
            <uint32_t name='paralysis'/>
            <uint32_t name='numbness'/>
            <uint32_t name='fever'/>
            <uint32_t name='exhaustion'/>

            <uint32_t name='hunger_timer'/>
            <uint32_t name='thirst_timer'/>
            <uint32_t name='sleepiness_timer'/>

            <uint32_t name='stomach_content'/>
            <uint32_t name='stomach_food'/>
            <uint32_t name='vomit_timeout' comment='blocks nausea causing vomit'/>

            <uint32_t name='stored_fat' comment='hunger leads to death only when 0'/>
            <uint32_t name='unk_59c'/>
        </compound>

        <compound name='status'>
            <stl-vector name='misc_traits'>
                <pointer type-name='unit_misc_trait'/>
            </stl-vector>

            <pointer name='eat_history'>
                <compound name='food'>
                    <stl-vector name='item_type'>
                        <enum base-type='int16_t' type-name='item_type'/>
                    </stl-vector>
                    <stl-vector name='item_subtype' type-name='int16_t'/>
                    <compound name='material' type-name='material_vec_ref'/>
                    <stl-vector name='year' type-name='int32_t'/>
                    <stl-vector name='year_time' type-name='int32_t'/>
                </compound>
                <compound name='drink'>
                    <stl-vector name='item_type'>
                        <enum base-type='int16_t' type-name='item_type'/>
                    </stl-vector>
                    <stl-vector name='item_subtype' type-name='int16_t'/>
                    <compound name='material' type-name='material_vec_ref'/>
                    <stl-vector name='year' type-name='int32_t'/>
                    <stl-vector name='year_time' type-name='int32_t'/>
                </compound>
            </pointer>

            <uint32_t name='unk_5b4'/> // 0x3e8 (1000)
            <uint32_t name='unk_5b8'/> // 0x3e8 (1000)

            <stl-vector name='attacker_ids'>
                <int32_t ref-target='unit'/>
            </stl-vector>
            <stl-vector name='attacker_unk' type-name='int16_t'/>

            <uint8_t name='unk_5dc'/>

            <compound type-name='language_name' name='artifact_name'/>
            <stl-vector name='souls'>
                <pointer type-name='unit_soul'/>
            </stl-vector>
            <pointer name='current_soul' type-name='unit_soul'/>

            <stl-vector name='demands'>
                <pointer type-name='unit_demand'/>
            </stl-vector>

            <static-array type-name='bool' name='labors' index-enum='unit_labor' count='94'/>

            <stl-vector name='wrestle_items'>
                <pointer type-name='unit_item_wrestle'/>
            </stl-vector>
            <stl-vector name='unk_6e0' type-name='int32_t'/> // item ids?

            <stl-vector name='recent_events'>
                <pointer type-name='unit_thought'/>
            </stl-vector>

            <stl-vector name='unk_700'/>

            <uint32_t name='happiness'/> // 710
            <uint16_t name='unk_714'/>

            <stl-vector name='unk_718'/>
            <stl-vector name='unk_728'/>

            <stl-vector name='acquintances'>
                <pointer>
                    <int32_t name='unit_id' ref-target='unit'/>
                    <int32_t name='acquintance_level' comment='>= 30 -> long-term'/>
                    <int32_t name='timer' comment='+1 per 10 frames; limit at 1 year'/>
                    <int32_t name='is_friend'/>
                </pointer>
            </stl-vector>

            <stl-vector name='unk_748'/>

            <uint16_t name='unk_758'/>

            -- coordinates, and a set of coordinate vectors
            <compound name='unk_75a' type-name='coord'/>
            <compound name='unk_760' type-name='coord_path'/>
        </compound>

        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
        <int32_t name='hist_figure_id2' ref-target='historical_figure'/>

        <compound name='status2'>
            <uint16_t name='able_stand'/> // 794
            <uint16_t name='able_stand_impair'/> // 796
            <uint16_t name='able_grasp'/> // 798
            <uint16_t name='able_grasp_impair'/> // 79a
            <uint32_t name='unk_7a0'/>

            <stl-vector name='body_part_temperature'>
                <pointer>
                    <uint16_t name='whole'/>
                    <uint16_t name='fraction' comment='the unit is 1/temp_factor in body part'/>
                </pointer>
            </stl-vector>

            <uint32_t name='unk_7b4'/>
            <uint32_t name='unk_7b8'/>
            <uint8_t name='unk_7bc'/>

            <int32_t name='unk_7c0'/>
        </compound>

        <compound name='unknown7'>
            <stl-vector name='unk_7c4'/>
            <stl-vector comment='v0.34.01'/>
        </compound>

        <compound name='syndromes'>
            <stl-vector name='active'>
                <pointer type-name='unit_syndrome'/>
            </stl-vector>
            <stl-vector name='unk_7d4'>
                <int32_t ref-target='syndrome'/>
            </stl-vector>
            <stl-vector name='unk_7e4' type-name='int16_t'/>
        </compound>

        <compound name='reports'>
            <stl-vector name='combat_log'>
                <int32_t ref-target='report'/>
            </stl-vector>
            <stl-vector name='sparring_log'>
                <int32_t ref-target='report'/>
            </stl-vector>
            <stl-vector name='unk_log'>
                <int32_t ref-target='report'/>
            </stl-vector>

            -- Garbage when the matching vector is empty:
            <uint32_t name='last_combat_year'/>
            <uint32_t name='last_sparring_year'/>
            <uint32_t name='last_unk_year'/>
            <uint32_t name='last_combat_time'/>
            <uint32_t name='last_sparring_time'/>
            <uint32_t name='last_unk_time'/>
        </compound>

        <pointer name='health' type-name='unit_health_info'/>

        <stl-vector name='used_items'>
            <comment>Contains worn clothes, armor, weapons, arrows fired by archers</comment>
            <pointer type-name='unit_item_use'/>
        </stl-vector>

        <stl-vector name='adventurer_knows' comment='if not, no names'>
            <int32_t ref-target='unit'/>
        </stl-vector>

        <compound name='unknown8'>
            <stl-vector name='unk1' comment='v0.34.01'/>

            <pointer name='unk2' comment='v0.34.01'/>
            <int32_t name='were_race' ref-target='creature_raw'/>
            <int32_t name='were_caste' ref-target='caste_raw' aux-value='$$.were_race'/>
            <int32_t name='normal_race' ref-target='creature_raw'/>
            <int32_t name='normal_caste' ref-target='caste_raw' aux-value='$$.normal_race'/>
            <int32_t name='unk3' init-value='-1' comment='v0.34.01'/>

            <stl-vector name='unk_850'/>
            <stl-vector name='unk_860' type-name='int32_t'/>

            <int32_t name='enemy_status_slot'/>
            <int32_t name='unk_874_cntr'/> // age ? incremented every tick

            <stl-vector name='body_part_878' type-name='uint8_t'/>
            <stl-vector name='body_part_888' type-name='uint8_t'/>
            <stl-vector name='body_part_898' type-name='uint32_t'/>
            <stl-vector name='body_part_8a8' type-name='uint8_t'/>
            <stl-vector name='body_part_base_ins' type-name='uint16_t'/>
            <stl-vector name='body_part_clothing_ins' type-name='uint16_t'/>
            <stl-vector name='body_part_8d8' type-name='uint16_t'/>

            <stl-vector name='unk_8e8'/> // items ids?

            <stl-vector type-name='uint16_t' name='unk_8f8'/> // same size as 8e8, soldier related?

            <stl-vector name='body_layer_908' type-name='uint32_t'/>

            <int32_t name='unk_918'/>
            <int32_t name='unk_91c'/>
            <int32_t name='unk_920'/>

            <uint32_t name='unk_924'/>
            <uint32_t name='unk_928'/>
        </compound>

        <stl-vector name='burrows'>
            <int32_t ref-target='burrow'/>
        </stl-vector>

        <int32_t name='combat_side_id'/>
    </struct-type>

    <struct-type type-name='unit_ghost_info'>
        <enum base-type='int16_t' name='type' type-name='ghost_type'/>
        <int16_t name="unk_2"/>
        <int16_t name="unk_4"/>
        <int32_t name="unk_8"/>
        <compound name='unk_pos' type-name='coord'/>
        <int32_t name="unk_14"/>
        <int32_t name="unk_18"/>
        <int32_t name="unk_1c"/>
        <int32_t name="unk_20"/>
        <int32_t name="unk_24"/>
        <int32_t name="unk_28"/>
    </struct-type>

    <struct-type type-name='unit_genes'>
        <!-- length matches body_appearance_modifiers + tissue_appearance_modifiers -->
        <df-array name='appearance' type-name='uint8_t'/>
        <!-- two items per color modifier -->
        <df-array name="colors" type-name='int16_t'/>
    </struct-type>

    <struct-type type-name='unit_inventory_item'>
        <pointer name='item' type-name='item'/>

        <code-helper name='describe'>$.mode (describe-obj $.item)</code-helper>

        <enum base-type='int16_t' name='mode'>
            <enum-item name='Carried'/>
            <enum-item name='Weapon' comment='also shield, crutch'/>
            <enum-item name='Worn'/>
            <enum-item name='InBody'/>
            <enum-item name='Flask' comment='attached to clothing'/>
            <enum-item name='WrappedAround' comment='e.g. bandage'/>
            <enum-item name='StuckIn'/>
            <enum-item name='Unk7'/>
            <enum-item name='Shouldered'/>
            <enum-item name='SewnInto'/>
        </enum>

        <int16_t name='body_part_id'
                 refers-to='$$._global._parent._global.body.body_plan.body_parts[$]'/>

        <int32_t comment='always 0'/>
        <int32_t init-value='-1' comment='-1 unless suture'/>
    </struct-type>

    <struct-type type-name='unit_spatter'>
        <int16_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name="mat_index" init-value='-1'/>

        <enum type-name='matter_state' base-type='int16_t' name='mat_state'/>
        <uint16_t name='temperature'/>
        <uint16_t name='temperature_fraction'/>

        <int32_t name="size"/>
        <int16_t name='body_part_id'
                 refers-to='$$._global._parent._global.body.body_plan.body_parts[$]'/>
        <int16_t name="unk_16"/>
    </struct-type>

    <struct-type type-name='unit_attribute'>
        <int32_t name='value' comment='effective = value - soft_demotion'/>
        <int32_t name='max_value'/>
        <int32_t name='improve_counter'
                 comment='counts to PHYS_ATT_RATES improve cost; then value++'/>
        <int32_t name='unused_counter'
                 comment='counts to PHYS_ATT_RATES unused rate; then rust_counter++'/>
        <int32_t name='soft_demotion'
                 comment='0-100; when not 0 blocks improve_counter'/>
        <int32_t name='rust_counter'
                 comment='counts to PHYS_ATT_RATES rust; then demotion_counter++'/>
        <int32_t name='demotion_counter'
                 comment='counts to PHYS_ATT_RATES demotion; then value--; soft_demotion++'/>
    </struct-type>

    <struct-type type-name='unit_syndrome'>
        <int32_t name='type' ref-target='syndrome'/>
        <int32_t name='year'/>
        <int32_t name='year_time'/>
        <int32_t name='ticks'/>
        <stl-vector type-name='int32_t'/>
        <int32_t name='unk1'/>
        <stl-vector name='symptoms'>
            <pointer>
                <int32_t name='unk1'/>
                <int32_t name='unk2'/>
                <int32_t name='ticks'/>
                <stl-vector name='target_bp' type-name='int16_t'/>
                <stl-vector name='target_layer' type-name='int16_t'/>
                <stl-vector name='target_unk1' type-name='int32_t'/>
                <stl-vector name='target_unk2' type-name='int32_t'/>
                <stl-vector name='target_ticks' type-name='int32_t'/>
                <uint32_t name='flags'/>
            </pointer>
        </stl-vector>
        <int16_t name='unk2'/>
        <int32_t name='unk3'/>
        <stl-vector name='unk4' type-name='int32_t'/>
    </struct-type>

    <struct-type type-name='unit_wound' key-field='id'>
        <int32_t name="id"/>
        <stl-vector name="parts">
            <pointer>
                <int32_t name="unk_0"/>
                <int16_t name="body_part_id"/>
                <int16_t name="layer_idx"/>
                <int32_t name="unk_8"/>
                <int16_t name="unk_c"/>
                <int32_t name="unk_10"/>
                <stl-vector name="unk_14" type-name='int16_t'/>
                <stl-vector name="unk_24" type-name='int16_t'/>
                <stl-vector name="unk_34" type-name='int16_t'/>
                <int16_t name="unk_44"/>
                <int32_t name="unk_48"/>
                <int32_t name="unk_4c"/>
                <int32_t name="unk_50"/>
                <int32_t name="unk_54"/>
                <int32_t name="unk_58"/>
                <int32_t name="unk_5c"/>
                <int32_t name="unk_60"/>
                <int32_t name="unk_64"/>
                <int32_t name="unk_68"/>
                <int32_t name="unk_6c"/>
                <int16_t name="unk_70"/>
                <int16_t name="unk_72"/>
                <int32_t name="unk_74"/>
            </pointer>
        </stl-vector>
        <int32_t name="unk_14"/>
        <int32_t name="unk_18"/>
        <int32_t name="unk_1c"/>
        <int32_t name="unk_20"/>
        <int32_t name="unk_24"/>
        <int32_t name="unk_28"/>
        <int32_t name="unk_2c"/>
        <int32_t name="unk_30"/>
        <int32_t name="unk_34"/>
        <int32_t name="unk_38"/>
        <int32_t name="unk_3c"/>
        <pointer name="unk_40"/>
    </struct-type>

    <enum-type base-type='int16_t' type-name='misc_trait_type'>
        <enum-attr name='tag'/>

        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='Migrant'/>
        <enum-item name='RoomComplaint'/>
        <enum-item name='UnnamedResident' comment='upon reaching zero, resident creature gets named'/>
        <enum-item/>
        <enum-item name='ClaimTrinketCooldown'/>
        <enum-item name='ClaimClothingCooldown'/>
        <enum-item name='WantsDrink'>
            <item-attr name='tag' value='ALCOHOLIC'/>
        </enum-item>
        <enum-item name='LikesOutdoors'>
            <item-attr name='tag' value='MOUNTAIN'/>
        </enum-item>
        <enum-item name='Hardened'>
            <item-attr name='tag' value='COMBATHARDNESS'/>
        </enum-item>
        <enum-item name='TimeSinceBreak'>
            <item-attr name='tag' value='TIME_SINCE_BREAK'/>
        </enum-item>
        <enum-item name='OnBreak'>
            <item-attr name='tag' value='ON_BREAK'/>
        </enum-item>
        <enum-item/>
        <enum-item name='CaveAdapt'>
            <item-attr name='tag' value='CAVE_ADAPT'/>
        </enum-item>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='PartiedOut'>
            <item-attr name='tag' value='PARTIED_OUT'/>
        </enum-item>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item/>
        <enum-item name='MilkCounter'>
            <item-attr name='tag' value='MILK_COUNTER'/>
        </enum-item>
        <enum-item/>
        <enum-item/>
        <enum-item name='EggSpent'>
            <item-attr name='tag' value='EGG_SPENT'/>
        </enum-item>
        <enum-item name='GroundedAnimalAnger'>
            <item-attr name='tag' value='GROUNDED_ANIMAL_ANGER'/>
        </enum-item>
        <enum-item/>
        <enum-item name='TimeSinceSuckedBlood'>
            <item-attr name='tag' value='TIME_SINCE_SUCKED_BLOOD'/>
        </enum-item>
        <enum-item name='DrinkingBlood'>
            <item-attr name='tag' value='DRINKING_BLOOD'/>
        </enum-item>
    </enum-type>

    <struct-type type-name='unit_misc_trait'>
        <enum base-type='int16_t' type-name='misc_trait_type' name='id'/>

        <code-helper name='describe'>(fmt "id=~A value=~A" $.id $.value)</code-helper>

        <int32_t name='value'/>
    </struct-type>

    <struct-type type-name='unit_thought'>
        <enum base-type='int16_t' name='type' type-name='unit_thought_type'/>
        <int32_t name="age" comment='+1 per frame'/>
        <int32_t name="subtype" init-value='-1'/>
        <int32_t name="severity"/>
    </struct-type>

    <struct-type type-name='unit_item_wrestle'>
        <padding size='20'/>
        <int32_t name='item1' ref-target='item'/>
        <int32_t name='item2' ref-target='item'/>
        ...?
    </struct-type>

    <struct-type type-name='unit_item_use' key-field='id'>
        <int32_t name="id" ref-target='item'/>
        <int32_t name="time_in_use"/>
        <int32_t name="has_grown_attached"/>
        <int32_t name="affection_level" comment='min 50 for attached, 1000 for name'/>
    </struct-type>

    <struct-type type-name='unit_health_info'>
        <int32_t name="unit_id" ref-target='unit'/>

        <int32_t name="unk_4"/>
        <stl-vector name="body_part_8" type-name='int32_t'/>
        <int32_t name="unk_18"/>
        <int32_t name="unk_1c"/>
        <int16_t name="unk_20"/>

        <stl-vector name="op_history">
            <pointer>
                <enum base-type='int16_t' name="job_type" type-name='job_type'/>

                <compound name='info' is-union='true'>
                    <compound name='crutch'>
                        <int32_t name='item_type' refers-to='(enum-to-key $item_type $)'/>
                        <int32_t name='item_subtype' init-value='-1'/>
                        <int32_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
                        <int32_t name="mat_index" init-value='-1'/>
                        <int32_t name="item_id" ref-target='item'/>
                    </compound>

                    <int32_t name='bed_id' ref-target='building'/>

                    <compound name='bandage'>
                        <int32_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
                        <int32_t name="mat_index" init-value='-1'/>

                        <int32_t name="body_part_id" init-value='-1'/>
                        <int32_t name="item_id" ref-target='item'/>
                    </compound>
                </compound>

                <int32_t name="year"/>
                <int32_t name="year_time"/>

                <int32_t name="doctor_id" ref-target='unit'/>
            </pointer>
        </stl-vector>

        <stl-vector name="unk_34"/>
    </struct-type>

    <struct-type type-name='unit_soul'>
        <int32_t name='unit_id' ref-target='unit'/>

        <compound name='name' type-name='language_name'/>

        <uint32_t name='race' ref-target='creature_raw'/>
        <int8_t name='sex' comment='-1 n/a, 0 female, 1 male'/>
        <uint16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>

        <code-helper name='describe'>
            (describe-obj $.name)
            (awhen (find-creature $.race)
            (fmt "~:(~A ~A~)" $it.caste[$.caste].caste_id $it.creature_id))
        </code-helper>

        <int32_t name='unk1'/>
        <int32_t name='unk2'/>
        <int32_t name='unk3'/>
        <int32_t name='unk4'/>

        <int32_t comment='v0.34.01'/>
        <int32_t comment='v0.34.01'/>
        <int32_t comment='v0.34.01'/>
        <int32_t comment='v0.34.01'/>

        <static-array type-name='unit_attribute' name='mental_attrs' count='13' index-enum='mental_attribute_type'/>

        <stl-vector name='skills'>
            <pointer type-name='unit_skill'/>
        </stl-vector>
        <stl-vector name='preferences'>
            <pointer type-name='unit_preference'/>
        </stl-vector>

        <static-array type-name='uint16_t' name='traits' count='30' index-enum='personality_facet_type'/>

        <stl-vector name='unk5'>
            <pointer>
                <int16_t name='unk1'/>
                <int16_t name='unk2'/>
            </pointer>
        </stl-vector>

        <stl-vector name='unk6'/>
    </struct-type>

    <struct-type type-name='unit_skill'>
        <enum base-type='int16_t' name="id" type-name='job_skill'/>

        <code-helper name='describe'>$.id</code-helper>

        <int32_t name="rating"/>
        <uint32_t name="experience"/>
        <int32_t name="unk_c"/>
        <int32_t name="rusty"/>
        <int32_t name="unk_14"/>
        <int32_t name="unk_18"/>
        <int32_t name="unk_1c"/>
    </struct-type>

    <struct-type type-name='unit_preference'>
        <enum base-type='int16_t' name="type">
            <enum-item name='LikeMaterial'/>
            <enum-item name='LikeCreature'/>
            <enum-item name='LikeFood'/>
            <enum-item name='HateCreature'/>
            <enum-item name='LikeItem'/>
            <enum-item name='LikePlant'/>
            <enum-item name='LikeTree' comment='holdover from 40d and earlier'/>
            <enum-item name='LikeColor'/>
            <enum-item name='LikeShape'/>
        </enum>

        <code-helper name='describe'>$.type</code-helper>

        <compound is-union='true'>
            <enum base-type='int16_t' name="item_type" type-name='item_type'/>
            <int16_t name='creature_id' ref-target='creature_raw'/>
            <int16_t name='color_id' ref-target='descriptor_color'/>
            <int16_t name='shape_id' ref-target='descriptor_shape'/>
            <int16_t name='plant_id' ref-target='plant_raw'/>
        </compound>

        <int16_t name="item_subtype" refers-to='(item-subtype-target $$._parent.item_type $)'/>

        <int16_t name='mattype' ref-target='material' aux-value='$$.matindex'/>
        <int32_t name='matindex'/>

        <bool name='active'/>

        <uint32_t name='unk'/>
    </struct-type>

</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
