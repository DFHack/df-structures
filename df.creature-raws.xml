<data-definition>
    --  The comments indicate the creature raw tags whose presence/absence are
    --  correlated with the flags. Tags with parameters, like those indicating
    --  biomes, are currently not listed.
    <enum-type type-name='creature_raw_flags'> bay12: CreatureDefFlagType
        <enum-item name='EQUIPMENT' comment="[EQUIPMENT_WAGON]"/>
        <enum-item name='EQUIPMENT_WAGON' comment="[EQUIPMENT_WAGON]"/>
        <enum-item name='MUNDANE' comment="[MUNDANE]"/>
        <enum-item name='VERMIN_EATER' comment="[VERMIN_EATER] and [PENETRATEPOWER]"/>
        <enum-item name='VERMIN_GROUNDER' comment="[VERMIN_GROUNDER]"/>
        <enum-item name='VERMIN_ROTTER' comment="[VERMIN_ROTTER]"/>
        <enum-item name='VERMIN_SOIL' comment="[VERMIN_SOIL]"/>
        <enum-item name='VERMIN_SOIL_COLONY' comment="[VERMIN_SOIL_COLONY]"/>

        <enum-item name='LARGE_ROAMING' comment="[LARGE_ROAMING]"/>
        <enum-item name='VERMIN_FISH' comment="[VERMIN_FISH]"/>
        <enum-item name='LOOSE_CLUSTERS' comment="[LOOSE_CLUSTERS]"/>
        <enum-item name='FANCIFUL' comment="[FANCIFUL]"/>
        <enum-item name='BIOME_MOUNTAIN'/>
        <enum-item name='BIOME_GLACIER'/>
        <enum-item name='BIOME_TUNDRA'/>
        <enum-item name='BIOME_SWAMP_TEMPERATE_FRESHWATER'/>

        <enum-item name='BIOME_SWAMP_TEMPERATE_SALTWATER'/>
        <enum-item name='BIOME_MARSH_TEMPERATE_FRESHWATER'/>
        <enum-item name='BIOME_MARSH_TEMPERATE_SALTWATER'/>
        <enum-item name='BIOME_SWAMP_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_SWAMP_TROPICAL_SALTWATER'/>
        <enum-item name='BIOME_SWAMP_MANGROVE'/>
        <enum-item name='BIOME_MARSH_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_MARSH_TROPICAL_SALTWATER'/>

        <enum-item name='BIOME_FOREST_TAIGA'/>
        <enum-item name='BIOME_FOREST_TEMPERATE_CONIFER'/>
        <enum-item name='BIOME_FOREST_TEMPERATE_BROADLEAF'/>
        <enum-item name='BIOME_FOREST_TROPICAL_CONIFER'/>
        <enum-item name='BIOME_FOREST_TROPICAL_DRY_BROADLEAF'/>
        <enum-item name='BIOME_FOREST_TROPICAL_MOIST_BROADLEAF'/>
        <enum-item name='BIOME_GRASSLAND_TEMPERATE'/>
        <enum-item name='BIOME_SAVANNA_TEMPERATE'/>

        <enum-item name='BIOME_SHRUBLAND_TEMPERATE'/>
        <enum-item name='BIOME_GRASSLAND_TROPICAL'/>
        <enum-item name='BIOME_SAVANNA_TROPICAL'/>
        <enum-item name='BIOME_SHRUBLAND_TROPICAL'/>
        <enum-item name='BIOME_DESERT_BADLAND'/>
        <enum-item name='BIOME_DESERT_ROCK'/>
        <enum-item name='BIOME_DESERT_SAND'/>
        <enum-item name='BIOME_OCEAN_TROPICAL'/>

        <enum-item name='BIOME_OCEAN_TEMPERATE'/>
        <enum-item name='BIOME_OCEAN_ARCTIC'/>
        <enum-item name='BIOME_SUBTERRANEAN_WATER'/>
        <enum-item name='BIOME_SUBTERRANEAN_CHASM'/>
        <enum-item name='BIOME_SUBTERRANEAN_LAVA'/>
        <enum-item name='BIOME_POOL_TEMPERATE_FRESHWATER'/>
        <enum-item name='BIOME_POOL_TEMPERATE_BRACKISHWATER'/>
        <enum-item name='BIOME_POOL_TEMPERATE_SALTWATER'/>

        <enum-item name='BIOME_POOL_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_POOL_TROPICAL_BRACKISHWATER'/>
        <enum-item name='BIOME_POOL_TROPICAL_SALTWATER'/>
        <enum-item name='BIOME_LAKE_TEMPERATE_FRESHWATER'/>
        <enum-item name='BIOME_LAKE_TEMPERATE_BRACKISHWATER'/>
        <enum-item name='BIOME_LAKE_TEMPERATE_SALTWATER'/>
        <enum-item name='BIOME_LAKE_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_LAKE_TROPICAL_BRACKISHWATER'/>

        <enum-item name='BIOME_LAKE_TROPICAL_SALTWATER'/>
        <enum-item name='BIOME_RIVER_TEMPERATE_FRESHWATER'/>
        <enum-item name='BIOME_RIVER_TEMPERATE_BRACKISHWATER'/>
        <enum-item name='BIOME_RIVER_TEMPERATE_SALTWATER'/>
        <enum-item name='BIOME_RIVER_TROPICAL_FRESHWATER'/>
        <enum-item name='BIOME_RIVER_TROPICAL_BRACKISHWATER'/>
        <enum-item name='BIOME_RIVER_TROPICAL_SALTWATER'/>
        <enum-item name='GOOD' comment="[GOOD]"/>

        <enum-item name='EVIL' comment="[EVIL]"/>
        <enum-item name='SAVAGE' comment="[SAVAGE]"/>
        <enum-item name='TWO_GENDERS'/>
        <enum-item name='MATES_TO_BREED' comment='capable of breeding, [MALE] and [FEMALE] tags'/>
        <enum-item name='HAS_MALE' comment="[MALE]"/>
        <enum-item name='HAS_FEMALE' comment="[FEMALE]"/>
        <enum-item name='SMALL_RACE' comment="any vermin"/>
        <enum-item name='HAS_ANY_INTELLIGENT_LEARNS'/>

        <enum-item name='HAS_ANY_VERMIN_HATEABLE' comment="[VERMIN_HATEABLE]"/>
        <enum-item name='OCCURS_AS_ENTITY_RACE' comment="included in entity_defaults.txt"/>
        <enum-item name='HAS_ANY_LARGE_PREDATOR' comment="[LARGE_PREDATOR]"/>
        <enum-item name='HAS_ANY_CURIOUS_BEAST'/>
        <enum-item name='HAS_ANY_BENIGN' comment="[BENIGN]"/>
        <enum-item name='HAS_ANY_NATURAL_ANIMAL' comment="[NATURAL]"/>
        <enum-item name='HAS_ANY_MEGABEAST' comment="[MEGABEAST]"/>
        <enum-item name='HAS_ANY_SEMIMEGABEAST' comment="[SEMIMEGABEAST]"/>

        <enum-item name='HAS_ANY_POWER'/>
        <enum-item name='HAS_ANY_VERMIN_MICRO' comment="[VERMIN_MICRO]"/>
        <enum-item name='HAS_ANY_NOT_FIREIMMUNE'/>
        <enum-item name='HAS_ANY_CANNOT_BREATHE_WATER'/>
        <enum-item name='HAS_ANY_CANNOT_BREATHE_AIR' comment="[AQUATIC]"/>
        <enum-item name='HAS_ANY_NOT_FLIER'/>
        <enum-item name='HAS_ANY_CAN_SWIM'/>
        <enum-item name='HAS_ANY_COMMON_DOMESTIC' comment="[COMMON_DOMESTIC]"/>

        <enum-item name='HAS_ANY_UTTERANCES' comment="[UTTERANCES]"/>
        <enum-item name='HAS_ANY_INTELLIGENT_SPEAKS'/>
        <enum-item name='HAS_ANY_FEATURE_BEAST' comment="[FEATURE_BEAST]"/>
        <enum-item name='GENERATED' comment="[GENERATED]"/>
        <enum-item name='HAS_ANY_TITAN' comment="[TITAN]"/>
        <enum-item name='HAS_ANY_UNIQUE_DEMON' comment="[UNIQUE_DEMON]"/>
        <enum-item name='DOES_NOT_EXIST' comment="[DOES_NOT_EXIST]"/>
        <enum-item name='HAS_ANY_NOT_LIVING' comment="[NOT_LIVING]"/>

        <enum-item name='HAS_ANY_MISCHIEVOUS' comment="[MISCHIEVOUS]"/>
        <enum-item name='HAS_ANY_FLIER' comment="[FLIER]"/>
        <enum-item name='HAS_ANY_DEMON'/>
        <enum-item name='HAS_ANY_NIGHT_CREATURE'/>
        <enum-item name='HAS_ANY_NIGHT_CREATURE_HUNTER' comment="[NIGHT_CREATURE_HUNTER]"/>
        <enum-item name='HAS_ANY_NIGHT_CREATURE_BOGEYMAN' comment="[NIGHT_CREATURE_BOGEYMAN]"/>
        <enum-item name='HAS_ANY_CARNIVORE'/>
        <enum-item name='ARTIFICIAL_HIVEABLE' comment="[ARTIFICIAL_HIVEABLE]"/>

        <enum-item name='UBIQUITOUS' comment="[UBIQUITOUS]"/>
        <enum-item name='ALL_CASTES_ALIVE' comment='does not have [NOT_LIVING] tag'/>
        <enum-item name='HAS_ANY_SUPERNATURAL' comment="[SUPERNATURAL]"/>
        <enum-item name='HAS_ANY_HAS_BLOOD' comment="[BLOOD]"/>
        <enum-item name='HAS_ANY_GRAZER' comment="[STANDARD_GRAZER]"/>
        <enum-item name='HAS_ANY_IMMOBILE' comment="[IMMOBILE]"/>
        <enum-item name='HAS_ANY_LOCAL_POPS_CONTROLLABLE' comment="[LOCAL_POPS_CONTROLLABLE]"/>
        <enum-item name='HAS_ANY_OUTSIDER_CONTROLLABLE' comment="[OUTSIDER_CONTROLLABLE]"/>

        <enum-item name='HAS_ANY_LOCAL_POPS_PRODUCE_HEROES' comment="[LOCAL_POPS_PRODUCE_HEROES]"/>
        <enum-item name='HAS_ANY_GRASP'/>
        <enum-item name='HAS_ANY_RACE_GAIT'/>
        <enum-item name='HAS_ANY_FLY_RACE_GAIT' comment="[FLIER]"/>
        <enum-item name='HAS_ANY_SLOW_LEARNER'/>
        <enum-item name='HAS_ANY_NIGHT_CREATURE_NIGHTMARE'/>
        <enum-item name='HAS_ANY_NIGHT_CREATURE_EXPERIMENTER'/>

    </enum-type>

    <enum-type type-name='caste_raw_flags'> bay12: CreatureCasteFlagType
        <enum-item name='CAN_BREATHE_WATER'/>
        <enum-item name='CANNOT_BREATHE_AIR'/>
        <enum-item name='LOCKPICKER'/>
        <enum-item name='MISCHIEVOUS'/>
        <enum-item name='PATTERNFLIER'/>
        <enum-item name='CURIOUS_BEAST'/>
        <enum-item name='CURIOUS_BEAST_ITEM'/>
        <enum-item name='CURIOUS_BEAST_GUZZLER'/>

        <enum-item name='FLEEQUICK'/>
        <enum-item name='AT_PEACE_WITH_WILDLIFE'/>
        <enum-item name='CAN_SWIM'/>
        <enum-item name='OPPOSED_TO_LIFE'/>
        <enum-item name='CURIOUS_BEAST_EATER'/>
        <enum-item name='NO_EAT'/>
        <enum-item name='NO_DRINK'/>
        <enum-item name='NO_SLEEP'/>

        <enum-item name='COMMON_DOMESTIC'/>
        <enum-item name='WAGON_PULLER'/>
        <enum-item name='PACK_ANIMAL'/>
        <enum-item name='FLIER'/>
        <enum-item name='LARGE_PREDATOR'/>
        <enum-item name='MAGMA_VISION'/>
        <enum-item name='FIREIMMUNE'/>
        <enum-item name='FIREIMMUNE_SUPER'/>

        <enum-item name='WEBBER'/>
        <enum-item name='WEBIMMUNE'/>
        <enum-item name='FISHITEM'/>
        <enum-item name='IMMOBILE_LAND'/>
        <enum-item name='IMMOLATE'/>
        <enum-item name='MILKABLE'/>
        <enum-item name='NO_SPRING'/>
        <enum-item name='NO_SUMMER'/>

        <enum-item name='NO_AUTUMN'/>
        <enum-item name='NO_WINTER'/>
        <enum-item name='BENIGN'/>
        <enum-item name='VERMIN_NOROAM'/>
        <enum-item name='VERMIN_NOTRAP'/>
        <enum-item name='VERMIN_NOFISH'/>
        <enum-item name='HAS_NERVES'/>
        <enum-item name='NO_DIZZINESS'/>

        <enum-item name='NO_FEVERS'/>
        <enum-item name='NO_UNIT_TYPE_COLOR'/>
        <enum-item name='NO_CONNECTIONS_FOR_MOVEMENT'/>
        <enum-item name='SUPERNATURAL'/>
        <enum-item name='AMBUSHPREDATOR'/>
        <enum-item name='GNAWER'/>
        <enum-item name='NOT_BUTCHERABLE'/>
        <enum-item name='COOKABLE_LIVE'/>

        <enum-item name='HAS_SECRETION'/>
        <enum-item name='IMMOBILE'/>
        <enum-item name='MULTIPART_FULL_VISION'/>
        <enum-item name='MEANDERER'/>
        <enum-item name='THICKWEB'/>
        <enum-item name='TRAINABLE_HUNTING'/>
        <enum-item name='PET'/>
        <enum-item name='PET_EXOTIC'/>

        <enum-item name='HAS_ROTTABLE'/>
        <enum-item name='CAN_SPEAK' comment='aka INTELLIGENT_SPEAKS'/>
        <enum-item name='CAN_LEARN' comment='aka INTELLIGENT_LEARNS'/>
        <enum-item name='UTTERANCES'/>
        <enum-item name='BONECARN'/>
        <enum-item name='CARNIVORE'/>
        <enum-item name='AQUATIC_UNDERSWIM'/>
        <enum-item name='NOEXERT'/>

        <enum-item name='NOPAIN'/>
        <enum-item name='EXTRAVISION'/>
        <enum-item name='NOBREATHE'/>
        <enum-item name='NOSTUN'/>
        <enum-item name='NONAUSEA'/>
        <enum-item name='HAS_BLOOD'/>
        <enum-item name='TRANCES'/>
        <enum-item name='NOEMOTION'/>

        <enum-item name='SLOW_LEARNER'/>
        <enum-item name='NOSTUCKINS'/>
        <enum-item name='HAS_PUS'/>
        <enum-item name='NOSKULL'/>
        <enum-item name='NOSKIN'/>
        <enum-item name='NOBONES'/>
        <enum-item name='NOMEAT'/>
        <enum-item name='PARALYZEIMMUNE'/>

        <enum-item name='NOFEAR'/>
        <enum-item name='CANOPENDOORS'/>
        <enum-item name='ITEMCORPSE' comment='set if the tag is present; corpse parts go to map_renderer.cursor_other'/>
        <enum-item name='GETS_WOUND_INFECTIONS'/>
        <enum-item name='NOSMELLYROT'/>
        <enum-item name='REMAINS_UNDETERMINED'/>
        <enum-item name='HASSHELL'/>
        <enum-item name='PEARL'/>

        <enum-item name='TRAINABLE_WAR'/>
        <enum-item name='NO_THOUGHT_CENTER_FOR_MOVEMENT'/>
        <enum-item name='ARENA_RESTRICTED'/>
        <enum-item name='LAIR_HUNTER'/>
        <enum-item name='GELDABLE'/>
        <enum-item name='VERMIN_HATEABLE'/>
        <enum-item name='VEGETATION'/>
        <enum-item name='MAGICAL'/>

        <enum-item name='NATURAL_ANIMAL'/>
        <enum-item name='HAS_BABYSTATE'/>
        <enum-item name='HAS_CHILDSTATE'/>
        <enum-item name='MULTIPLE_LITTER_RARE'/>
        <enum-item name='MOUNT'/>
        <enum-item name='MOUNT_EXOTIC'/>
        <enum-item name='FEATURE_ATTACK_GROUP'/>
        <enum-item name='VERMIN_MICRO'/>

        <enum-item name='EQUIPS'/>
        <enum-item name='LAYS_EGGS'/>
        <enum-item name='GRAZER'/>
        <enum-item name='NOTHOUGHT'/>
        <enum-item name='TRAPAVOID'/>
        <enum-item name='CAVE_ADAPT'/>
        <enum-item name='MEGABEAST'/>
        <enum-item name='SEMIMEGABEAST'/>

        <enum-item name='ALL_ACTIVE'/>
        <enum-item name='DIURNAL'/>
        <enum-item name='NOCTURNAL'/>
        <enum-item name='CREPUSCULAR'/>
        <enum-item name='MATUTINAL'/>
        <enum-item name='VESPERTINE'/>
        <enum-item name='LIGHT_GEN'/>
        <enum-item name='LISP'/>

        <enum-item name='GETS_INFECTIONS_FROM_ROT'/>
        <enum-item name='HAS_SOLDIER_TILE'/>
        <enum-item name='ALCOHOL_DEPENDENT'/>
        <enum-item name='CAN_SWIM_INNATE'/>
        <enum-item name='POWER'/>
        <enum-item name='TENDONS'/>
        <enum-item name='LIGAMENTS'/>
        <enum-item name='HAS_TILE'/>

        <enum-item name='HAS_COLOR'/>
        <enum-item name='HAS_GLOW_TILE'/>
        <enum-item name='HAS_GLOW_COLOR'/>
        <enum-item name='FEATURE_BEAST'/>
        <enum-item name='TITAN'/>
        <enum-item name='UNIQUE_DEMON'/>
        <enum-item name='DEMON'/>
        <enum-item name='MANNERISM_LAUGH'/>

        <enum-item name='MANNERISM_SMILE'/>
        <enum-item name='MANNERISM_WALK'/>
        <enum-item name='MANNERISM_SIT'/>
        <enum-item name='MANNERISM_BREATH'/>
        <enum-item name='MANNERISM_POSTURE'/>
        <enum-item name='MANNERISM_STRETCH'/>
        <enum-item name='MANNERISM_EYELIDS'/>
        <enum-item name='NIGHT_CREATURE'/>

        <enum-item name='NIGHT_CREATURE_HUNTER'/>
        <enum-item name='NIGHT_CREATURE_BOGEYMAN'/>
        <enum-item name='CONVERTED_SPOUSE'/>
        <enum-item name='SPOUSE_CONVERTER'/>
        <enum-item name='SPOUSE_CONVERSION_TARGET'/>
        <enum-item name='DIE_WHEN_VERMIN_BITE'/>
        <enum-item name='REMAINS_ON_VERMIN_BITE_DEATH'/>
        <enum-item name='COLONY_EXTERNAL'/>

        <enum-item name='LAYS_UNUSUAL_EGGS'/>
        <enum-item name='RETURNS_VERMIN_KILLS_TO_OWNER'/>
        <enum-item name='HUNTS_VERMIN'/>
        <enum-item name='ADOPTS_OWNER'/>
        <enum-item name='HAS_SOUND_ALERT'/>
        <enum-item name='HAS_SOUND_PEACEFUL_INTERMITTENT'/>
        <enum-item name='NOT_LIVING'/>
        <enum-item name='NO_PHYS_ATT_GAIN'/>

        <enum-item name='NO_PHYS_ATT_RUST'/>
        <enum-item name='CRAZED'/>
        <enum-item name='BLOODSUCKER'/>
        <enum-item name='NO_VEGETATION_PERTURB'/>
        <enum-item name='DIVE_HUNTS_VERMIN'/>
        <enum-item name='VERMIN_GOBBLER'/>
        <enum-item name='CANNOT_JUMP'/>
        <enum-item name='STANCE_CLIMBER'/>

        <enum-item name='CANNOT_CLIMB'/>
        <enum-item name='LOCAL_POPS_CONTROLLABLE'/>
        <enum-item name='OUTSIDER_CONTROLLABLE'/>
        <enum-item name='LOCAL_POPS_PRODUCE_HEROES'/>
        <enum-item name='STRANGE_MOODS'/>
        <enum-item name='HAS_GRASP'/>
        <enum-item name='HAS_FLY_RACE_GAIT'/>
        <enum-item name='HAS_RACE_GAIT'/>

        <enum-item name='NIGHT_CREATURE_NIGHTMARE'/>
        <enum-item name='NIGHT_CREATURE_EXPERIMENTER'/>
        <enum-item name='SPREAD_EVIL_SPHERES_IF_RULER'/>
    </enum-type>

    <enum-type type-name='body_part_raw_flags'> bay12: BodyPartFlagType
        <enum-item name='HEAD'/>
        <enum-item name='UPPERBODY'/>
        <enum-item name='LOWERBODY'/>
        <enum-item name='SIGHT'/>
        <enum-item name='EMBEDDED'/>
        <enum-item name='INTERNAL'/>
        <enum-item name='CIRCULATION'/>
        <enum-item name='SKELETON'/>

        <enum-item name='LIMB'/>
        <enum-item name='GRASP'/>
        <enum-item name='STANCE'/>
        <enum-item name='GUTS'/>
        <enum-item name='BREATHE'/>
        <enum-item name='SMALL'/>
        <enum-item name='THROAT'/>
        <enum-item name='JOINT'/>

        <enum-item name='THOUGHT'/>
        <enum-item name='NERVOUS'/>
        <enum-item name='RIGHT'/>
        <enum-item name='LEFT'/>
        <enum-item name='HEAR'/>
        <enum-item name='SMELL'/>
        <enum-item name='FLIER'/>
        <enum-item name='DIGIT'/>

        <enum-item name='MOUTH'/>
        <enum-item name='APERTURE'/>
        <enum-item name='SOCKET'/>
        <enum-item name='TOTEMABLE'/>
        <enum-item name='HAS_TENDONS'/>
        <enum-item name='HAS_LIGAMENTS'/>
        <enum-item name='UNDER_PRESSURE'/>
        <enum-item name='CANNOT_WRESTLE'/>

        <enum-item name='VERMIN_BUTCHER_ITEM'/>
        <enum-item name='CONNECTOR'/>
        <enum-item name='HAS_CONNECTOR_CHILD'/>
        <enum-item name='EXTRA_BUTCHER_OBJECT'/>
        <enum-item name='PREVENTS_PARENT_COLLAPSE'/>
        <enum-item name='HAS_PREVENTS_PARENT_COLLAPSE_CHILD'/>
        <enum-item name='GELDABLE'/>
        <enum-item name='HAS_HEAD_CHILD'/>
    </enum-type>

    <enum-type type-name='appearance_modifier_type' base-type='int16_t'> bay12: AppearanceModifierType
        <enum-item name='HEIGHT'/>
        <enum-item name='BROADNESS'/>
        <enum-item name='LENGTH'/>
        <enum-item name='CLOSE_SET'/>
        <enum-item name='DEEP_SET'/>
        <enum-item name='HIGH_POSITION'/>
        <enum-item name='LARGE_IRIS'/>
        <enum-item name='WRINKLY'/>

        <enum-item name='CURLY'/>
        <enum-item name='CONVEX'/>
        <enum-item name='DENSE'/>
        <enum-item name='THICKNESS'/>
        <enum-item name='UPTURNED'/>
        <enum-item name='SPLAYED_OUT'/>
        <enum-item name='HANGING_LOBES'/>
        <enum-item name='GAPS'/>

        <enum-item name='HIGH_CHEEKBONES'/>
        <enum-item name='BROAD_CHIN'/>
        <enum-item name='JUTTING_CHIN'/>
        <enum-item name='SQUARE_CHIN'/>
        <enum-item name='ROUND_VS_NARROW'/>
        <enum-item name='GREASY'/>
        <enum-item name='DEEP_VOICE'/>
        <enum-item name='RASPY_VOICE'/>
    </enum-type>

    <enum-type type-name='body_part_layer_flags'> bay12: TissueLayerFlagType
        <enum-item name='CONNECTS'/>
        <enum-item name='MAJOR_ARTERIES'/>
    </enum-type>

    <enum-type type-name='appearance_modifier_growth_interval' base-type='int16_t'> bay12: AppearanceModifierRateScaleType
        <enum-item name='DAILY'/>
        <enum-item name='WEEKLY'/>
        <enum-item name='MONTHLY'/>
        <enum-item name='YEARLY'/>
    </enum-type>

    <enum-type type-name='body_part_position_type' base-type='int16_t'> bay12: BodyPartPositionType
        <enum-item name='FRONT'/>
        <enum-item name='BACK'/>
        <enum-item name='SIDES'/>
        <enum-item name='RIGHT'/>
        <enum-item name='LEFT'/>
        <enum-item name='TOP'/>
        <enum-item name='BOTTOM'/>
    </enum-type>

    <enum-type type-name='body_part_relation_type' base-type='int16_t'> bay12: BodyPartRelationType
        <enum-item name='AROUND'/>
        <enum-item name='SURROUNDED_BY'/>
        <enum-item name='ABOVE'/>
        <enum-item name='BELOW'/>
        <enum-item name='IN_FRONT'/>
        <enum-item name='BEHIND'/>
        <enum-item name='CLEANS'/>
        <enum-item name='CLEANED_BY'/>
    </enum-type>

    <struct-type type-name='body_part_layer_raw' original-name='tissue_layerst'>
        <stl-string name='layer_name'/>

        <code-helper name='describe'>$.layer_name</code-helper>

        <int32_t name='tissue_id' refers-to='$$._upglobal._upglobal._upglobal._upglobal._upglobal.tissue[$]'/>

        <df-flagarray name='flags' index-enum='body_part_layer_flags'/>

        <int32_t name='part_fraction' comment='total 1000'/>

        <int32_t name='healing_rate'/>
        <int32_t name='vascular'/>
        <int32_t name='pain_receptors'/>

        <int32_t name='position'/>
        <enum name='relation' type-name='body_part_position_type'/>
        <enum name='relation_bp' type-name='body_part_relation_type'/>

        <stl-vector name='bp_modifiers' type-name='int32_t'
                    refers-to='$$._global._upglobal._upglobal._upglobal.bp_appearance.modifier_idx[$].refers-to'/>

        <int32_t name='layer_id' comment='across all body parts'/>

        For subordinate layers:
        <int32_t name='parent_idx' refers-to='$$._global._upglobal.layers[$]'/>
        <int32_t name='parent_layer_id'/>

        <int32_t name='layer_depth' comment='-1 for skin and internal organs'/>
        <int32_t name='leak_barrier_id' comment='layer that stops TISSUE_LEAKS, but unused and broken'/>
        <int32_t name='nonsolid_id'/>
        <int32_t name='styleable_id'/>
    </struct-type>

    <struct-type type-name='body_part_raw' original-name='bodypartst'>
        <stl-string name='token'/> bay12: string[BodyPartStrings]
        <stl-string name='category'/>

        <code-helper name='describe'>$.token</code-helper>

        <int16_t name='con_part_id'/> bay12: int16[BodyPartShorts]

        <df-flagarray name='flags' index-enum='body_part_raw_flags'/>

        <stl-vector name='layers' pointer-type='body_part_layer_raw'/>

        <int32_t name='fraction_total'/>
        <int32_t name='fraction_base'/>
        <int32_t name='fraction_fat'/>
        <int32_t name='fraction_muscle'/>

        <int32_t name='relsize'/>
        <int32_t name='number'/>

        <enum name='position' type-name='body_part_position_type'/>

        <stl-vector name='name_singular' pointer-type='stl-string'/>
        <stl-vector name='name_plural' pointer-type='stl-string'/>

        <pointer name='bp_relation_part_id'>
            <stl-vector type-name='int16_t'/>
        </pointer>
        <pointer name='bp_relation_code'>
            <stl-vector type-name='body_part_relation_type'/>
        </pointer>
        <pointer name='bp_relation_coverage'>
            <stl-vector type-name='int16_t'/>
        </pointer>

        <uint16_t name='min_temp'/>
        <uint16_t name='max_temp'/>
        <uint16_t name='temp_factor'/>

        <int32_t name='numbered_idx' comment='defined only if number field nonzero'
                 refers-to='$$._global._upglobal.numbered_masks[$]'/>

        <int16_t name='insulation_fat'/>
        <int16_t name='insulation_muscle'/>
        <int16_t name='insulation_base'/>

        <int32_t name='clothing_item_id' init-value='-1' since='v0.34.06'/>
    </struct-type>

    <enum-type type-name='replacement_method_type' base-type='int16_t'> bay12: ReplacementMethodType
        <enum-item name='FADE'/>
        <enum-item name='ROOT'/>
    </enum-type>

    <enum-type type-name='word_property_type' base-type='int16_t'> bay12: WordPropertyType
        <enum-item name='SINGULAR'/>
        <enum-item name='PLURAL'/>
    </enum-type>

    <enum-type type-name='genetic_model_type' base-type='int16_t'> bay12: GeneticModelType
        <enum-item name='MIX'/>
        <enum-item name='DOMINANT_LESS'/>
        <enum-item name='DOMINANT_MORE'/>
    </enum-type>

    <struct-type type-name='color_modifier_raw' original-name='tl_color_modifierst' key-field='id'>
        <code-helper name='describe'> $.part </code-helper>

        <stl-vector type-name='int32_t' name='pattern_index' ref-target='descriptor_pattern'/>
        <stl-vector type-name='int32_t' name='pattern_frequency'/>

        <stl-vector name='body_part_id' type-name='int16_t'
                    refers-to='$$._global._upglobal.body_info.body_parts[$]'/>
        <stl-vector name='tissue_layer_id' type-name='int16_t'
                    refers-to='$$._global.body_part_id[$$._key].refers-to.layers[$]'
                    index-refers-to='$$._global.body_part_id[$].refers-to'/>

        <enum name='replacement_method' type-name='replacement_method_type'/>
        <int32_t name='start_date'/>
        <int32_t name='end_date'/>
        <int32_t name='importance' />
        <stl-string name="part" />
        <enum name='noun_property' type-name='word_property_type'/>
        <enum name='genetic_model' type-name='genetic_model_type'/>
        <int32_t name="genetic_index"/>
        <int32_t name="id"/>
        <stl-vector name="color_pattern_string" pointer-type='stl-string'/>
        <stl-vector name="frequency_string" pointer-type='stl-string'/>
    </struct-type>

    <struct-type type-name='appearance_modifierst'>
        <code-helper name='describe'> $.type </code-helper>
        <enum type-name='appearance_modifier_type' base-type='int16_t' name='type'/>
        <static-array type-name='int32_t' count='7' name='ranges'/>
        <static-array type-name='int32_t' count='6' name='desc_range'/>
        <int32_t name='growth_rate'/>
        <enum type-name='appearance_modifier_growth_interval' base-type='int16_t' name='growth_interval'/>
        <int32_t name='growth_min'/>
        <int32_t name='growth_max'/>
        <int32_t name='growth_start' comment='in days'/>
        <int32_t name='growth_end'/>
        <int32_t name='importance'/>
        <stl-string name='noun'/>
        <enum name='noun_property' type-name='word_property_type'/>
        <enum name='genetic_model' type-name='genetic_model_type'/>
        <int32_t name='genetic_index'/>
    </struct-type>

    <struct-type type-name='body_appearance_modifier' original-name='body_appearance_modifierst' key-field='id'>
        <compound name='modifier' type-name='appearance_modifierst'/>
        <int32_t name='id'/>
    </struct-type>

    <struct-type type-name='bp_appearance_modifier' original-name='bp_appearance_modifierst' key-field='id'>
        <compound name='modifier' type-name='appearance_modifierst'/>

        <stl-vector name='body_parts'>
            <int16_t refers-to='$$._global._parent._global.body_info.body_parts[$]'/>
        </stl-vector>
        <stl-vector name='tissue_layer'>
            <int16_t refers-to='$$._parent._parent.body_parts[$$._key].refers-to.layers[$]'/>
        </stl-vector>
        <int32_t name='id'/>
    </struct-type>

    <struct-type type-name='caste_clothing_item' original-name='clothing_needs_bpst'>
        <int16_t name="body_part_id"/>
        <bitfield name='flags' base-type='uint32_t'> bay12: CLOTHING_NEEDS_BP_FLAG_*
            <flag-bit name='lowerbody'/>
            <flag-bit name='upperbody'/>
            <flag-bit name='stance'/>
            <flag-bit name='head'/>
            <flag-bit name='grasp'/>
            <flag-bit name='missing'/>
            <flag-bit name='right'/>
            <flag-bit name='left'/>
            <flag-bit name='not_naked'/>
        </bitfield>

        <!-- This stuff appears to be used as temporaries
             during claim selection or whatever. -->
        <static-array name='item' count='3' comment='under, over, cover'>
            <pointer type-name="item"/>
        </static-array>
        <static-array name="current_worn_damage" count='3' type-name='int32_t'/>
        <static-array name="size" count='3' type-name='int32_t'/>
        <static-array name="permit" count='3' type-name='int32_t'/>
        <static-array name="item_flag" count='3'>
            <bitfield base-type='uint32_t'> bay12: CLOTHING_NEEDS_BP_ITEM_FLAG_*
                <flag-bit name='shaped'/>
            </bitfield>
        </static-array>
    </struct-type>

    <enum-type type-name='specialattack_type' base-type='int32_t'> bay12: SpecialAttackType
        <enum-item name='INJECT_EXTRACT'/>
        <enum-item name='SUCK_BLOOD'/>
        <enum-item name='INTERACTION'/>
    </enum-type>

    <struct-type type-name='caste_attack' original-name='attackdefst'>
        <stl-string name='name'/>
        <stl-string name='verb_3rd'/>
        <stl-string name='verb_2nd'/>
        <bitfield name='flags' base-type='uint16_t'>
            <flag-bit name='with'/>
            <flag-bit name='latch'/>
            <flag-bit name='main'/>
            <flag-bit name='edge'/>
            <flag-bit name='independent_multiattack'/>
            <flag-bit name='bad_multiattack'/>
        </bitfield>
        <stl-vector type-name='specialattack_type' name='specialattack_type'/>
        <stl-vector type-name='int16_t' name='specialattack_mat_type' comment='extract injected'/>
        <stl-vector type-name='int32_t' name='specialattack_mat_index'/>
        <stl-vector type-name='matter_state' name='specialattack_mat_state'/>
        <static-array count='3' name='specialattack_temp_mat' comment='parsed during second pass'><stl-vector pointer-type='stl-string'/></static-array>
        <stl-vector type-name='int32_t' name='specialattack_min' comment='amount of extract injected or blood sucked'/>
        <stl-vector type-name='int32_t' name='specialattack_max'/>
        <int32_t name='contact_perc'/>
        <int32_t name='penetration_perc'/>
        <int16_t name='conflict_check_bp' since='v0.40.01'/>
        <int16_t name='conflict_check_tl' since='v0.40.01'/>
        <stl-vector type-name='int16_t' name='body_part_idx'/>
        <stl-vector type-name='int16_t' name='tissue_layer_idx'/>
        <enum base-type="int16_t" type-name="job_skill" name="skill"/>
        <int32_t name='velocity_modifier'/>
        <stl-vector pointer-type='stl-string' name='specialattack_interaction_tmp_name' comment='parsed during second pass'/>
        <stl-vector type-name='int32_t' name='specialattack_interaction_id'/>
        <int32_t name='time_to_strike' since='v0.40.01'/>
        <int32_t name='time_to_recover' since='v0.40.01'/>
    </struct-type>

    <enum-type type-name='gait_type' base-type='int32_t'> bay12: GaitType
        <enum-item name='WALK'/>
        <enum-item name='FLY'/>
        <enum-item name='SWIM'/>
        <enum-item name='CRAWL'/>
        <enum-item name='CLIMB'/>
    </enum-type>

    <struct-type type-name='gait_info' original-name='gaitst'>
        <int32_t name='action_string_idx' refers-to='$global.world.raws.creatures.action_strings[$].value'/>
        <int32_t name='full_speed'/>
        <int32_t name='buildup_time'/>
        <int32_t name='turn_max'/>
        <int32_t name='start_speed'/>
        <int32_t name='energy_use'/>
        <bitfield name='flags'>
            <flag-bit name='layers_slow'/>
            <flag-bit name='strength'/>
            <flag-bit name='agility'/>
        </bitfield>
        <int32_t name='stealth_slows'/>
    </struct-type>

    <bitfield-type type-name='creature_interaction_target_flags'> bay12: CE_TARGET_FLAG_*
        <flag-bit name='LINE_OF_SIGHT'/>
        <flag-bit name='TOUCHABLE'/>
        <flag-bit name='DISTURBER_ONLY'/>
        <flag-bit name='SELF_ALLOWED'/>
        <flag-bit name='SELF_ONLY'/>
    </bitfield-type>

    <struct-type type-name='creature_interaction' original-name='interaction_informationst'>
        <stl-vector pointer-type='stl-string' name='bp_required_type'/>
        <stl-vector pointer-type='stl-string' name='bp_required_name'/>
        <stl-string name='item_str0'/>
        <stl-string name='item_str1'/>
        <stl-string name='material_str0'/>
        <stl-string name='material_str1'/>
        <stl-string name='material_str2'/>
        <enum type-name='breath_attack_type' name='material_breath'/>
        <stl-string name='verb_2nd'/>
        <stl-string name='verb_3rd'/>
        <stl-string name='verb_mutual'/>
        <stl-string name='verb_reverse_2nd' comment='for RETRACT_INTO_BP, e.g. "unroll"'/>
        <stl-string name='verb_reverse_3rd'/>
        <stl-string name='target_verb_2nd'/>
        <stl-string name='target_verb_3rd'/>
        <stl-string name='interaction_type'/>
        <int32_t name='type_id' ref-target='interaction'/>
        <stl-vector name='usage_hint' type-name='interaction_source_usage_hint'/>
        <stl-vector name='location_hint' type-name='interaction_effect_location_hint'/>
        <bitfield name='flags' base-type='int32_t'> bay12: INTERACTION_INFORMATION_FLAG_*
            <flag-bit name='CAN_BE_MUTUAL'/>
            <flag-bit name='VERBAL'/>
            <flag-bit name='FREE_ACTION'/>
        </bitfield>
        <stl-vector name='target_token' pointer-type='stl-string'/>
        <stl-vector name='target_flags' type-name='creature_interaction_target_flags'/>
        <stl-vector name='target_ranges' type-name='int32_t'/>
        <stl-vector name='max_target_token' pointer-type='stl-string'/>
        <stl-vector name='max_target_numbers' type-name='int32_t'/>
        <stl-vector name='verbal_speeches' type-name='int32_t'/>
        <stl-vector name='verbal_speeches_token'/>
        <stl-string name='adv_name'/>
        <int32_t name='wait_period'/>
    </struct-type>

    <struct-type type-name='caste_body_info' original-name='bodyst'>
        <stl-vector name='body_parts' pointer-type='body_part_raw'/>

        <stl-vector name='attacks' pointer-type='caste_attack'/>

        <stl-vector name='interactions'>
            <pointer> bay12: body_actionst
                <enum base-type='int32_t' name='type'> bay12: BodyActionType
                    <enum-item name='RETRACT_INTO_BP'/>
                    <enum-item name='CAN_DO_INTERACTION'/>
                    <enum-item name='ROOT_AROUND'/>
                </enum>
                <compound name='interaction' type-name='creature_interaction'/>
            </pointer>
        </stl-vector>

        <stl-vector name='extra_butcher_objects'>
            <pointer> bay12: extra_butcher_objectst
                <int16_t name='bp'/>
                <stl-string name='shape_token'/>
                <int32_t name='shape_id' ref-target='descriptor_shape'/>
                <stl-string name='item_str1'/>
                <stl-string name='item_str2'/>
                <stl-string name='mat_str1'/>
                <stl-string name='mat_str2'/>
                <stl-string name='mat_str3'/>
                <enum name='item_type' type-name='item_type'/>
                <int16_t name='item_subtype'/>
                <int16_t name='mat_type'/>
                <int32_t name='mat_index'/>
                <bitfield base-type='uint32_t'> bay12: EBO_FLAG_*
                    <flag-bit name='material_any_hard_stone'/>
                </bitfield>
            </pointer>
        </stl-vector>

        <int32_t name='total_relsize' comment='unless INTERNAL or EMBEDDED'/>

        <stl-vector name='layer_part' index-refers-to='$$._global.layer_idx[$].refers-to'>
            <int16_t refers-to='$$._global.body_parts[$]'/>
        </stl-vector>
        <stl-vector name='layer_idx'>
            <int16_t refers-to='$$._global.layer_part[$$._key].refers-to.layers[$]'/>
        </stl-vector>

        <stl-vector type-name='uint32_t' name='numbered_masks'
                    comment='1 bit per instance of a numbered body part'/>

        <stl-vector name='layer_nonsolid' index-refers-to='$$._global.layer_part[$].refers-to'>
            Index in nonsolid_layers if applicable
            <int32_t refers-to='$$._global.nonsolid_layers[$].refers-to'/>
        </stl-vector>

        <stl-vector name='nonsolid_layers'>
            For blood, magma, iron men etc, lists BLOOD/MAGMA/GAS layers.
            For other titans and FBs, lists all layers. For ordinary, empty.
            <int32_t refers-to='$$._global.layer_idx[$].refers-to'/>
        </stl-vector>

        <bitfield name='flags' since='v0.34.01'> bay12: BODY_FLAG_*
            <flag-bit name='has_retract_action'/>
            <flag-bit name='has_root_around'/>
        </bitfield>

        <static-array name='gait_info' count="5" index-enum='gait_type'>
            <stl-vector pointer-type='gait_info'/>
        </static-array>

        <compound name='materials' type-name='material_vec_ref'/>

        Sums of values in the parts:
        <int32_t name='fraction_total'/>
        <int32_t name='fraction_base'/>
        <int32_t name='fraction_fat'/>
        <int32_t name='fraction_muscle'/>

        <static-array name='default_gait_index' count="5" index-enum='gait_type' type-name='int32_t'/>
        <static-array name='fastest_gait_index' count="5" index-enum='gait_type' type-name='int32_t'/>

        <pointer name='clothing_items' since='v0.34.06'>
            <stl-vector pointer-type='caste_clothing_item'/>
        </pointer>
    </struct-type>

    <enum-type type-name='lair_characteristic_type' base-type='int16_t'> bay12: LairCharacteristicType
        <enum-item name='HAS_DOORS'/>
    </enum-type>

    <enum-type type-name='habit_type' base-type='int16_t'> bay12: HabitType
        <enum-item name='GRIND_BONE_MEAL'/>
        <enum-item name='COOK_BLOOD'/>
        <enum-item name='GRIND_VERMIN'/>
        <enum-item name='COOK_VERMIN'/>
        <enum-item name='COOK_PEOPLE'/>
        <enum-item name='COLLECT_TROPHIES'/>
        <enum-item name='EAT_BONE_PORRIDGE'/>
        <enum-item name='USE_ANY_MELEE_WEAPON'/>
        <enum-item name='COLLECT_WEALTH'/>
        <enum-item name='GIANT_NEST'/>
    </enum-type>

    <struct-type type-name='caste_raw' original-name='creature_castest'>
        <stl-string name='caste_id'/> bay12: string[CreatureCasteStrings]

        <code-helper name='describe'>(fmt "~:(~A ~A~)" $.caste_id $.caste_name[0])</code-helper>
        <code-helper name='find-instance'>$global.world.raws.creatures.all[$$].caste[$]</code-helper>

        <static-array type-name='stl-string' name='caste_name' count='3'/>

        <stl-string name='vermin_bite_txt'/>
        <stl-string name='gnawer_txt'/>

        <static-array type-name='stl-string' name='baby_name' count='2'/>
        <static-array type-name='stl-string' name='child_name' count='2'/>
        <static-array type-name='stl-string' name='itemcorpse_str' count='5'/> // temporary
        <static-array type-name='stl-string' name='remains' count='2'/>
        <stl-string name='description'/>
        <static-array type-name='stl-string' name='mannerisms' count='17'>
            <comment>fingers[2], nose, ear, head, eyes, mouth, hair, knuckles, lips, cheek, nails, f eet, arms, hands, tongue, leg</comment>
        </static-array>

        <uint8_t name='caste_tile'/> bay12: uchar[CreatureCasteUChar]
        <uint8_t name='caste_soldier_tile'/>
        <uint8_t name='caste_alttile'/>
        <uint8_t name='caste_soldier_alttile'/>
        <uint8_t name='caste_glowtile'/>

        <uint16_t name='homeotherm'/> bay12: ushort[CreatureCasteUShort]
        <uint16_t name='min_temp'/>
        <uint16_t name='max_temp'/>
        <uint16_t name='fixed_temp'/>

        <static-array type-name='int16_t' name='caste_color' count='3'/> bay12: short[CreatureCasteShort]

        <compound name='misc'>
            <int16_t name='litter_size_min'/>
            <int16_t name='litter_size_max'/>
            <int16_t name='penetratepower'/>
            <int16_t name='vermin_bite_chance'/>
            <int16_t name='grasstrample'/>
            <int16_t name='buildingdestroyer'/>
            <enum base-type='int16_t' name='itemcorpse_itemtype' type-name='item_type' comment="no longer used? Changes when the same save is reloaded"/>
            <int16_t name='itemcorpse_itemsubtype'/>
            <int16_t name='itemcorpse_materialtype'
                     ref-target='material' aux-value='$$.itemcorpse_materialindex' comment="no longer used? Changes when the same save is reloaded"/>
            <int16_t name='itemcorpse_materialindex'/> // NOT 32-bit!
            <int16_t name='itemcorpse_quality'/>
            <static-array type-name='int16_t' name='remains_color' count='3'/>
            <int16_t name='difficulty'/>
            <static-array type-name='int16_t' name='caste_glowcolor' count='3' comment="different from same save with 0.44.12"/>
            <int16_t name='beach_frequency'/>
            <int16_t name='clutch_size_min'/>
            <int16_t name='clutch_size_max'/>
            <int16_t name='vision_arc_min'/>
            <int16_t name='vision_arc_max'/>
            <int32_t name='unused_01'/> bay12: int32_t[CreatureCasteLong]
            <int32_t name='modvalue'/>
            <int32_t name='petvalue'/>
            <int32_t name='milkable'/>
            <int32_t name='viewrange'/>
            <int32_t name='maxage_min'/>
            <int32_t name='maxage_max'/>
            <int32_t name='baby_age' comment="no longer used? Silly large value 7628903"/>
            <int32_t name='child_age' comment="no longer used? Changes when the same save is reloaded"/>
            <int32_t name='unused_10'/>
            <int32_t name='trade_capacity'/>
            <int32_t name='army_strength'/>
            <int32_t name='pop_ratio'/>
            <int32_t name='adult_size'/>
            <int32_t name='bone_mat' ref-target='material' aux-value='$$.bone_matidx'/>
            <int32_t name='bone_matidx'/>
            <int32_t name='fish_mat_index' refers-to='(food-mat-by-idx $Fish $)'/>
            <int32_t name='egg_mat_index' refers-to='(food-mat-by-idx $Eggs $)'/>
            <static-array type-name='int32_t' name='attack_trigger' count='3'/>
            <int32_t name='egg_size'/>
            <int32_t name='grazer'/>
            <int32_t name='petvalue_divisor'/>
            <int32_t name='prone_to_rage'/>
            <int32_t name='general_mat_force_multiplier'/>
            <int32_t name='general_mat_force_divisor'/>
            <static-array type-name='int32_t' name='unused_30' count='27'/>
        </compound>

        <compound name='personality'> bay12: creature_personality_profilest
            <static-array type-name='int16_t' name='min' count='50' index-enum='personality_facet_type'/>
            <static-array type-name='int16_t' name='med' count='50' index-enum='personality_facet_type'/>
            <static-array type-name='int16_t' name='max' count='50' index-enum='personality_facet_type'/>
        </compound>

        <df-flagarray name='flags' index-enum='caste_raw_flags'/>

        <int32_t name='index' comment='global across creatures'/>

        <compound name='body_info' type-name='caste_body_info'/>

        <stl-vector name='caste_speech_idx' type-name='int32_t'/>
        <stl-vector name='caste_speech_token' pointer-type='stl-string'/>

        <static-array name='skill_rates' count='4'> learn_ip_perc, last_used, rust, demote
            <static-array type-name='int32_t' count='149' index-enum='job_skill'/>
        </static-array>

        <compound name='attributes'>
            <static-array name='phys_att_range' count='6' index-enum='physical_attribute_type'>
                <static-array type-name='int32_t' count='7'/>
            </static-array>
            <static-array name='ment_att_range' count='13' index-enum='mental_attribute_type'>
                <static-array type-name='int32_t' count='7'/>
            </static-array>
            <static-array name='phys_att_rates' count='6' index-enum='physical_attribute_type'>
                <static-array type-name='int32_t' count='4'/>
            </static-array>
            <static-array name='ment_att_rates' count='13' index-enum='mental_attribute_type'>
                <static-array type-name='int32_t' count='4'/>
            </static-array>
            <static-array type-name='int32_t' name='phys_att_cap_perc' count='6' index-enum='physical_attribute_type'/>
            <static-array type-name='int32_t' name='ment_att_cap_perc' count='13' index-enum='mental_attribute_type'/>
        </compound>

        <enum name='sex' type-name='pronoun_type'/>

        <static-array name='orientation_male' count='3' type-name='int32_t' since='v0.40.01'/>
        <static-array name='orientation_female' count='3' type-name='int32_t' since='v0.40.01'/>

        <stl-vector type-name='int32_t' name='body_size' comment='age in ticks'/>
        <stl-vector type-name='int32_t' name='body_size_day' comment='size at the age at the same index in body_size'/>

        <stl-vector name='body_appearance_modifiers' pointer-type='body_appearance_modifier'/>

        <compound name='bp_appearance'>
            <stl-vector name='modifiers' pointer-type='bp_appearance_modifier'/>

            <stl-vector name='modifier_idx' type-name='int32_t'
                        refers-to='$$._parent._parent.modifiers[$]'
                        index-refers-to='$$._parent.part_idx[$].refers-to'/>
            <stl-vector name='part_idx' type-name='int16_t'
                        refers-to='$$._global.body_info.body_parts[$]'/>
            <stl-vector name='layer_idx' type-name='int16_t'
                        refers-to='$$._parent._parent.part_idx[$$._key].refers-to.layers[$]'
                        index-refers-to='$$._parent.part_idx[$].refers-to'/>

            -- Subset of modifiable layers, i.e. where layer_idx != -1
            <stl-vector name='style_part_idx' type-name='int16_t'
                        refers-to='$$._global.body_info.body_parts[$]'/>
            <stl-vector name='style_layer_idx' type-name='int16_t'
                        refers-to='$$._parent._parent.style_part_idx[$$._key].refers-to.layers[$]'
                        index-refers-to='$$._parent.style_part_idx[$].refers-to'/>
            <stl-vector name='style_list_idx' type-name='int32_t'
                        refers-to='$$._parent._parent.modifier_idx[$].refers-to'
                        index-refers-to='$$._parent.style_layer_idx[$].refers-to'/>
        </compound>

        <stl-vector name='color_modifiers' pointer-type='color_modifier_raw'/>
        <stl-vector name='tissue_styles' pointer-type='tissue_style_raw'/>
        <stl-vector name='shearable_tissue_layer'>
            <pointer> bay12: shearable_tissue_layerst
                <enum name='type' type-name='appearance_modifier_type'/>
                <int32_t name='length'/>

                <stl-vector name='part_idx' type-name='int16_t'/>
                <stl-vector name='layer_idx' type-name='int16_t'/>
                <stl-vector name='bp_modifiers_idx' type-name='int32_t'/>
                -- unit can be sheared at farmers if it has one u.appearance.bp_modifiers[$.bp_modifiers_idx[i]] >= $.length
            </pointer>
        </stl-vector>

        <static-array name='body_app_mode_rate_index' count='4'>
            <stl-vector/>
        </static-array>
        <static-array name='bp_app_mode_rate_index' count='4'>
            <stl-vector type-name='int32_t'/>
        </static-array>

        <int32_t name='appearance_gene_count'/>
        <int32_t name='color_gene_count'/>

        <stl-vector name='natural_skill_id'>
            <enum base-type='int16_t' type-name='job_skill'/>
        </stl-vector>
        <stl-vector type-name='int32_t' name='natural_skill_exp'/>
        <stl-vector type-name='skill_rating' name='natural_skill_lvl'/>

        <compound name='caste_profession_name'>
            <static-array type-name='stl-string' name='singular' index-enum='profession'/>
            <static-array type-name='stl-string' name='plural' index-enum='profession'/>
        </compound>

        <compound name='extracts'>
            <stl-vector type-name='int16_t' name='extract_mat'/>
            <stl-vector type-name='int32_t' name='extract_matidx'/>
            <static-array name='extract_str' count='3'>
                <stl-vector pointer-type='stl-string'/>
            </static-array>

            <int16_t name='milkable_mat'/>
            <int32_t name='milkable_matidx'/>
            <static-array name='milkable_str' count='3'>
                <stl-string/>
            </static-array>

            <int16_t name='webber_mat'/>
            <int32_t name='webber_matidx'/>
            <static-array name='webber_str' count='3'>
                <stl-string/>
            </static-array>

            <int16_t name='vermin_bite_mat'/>
            <int32_t name='vermin_bite_matidx'/>
            <int16_t name='vermin_bite_chance'/>
            <static-array name='vermin_bite_str' count='3'>
                <stl-string/>
            </static-array>

            <int16_t name='tendons_mat'/>
            <int32_t name='tendons_matidx'/>
            <static-array name='tendons_str' count='3'>
                <stl-string/>
            </static-array>
            <int32_t name='tendons_heal'/>

            <int16_t name='ligaments_mat'/>
            <int32_t name='ligaments_matidx'/>
            <static-array name='ligaments_str' count='3'>
                <stl-string/>
            </static-array>
            <int32_t name='ligaments_heal'/>

            <int16_t name='blood_state'/>
            <int16_t name='blood_mat'/>
            <int32_t name='blood_matidx'/>
            <static-array name='blood_str' count='3'>
                <stl-string/>
            </static-array>

            <int16_t name='pus_state'/>
            <int16_t name='pus_mat'/>
            <int32_t name='pus_matidx'/>
            <static-array name='pus_str' count='3'>
                <stl-string/>
            </static-array>

            <stl-vector type-name='int16_t' name='egg_material_mattype'/>
            <stl-vector type-name='int32_t' name='egg_material_matindex'/>
            <static-array name='egg_material_str' count='3'>
                <stl-vector pointer-type='stl-string'/>
            </static-array>

            <stl-vector name='lays_unusual_eggs_itemtype'>
                <enum base-type='int16_t' type-name='item_type'/>
            </stl-vector>
            <stl-vector name='lays_unusual_eggs_itemsubtype' type-name='int16_t'/>
            <stl-vector type-name='int16_t' name='lays_unusual_eggs_mattype'/>
            <stl-vector type-name='int32_t' name='lays_unusual_eggs_matindex'/>
            <static-array name='lays_unusual_eggs_str' count='5'>
                <stl-vector pointer-type='stl-string'/>
            </static-array>
        </compound>

        <stl-vector name='secretion'>
            <pointer> bay12: secretion_profilest
                <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
                <int32_t name='mat_index'/>
                <enum type-name='matter_state' base-type='int16_t' name='mat_state'/>
                <stl-string name="mat_str1"/>
                <stl-string name="mat_str2"/>
                <stl-string name="mat_str3"/>
                <stl-vector name="body_part_id" type-name="int16_t" refers-to='$$._upglobal.body_info.body_parts[$]'/>
                <stl-vector name="layer_id" type-name="int16_t" refers-to='$$._parent._parent.body_part_id[$$._key].refers-to.layers[$]'/>
                <enum name='cause' base-type='int32_t'> bay12: SecretionCondition
                    <enum-item name='CONTINUOUS'/>
                    <enum-item name='EXTREME_EMOTION'/>
                    <enum-item name='EXERTION'/>
                </enum>
            </pointer>
        </stl-vector>

        <stl-vector name='creature_class' pointer-type='stl-string'/>

        <compound name='unknown2'> not actually a compound
            <stl-vector name='syndrome_dilution_identifier' pointer-type='stl-string' since='v0.42.01' comment='SYNDROME_DILUTION_FACTOR'/>
            <stl-vector name='syndrome_dilution_factor' type-name='int32_t' since='v0.42.01' comment='SYNDROME_DILUTION_FACTOR'/>

            <stl-vector name='gobble_vermin_class' pointer-type='stl-string'/>
            <stl-vector name='gobble_vermin_creature' pointer-type='stl-string'/>
            <stl-vector name='gobble_vermin_caste' pointer-type='stl-string'/>

            <stl-vector name='infect_all' type-name='int32_t' ref-target='syndrome'
                        since='v0.34.01' comment='for Injected syndromes'/>
            <stl-vector name='infect_local' type-name='int32_t' ref-target='syndrome'
                        since='v0.34.01' comment='for Contact syndromes'/>
            <stl-vector name='infect_inhaled' type-name='int32_t' ref-target='syndrome' since='v0.34.01'/>
            <stl-vector name='infect_ingested' type-name='int32_t' ref-target='syndrome' since='v0.34.01'/>

            <df-flagarray name='mannerism_flag'/>
            <df-flagarray name='mannerism_situation_flag'/>

            <static-array name='armor_sizes' count='4' comment='index by UBSTEP'>
                <static-array type-name='int32_t' count='4' comment='index by LBSTEP'/>
            </static-array>
            <static-array type-name='int32_t' name='pants_sizes' count='4' comment='index by LBSTEP'/>
            <int32_t name='helm_size'/>
            <static-array type-name='int32_t' name='shield_sizes' count='4' comment='index by UPSTEP'/>
            <static-array type-name='int32_t' name='shoes_sizes' count='4' comment='index by UPSTEP'/>
            <static-array type-name='int32_t' name='gloves_sizes' count='4' comment='index by UPSTEP'/>

            for world generation
            <compound name='materials' type-name='material_vec_ref'/>
            <stl-vector name='material_states' type-name='matter_state'/>
            <stl-vector name='material_small' type-name='int8_t'/>
            <stl-vector name='material_butcher_amount' type-name='int32_t'/>
            <stl-vector name='material_defining_flag' type-name='int32_t' since='v0.34.01'/>

            muscle:
            <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
            <int32_t name='mat_index'/>
        </compound>

        <static-array type-name='int32_t' name='habit_num' count='2'/>
        <stl-vector name='habit_type' type-name='habit_type'/>
        <stl-vector name='habit_chance' type-name='int32_t'/>
        <stl-vector name='lair_type' type-name='lair_type'/>
        <stl-vector name='lair_chance' type-name='int32_t'/>
        <stl-vector name='lair_characteristic_type' type-name='lair_characteristic_type'/>
        <stl-vector name='lair_characteristic_chance' type-name='int32_t'/>
        <compound name='lair_hunter_speech'>
            <stl-vector name='index' type-name='int32_t'/>
            <stl-vector name='token' pointer-type='stl-string'/>
        </compound>
        <compound name='specific_food'>
            <stl-vector name='creature' type-name='int32_t' ref-target='creature_raw'/>
            <stl-vector name='plant' type-name='int32_t' ref-target='plant_raw'/>
            <stl-vector name='creature_str' pointer-type='stl-string'/>
            <stl-vector name='plant_str' pointer-type='stl-string'/>
        </compound>

        <stl-vector name='sound'>
            <pointer> bay12: creature_soundst
                <int32_t name='unk_1'/>
                <int32_t name='unk_2' init-value='100'/>
                <int32_t name='unk_3' init-value='1000'/>
                <int32_t name='unk_4'/>
                <static-array name='caption' type-name='stl-string' count='3'/>
            </pointer>
        </stl-vector>
        <stl-vector type-name='int32_t' name='sound_alert'/> bay12: vector[CreatureSoundType]
        <stl-vector type-name='int32_t' name='sound_peaceful_intermittent'
                    refers-to='$$._global.sound[$]'/>

        <stl-vector name='material_force_adjust' since='v0.34.01'>
            <pointer> bay12: material_force_adjustst
                <stl-string name='mat_1'/>
                <stl-string name='mat_2'/>
                <stl-string name='mat_3'/>
                <int16_t name='mat_type'/>
                <int32_t name='mat_indx'/>
                <int32_t name='multiplier'/>
                <int32_t name='divisor'/>
            </pointer>
        </stl-vector>

        -- v0.40.01
        <int32_t name="smell_trigger"/>
        <int32_t name="odor_level"/>
        <stl-string name="odor_string"/>
        <int32_t name="low_light_vision"/>
        <stl-vector pointer-type='stl-string' name="sense_creature_class"/>
        <stl-vector type-name='int8_t' name="sense_creature_tile"/>
        <stl-vector type-name='int16_t' name="sense_creature_f"/>
        <stl-vector type-name='int16_t' name="sense_creature_b"/>
        <stl-vector type-name='int16_t' name="sense_creature_br"/>

        <pointer name='caste_graphics' type-name='creature_raw_graphics'/>
        <static-array count='2' type-name='int32_t' name='statue_texpos' since='v0.50.01'/>
    </struct-type>

    <enum-type type-name='creature_graphics_role'> bay12:CreatureTextureType
        <enum-item name='DEFAULT'/>
        <enum-item name='LAW_ENFORCE'/>
        <enum-item name='TAX_ESCORT'/>
        <enum-item name='ANIMATED'/>
        <enum-item name='ADVENTURER'/>
        <enum-item name='GHOST'/>
        <enum-item name='CORPSE'/>
    </enum-type>

    <enum-type type-name='tissue_style_type' base-type='int16_t'> bay12: TissueLayerShapingType
        <enum-item name='NEATLY_COMBED'/>
        <enum-item name='BRAIDED'/>
        <enum-item name='DOUBLE_BRAIDS'/>
        <enum-item name='PONY_TAILS'/>
        <enum-item name='CLEAN_SHAVEN'/>
    </enum-type>

    <struct-type type-name='creature_position_graphicst'>
        <stl-string name='token'/>

        <static-array name='texpos' count='2'>
            <static-array count='7' index-enum='creature_graphics_role'>
                <static-array count='3'><static-array count='2' type-name='int32_t'/></static-array>
            </static-array>
        </static-array>
        <static-array name='texpos_add_color' count='7' index-enum='creature_graphics_role' type-name='int8_t'/>
        <static-array name='sheet_icon_texpos' count='2'>
            <static-array count='7' index-enum='creature_graphics_role' type-name='int32_t'/>
        </static-array>
    </struct-type>

    <enum-type type-name='creature_graphics_tissue_layer_swap_condition_type' base-type='int32_t'> bay12: CGLTissueLayerSwapConditionType
        <enum-item name='IF_MIN_CURLY'/>
    </enum-type>

    <struct-type type-name='cgl_tissue_layer_swapst'>
        <enum name='swap_condition' type-name='creature_graphics_tissue_layer_swap_condition_type'/>
        <int32_t name='swap_condition_lim'/>
        <static-array name='texpos' count='3'><static-array count='2' type-name='int32_t'/></static-array>
    </struct-type>

    <struct-type type-name='cgl_tissue_layer_conditionst'>
	<stl-vector name='check_caste' type-name='int32_t'/>
	<stl-vector name='check_bp' type-name='int16_t'/>
	<stl-vector name='check_tl' type-name='int16_t'/>

        <stl-vector name='required_shape' type-name='tissue_style_type'/>

	<bitfield name='flags' base-type='uint32_t'> bay12: CGL_TISSUE_LAYER_CONDITION_FLAG_*
            <flag-bit name='requires_not_shaped'/>
        </bitfield>

        <int32_t name="min_length"/>
        <int32_t name="max_length"/>
        <int32_t name="min_density"/>
        <int32_t name="max_density"/>

	<stl-vector name='color_index' type-name='int32_t' ref-target='descriptor_color'/>
	<stl-vector name='swap' pointer-type='cgl_tissue_layer_swapst'/>
    </struct-type>

    <struct-type type-name='cgl_bp_conditionst'>
        <int32_t name="layer_group"/>

	<stl-vector name='check_caste' type-name='int32_t'/>
	<stl-vector name='check_bp' type-name='int16_t'/>

        <stl-vector name='modifier' type-name='appearance_modifier_type'/>
	<stl-vector name='modifier_min' type-name='int32_t'/>
	<stl-vector name='modifier_max' type-name='int32_t'/>

	<bitfield name='flags' base-type='uint32_t'> bay12: CGL_BODYPART_CONDITION_FLAG_*
            <flag-bit name='present'/>
            <flag-bit name='missing'/>
            <flag-bit name='scarred'/>
        </bitfield>
    </struct-type>

    <struct-type type-name='cgl_itemst'>
	<stl-vector name='check_caste' type-name='int32_t'/>
	<stl-vector name='check_bp' type-name='int16_t'/>
        <enum base-type='int16_t' type-name='item_type'/>
	<stl-vector name='item_subtype' type-name='int32_t'/>

	<bitfield name='flags' base-type='uint32_t'> bay12: CGL_ITEM_FLAG_*
            <flag-bit name='wield'/>
            <flag-bit name='any_held'/>
        </bitfield>

        <int32_t name="min_qual"/>
        <int32_t name="max_qual"/>
        <int32_t name="min_dam_level"/>
        <int32_t name="max_dam_level"/>
    </struct-type>

    <struct-type type-name='creature_graphics_layer_materialst'>
	<stl-vector name='subcat1' type-name='int32_t'/>
	<stl-vector name='subcat2' type-name='int32_t'/>

        <bitfield name="flags1" type-name='job_item_flags1'/>
        <bitfield name="flags2" type-name='job_item_flags2'/>
        <bitfield name="flags3" type-name='job_item_flags3'/>
        <uint32_t name="flags4"/>
        <uint32_t name="flags5"/>
    </struct-type>

    <struct-type type-name='creature_graphics_layerst'>
	<stl-string name='token'/>
        <static-array name='texpos' count='3'><static-array count='2' type-name='int32_t'/></static-array>
	<int32_t name='pcg_layering'/> bay12: PCGLayeringType, gigantic enum
	<int32_t name='layer_group'/>
        <stl-vector name='tl_condition' pointer-type='cgl_tissue_layer_conditionst'/>
        <stl-vector name='bp_condition' pointer-type='cgl_bp_conditionst'/>
	<stl-vector name='required_syn_class' pointer-type='stl-string'/>

	<stl-vector name='random_part_condition_string' pointer-type='stl-string'/>
	<stl-vector name='random_part_condition_index' type-name='int32_t'/>
	<stl-vector name='random_part_condition_max' type-name='int32_t'/>

	<stl-vector name='required_caste' type-name='int32_t'/>
	<stl-vector name='required_profession' type-name='int32_t'/>

 	<int32_t name='haul_min_count'/>
	<int32_t name='haul_max_count'/>

        <stl-vector name='required_item' pointer-type='cgl_itemst'/>
        <stl-vector name='forbidden_item' pointer-type='cgl_itemst'/>
	<stl-vector name='dye_color_index' type-name='int32_t'/>
        <pointer name='mat' type-name='creature_graphics_layer_materialst'/>

	<bitfield name='flags' base-type='uint32_t'> bay12: CREATURE_GRAPHICS_LAYER_FLAG_*
            <flag-bit name='child'/>
            <flag-bit name='not_child'/>
            <flag-bit name='ghost'/>
            <flag-bit name='use_standard_item_palette'/>
        </bitfield>

	<stl-vector name='use_palette_index' type-name='int32_t'/>
	<stl-vector name='dye_color_iuse_palette_rowndex' type-name='int32_t'/>

	<int32_t name='use_standard_nex_body_palette_row'/>
    </struct-type>

    <struct-type type-name='creature_graphics_layer_setst'>
	<enum type-name='creature_graphics_role' name='role'/>
	<enum type-name='profession' name='prof'/>
	<int32_t name='el'/>
	<int32_t name='sl'/>
	<stl-string name='ep_token'/>
	<stl-vector name='graphics_layer' pointer-type='creature_graphics_layerst'/>
	<stl-vector name='palette_page' pointer-type='palette_pagest'/>
	<int32_t name='current_layer_group'/>
	<int32_t name='next_layer_group'/>
	<bitfield name='flags' base-type='uint64_t'> bay12: CREATURE_GRAPHICS_LAYER_SET_FLAG_*
            <flag-bit name='portrait'/>
        </bitfield>
        <stl-vector name='lg_bp_condition' pointer-type='cgl_bp_conditionst'/>
    </struct-type>

    <enum-type type-name='creature_small_texture_type' base-type='int32_t'> bay12: CreatureSmallTextureType
        <enum-item name='VERMIN'/>
        <enum-item name='VERMIN_ALT'/>
        <enum-item name='SWARM_LARGE'/>
        <enum-item name='SWARM_MEDIUM'/>
        <enum-item name='SWARM_SMALL'/>
        <enum-item name='LIGHT_VERMIN'/>
        <enum-item name='LIGHT_VERMIN_ALT'/>
        <enum-item name='LIGHT_SWARM_LARGE'/>
        <enum-item name='LIGHT_SWARM_MEDIUM'/>
        <enum-item name='LIGHT_SWARM_SMALL'/>
        <enum-item name='REMAINS'/>
        <enum-item name='HIVE'/>
    </enum-type>

    <struct-type type-name='creature_raw_graphics' original-name='creature_graphicsst'>
        <static-array name='creature_texture_texpos' count='2'><static-array count='7' index-enum='creature_graphics_role'><static-array count='3'><static-array type-name='int32_t' count='2'/></static-array></static-array></static-array>
        <static-array name='creature_texture_add_color' type-name='bool' count='7' index-enum='creature_graphics_role'/>
        <static-array name='creature_texture_sheet_icon_texpos' count='2'><static-array type-name='int32_t' count='7' index-enum='creature_graphics_role'/></static-array>

        <static-array name='entity_link_texpos' count='2'><static-array count='18' index-enum='histfig_entity_link_type'><static-array count='7' index-enum='creature_graphics_role'><static-array count='3'><static-array count='2' type-name='int32_t'/></static-array></static-array></static-array></static-array>
        <static-array name='entity_link_add_color' count='18' index-enum='histfig_entity_link_type'><static-array type-name='bool' count='7' index-enum='creature_graphics_role'/></static-array>
        <static-array name='entity_link_sheet_icon_texpos' count='2'><static-array count='18' index-enum='histfig_entity_link_type'><static-array type-name='int32_t' count='7' index-enum='creature_graphics_role'/></static-array></static-array>

        <static-array name='site_link_texpos' count='2'><static-array count='10' index-enum='histfig_site_link_type'><static-array count='7' index-enum='creature_graphics_role'><static-array count='3'><static-array count='2' type-name='int32_t'/></static-array></static-array></static-array></static-array>
        <static-array name='site_link_add_color' count='10' index-enum='histfig_site_link_type'><static-array type-name='bool' count='7' index-enum='creature_graphics_role'/></static-array>
        <static-array name='site_link_sheet_icon_texpos' count='2'><static-array count='10' index-enum='histfig_site_link_type'><static-array type-name='int32_t' count='7' index-enum='creature_graphics_role'/></static-array></static-array>

        <static-array name='profession_texpos' count='2'><static-array count='135' index-enum='profession'><static-array count='7' index-enum='creature_graphics_role'><static-array count='3'><static-array count='2' type-name='int32_t'/></static-array></static-array></static-array></static-array>
        <static-array name='profession_add_color' count='135' index-enum='profession'><static-array type-name='bool' count='7' index-enum='creature_graphics_role'/></static-array>
        <static-array name='profession_sheet_icon_texpos' count='2'><static-array count='135' index-enum='profession'><static-array type-name='int32_t' count='7' index-enum='creature_graphics_role'/></static-array></static-array>

        <stl-vector name='position_graphics' pointer-type='creature_position_graphicst'/>
        <stl-vector name='graphics_layer_set' pointer-type='creature_graphics_layer_setst'/>

        <static-array name='creature_small_texpos' type-name='int32_t' count='12' index-enum='creature_small_texture_type'/>

        <int32_t name='egg_texpos'/>
        <int32_t name='list_icon_texpos'/>
        <int32_t name='skeleton_with_skull_texpos'/>
        <int32_t name='skeleton_texpos'/>

        <static-array name='layer_unitless_texpos' count='135' index-enum='profession'><static-array count='3'><static-array count='2'><stl-vector type-name='int32_t'/></static-array></static-array></static-array>
        <static-array name='layer_unitless_sheet_icon_texpos' count='135' index-enum='profession'><stl-vector type-name='int32_t'/></static-array>
    </struct-type>

    <struct-type type-name='tissue_style_raw' key-field='id' original-name='tissue_style_unitst'>
        <stl-string name="token"/>
        <code-helper name='describe'>$.token</code-helper>

        <stl-vector name='part_idx' type-name='int16_t'
                    refers-to='$$._global._upglobal.body_info.body_parts[$]'/>
        <stl-vector name='layer_idx' type-name='int16_t'
                    refers-to='$$._parent._parent.part_idx[$$._key].refers-to.layers[$]'
                    index-refers-to='$$._parent.part_idx[$].refers-to'/>

        <stl-vector name="styles" type-name="tissue_style_type"/>

        <stl-vector name="list_idx" type-name="int32_t"
                    refers-to='$$._global._upglobal.bp_appearance.style_layer_idx[$].refers-to'/>

        <int32_t name="id"/>

        <stl-string name="noun"/>
        <enum type-name='word_property_type' name="word_type"/>
    </struct-type>

    <enum-type type-name='genetic_modifier_type' base-type='int32_t'> bay12: GeneticModifierType
        <enum-item name='BODY_APP'/>
        <enum-item name='BP_APP'/>
        <enum-item name='TISSUE_COLOR'/>
        <enum-item name='TISSUE_STYLE'/>
    </enum-type>

    <struct-type type-name='creature_raw' instance-vector='$global.world.raws.creatures.all' original-name='creature_defst'>
        <stl-string name='creature_id'/> bay12: string[CreatureDefStrings]

        <code-helper name='describe'>$.creature_id</code-helper>

        <static-array type-name='stl-string' name='name' count='3'/>
        <static-array type-name='stl-string' name='general_baby_name' count='2'/>
        <static-array type-name='stl-string' name='general_child_name' count='2'/>
        <stl-string name='temp_single_name' since='v0.43.01'/>

        <uint8_t name='creature_tile'/> bay12: uchar[CreatureDefUChar]
        <uint8_t name='creature_soldier_tile'/>
        <uint8_t name='alttile'/>
        <uint8_t name='soldier_alttile'/>
        <uint8_t name='glowtile'/>

        <uint16_t name='temperature1'/> bay12: ushort[CreatureDefUShort]
        <uint16_t name='temperature2'/>

        <int16_t name='frequency'/> bay12: short[CreatureDefShort]
        <static-array type-name='int16_t' name='population_number' count='2'/>
        <static-array type-name='int16_t' name='cluster_number' count='2'/>
        <static-array type-name='int16_t' name='triggerable_group' count='2'/>
        <static-array type-name='int16_t' name='color' count='3'/>
        <static-array type-name='int16_t' name='glowcolor' count='3'/>

        <int32_t name='adultsize'/> bay12: int32_t[CreatureDefLong]

        <stl-vector name='prefstring' pointer-type='stl-string'/>

        <stl-vector type-name='sphere_type' name='sphere'/>
        <stl-vector name='caste' pointer-type='caste_raw'/>

        <stl-vector type-name='int32_t' name='pop_ratio'/>

        <df-flagarray name='flags' index-enum='creature_raw_flags'/>

        <pointer name='graphics' type-name='creature_raw_graphics'/>

        <stl-vector name='speech_index' type-name='int32_t'/>
        <stl-vector name='speech_token' pointer-type='stl-string'/>

        <stl-vector name='material' pointer-type='material'/>
        <stl-vector name='tissue' pointer-type='tissue'/>

        <compound name='profession_name'>
            <static-array type-name='stl-string' name='singular' index-enum='profession'/>
            <static-array type-name='stl-string' name='plural' index-enum='profession'/>
        </compound>

        <int32_t name='underground_layer_min'/>
        <int32_t name='underground_layer_max'/>

        <stl-vector name='modifier_class' type-name='genetic_modifier_type'/>
        <stl-vector type-name='int32_t' name='modifier_num_patterns'
                    comment='for color modifiers, == number of items in their pattern_* vectors'/>

        <compound name='hive_product'>
            <stl-vector type-name='int32_t' name='number'/>
            <stl-vector type-name='int32_t' name='time'/>

            <stl-vector name='item_type'>
                <enum base-type='int16_t' type-name='item_type'/>
            </stl-vector>
            <stl-vector type-name='int16_t' name='item_subtype'/>
            <compound name='material' type-name='material_vec_ref'/>

            <stl-vector pointer-type='stl-string' name='tmpstr1'/>
            <stl-vector pointer-type='stl-string' name='tmpstr2'/>
            <stl-vector pointer-type='stl-string' name='tmpstr3'/>
            <stl-vector pointer-type='stl-string' name='tmpstr4'/>
            <stl-vector pointer-type='stl-string' name='tmpstr5'/>
        </compound>

        <int32_t name='source_hfid' ref-target='historical_figure'/>
        <int32_t name='source_enid' ref-target='historical_entity' since='v0.42.01'/>

        <int32_t name='next_modifier_id'/>

        <stl-vector name='raws' pointer-type='stl-string'/>
        <static-array count='2' type-name='int32_t' name='statue_texpos' since='v0.50.01'/>
    </struct-type>

    <struct-type type-name='creature_variation_convert_tag' original-name='creature_variation_subord_tag_conversionst'>
        <stl-string name='cvct_master'/>
        <stl-string name='cvct_target'/>
        <stl-string name='cvct_replacement'/>
        <int32_t name='comp_arg_index' init-value='-1' since='v0.40.01'/>
        <stl-string name='comp_arg_str' since='v0.40.01'/>
    </struct-type>

    <struct-type type-name='creature_variation' instance-vector='$global.world.raws.creature_variations' original-name='creature_variationst'>
        <stl-string name='id'/>
        <stl-vector name='cv_convert_tag' pointer-type='creature_variation_convert_tag'/>
        <stl-vector name='cv_new_tag' pointer-type='stl-string'/>
        <stl-vector name='cv_new_tag_comp_arg_index' type-name='int32_t' since='v0.40.01'/>
        <stl-vector name='cv_new_tag_comp_arg_str' pointer-type='stl-string' since='v0.40.01'/>
        <stl-vector name='cv_remove_tag' pointer-type='stl-string'/>
        <stl-vector name='cv_remove_tag_comp_arg_index' type-name='int32_t' since='v0.40.01'/>
        <stl-vector name='cv_remove_tag_comp_arg_str' pointer-type='stl-string' since='v0.40.01'/>
    </struct-type>

    <enum-type type-name='body_part_template_flags'> bay12: CreatureBodyPartFlagType
        <enum-item name='HEAD'/>
        <enum-item name='UPPERBODY'/>
        <enum-item name='LOWERBODY'/>
        <enum-item name='SIGHT'/>
        <enum-item name='EMBEDDED'/>
        <enum-item name='INTERNAL'/>
        <enum-item name='CIRCULATION'/>
        <enum-item name='SKELETON'/>

        <enum-item name='LIMB'/>
        <enum-item name='GRASP'/>
        <enum-item name='STANCE'/>
        <enum-item name='GUTS'/>
        <enum-item name='BREATHE'/>
        <enum-item name='SMALL'/>
        <enum-item name='THROAT'/>
        <enum-item name='JOINT'/>

        <enum-item name='THOUGHT'/>
        <enum-item name='NERVOUS'/>
        <enum-item name='RIGHT'/>
        <enum-item name='LEFT'/>
        <enum-item name='HEAR'/>
        <enum-item name='SMELL'/>
        <enum-item name='FLIER'/>
        <enum-item name='DIGIT'/>

        <enum-item name='MOUTH'/>
        <enum-item name='APERTURE'/>
        <enum-item name='SOCKET'/>
        <enum-item name='TOTEMABLE'/>
        <enum-item name='UNDER_PRESSURE'/>
        <enum-item name='VERMIN_BUTCHER_ITEM'/>
        <enum-item name='CONNECTOR'/>
        <enum-item name='PREVENTS_PARENT_COLLAPSE'/>

        <enum-item name='GELDABLE'/>
    </enum-type>

    <enum-type type-name='body_part_template_contype' base-type='int16_t'> bay12: CreatureBodyPartParentTypes
        <enum-item name='NONE' value='-1'/>
        <enum-item name='UPPERBODY'/>
        <enum-item name='LOWERBODY'/>
        <enum-item name='HEAD'/>
        <enum-item name='GRASP'/>
        <enum-item name='STANCE'/>
    </enum-type>

    <struct-type type-name='body_part_template' original-name='creaturebody_partst'>
        <stl-string name='id'/>
        <stl-string name='con'/>
        <stl-string name='category'/>
        <stl-string name='con_cat'/>
        <enum type-name='body_part_template_contype' base-type='int16_t' name='contype'/>

        <df-flagarray name='flags' index-enum='body_part_template_flags'/>

        <int32_t name='default_relsize'/>
        <int32_t name='number'/>

        <stl-vector name='name_singular' pointer-type='stl-string' comment='first comes from BP, rest come from INDIVIDUAL_NAME'/>
        <stl-vector name='name_plural' pointer-type='stl-string'/>
    </struct-type>

    <struct-type type-name='body_template' instance-vector='$global.world.raws.body_templates' original-name='creaturebody_defst'>
        <stl-string name='id' comment='in bay12 this is a static array with one member'/>
        <stl-vector name='parts' pointer-type='body_part_template'/>
    </struct-type>

    <enum-type type-name='tissue_flags'> bay12: TissueFlagType
        <enum-item name='THICKENS_ON_STRENGTH'/>
        <enum-item name='THICKENS_ON_ENERGY_STORAGE'/>
        <enum-item name='ARTERIES'/>
        <enum-item name='SCARS'/>
        <enum-item name='STRUCTURAL'/>
        <enum-item name='NERVOUS'/>
        <enum-item name='THOUGHT'/>
        <enum-item name='MUSCULAR'/>

        <enum-item name='SMELL'/>
        <enum-item name='HEAR'/>
        <enum-item name='FLIGHT'/>
        <enum-item name='BREATHE'/>
        <enum-item name='SIGHT'/>
        <enum-item name='COSMETIC'/>
        <enum-item name='CONNECTS'/>
        <enum-item name='FUNCTIONAL'/>

        <enum-item name='MAJOR_ARTERIES'/>
        <enum-item name='TISSUE_LEAKS'/>
        <enum-item name='STYLEABLE'/>
        <enum-item name='CONNECTIVE_TISSUE_ANCHOR'/>
        <enum-item name='SETTABLE'/>
        <enum-item name='SPLINTABLE'/>
    </enum-type>

    <enum-type type-name='tissue_shape_type'> bay12: TissueShapeType
        <enum-item name='LAYER'/>
        <enum-item name='STRANDS'/>
        <enum-item name='FEATHERS'/>
        <enum-item name='SCALES'/>
        <enum-item name='CUSTOM'/>
    </enum-type>

    <struct-type type-name='tissue_template' instance-vector='$global.world.raws.tissue_templates' original-name='tissue_templatest'>
        <stl-string name='id'/>
        <df-flagarray name='flags' index-enum='tissue_flags'/>
        <stl-string name='tissue_name_singular'/>
        <stl-string name='tissue_name_plural'/>
        <static-array name='tissue_material_str' type-name='stl-string' count='3'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <int32_t name='relative_thickness'/>
        <int32_t name='healing_rate'/>
        <int32_t name='vascular'/>
        <int32_t name='pain_receptors'/>
        <enum name='tissue_shape' type-name='tissue_shape_type'/>
        <int32_t name='custom_shape' init-value='-1'/>
        <int16_t name='insulation'/>
        <stl-string name='subordinate_to_tissue'/>
        <enum base-type='int16_t' name='tissue_mat_state' type-name='matter_state'/>
        <stl-string name='tissue_shape_str'/>
    </struct-type>

    <struct-type type-name='tissue' key-field='id' original-name='tissue_definitionst'>
        <stl-string name='id'/>
        <df-flagarray name='flags' index-enum='tissue_flags'/>
        <stl-string name='tissue_name_singular'/>
        <stl-string name='tissue_name_plural'/>
        <static-array name='tissue_material_str' type-name='stl-string' count='3'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <int32_t name='relative_thickness'/>
        <int32_t name='healing_rate'/>
        <int32_t name='vascular'/>
        <int32_t name='pain_receptors'/>
        <enum name='tissue_shape' type-name='tissue_shape_type'/>
        <int32_t name='custom_shape' init-value='-1'/>
        <int16_t name='insulation'/>
        <stl-string name='subordinate_to_tissue'/>
        <int32_t name='parent_tissue' refers-to='$$._global._upglobal.tissue[$]'/>
        <enum base-type='int16_t' name='tissue_mat_state' type-name='matter_state'/>
        <uint16_t name='heatdam_point'/>
        <uint16_t name='colddam_point'/>
        <uint16_t name='ignite_point'/>
        <uint16_t name='melting_point'/>
        <uint16_t name='boiling_point'/>
        <uint16_t name='spec_heat'/>
        <stl-string name='tissue_shape_str'/>
    </struct-type>

    <struct-type type-name='body_detail_plan' instance-vector='$global.world.raws.body_detail_plans' original-name='body_detail_planst'>
        <stl-string name='id'/>

        <stl-vector name='add_material_name' pointer-type='stl-string'/>
        <stl-vector name='add_material_template' pointer-type='stl-string'/>

        <stl-vector name='add_tissue_name' pointer-type='stl-string'/>
        <stl-vector name='add_tissue_template' pointer-type='stl-string'/>

        <stl-vector name='tissue_bp_group' type-name='creature_interaction_effect_target_mode'/>
        <stl-vector name='tissue_bp_token' pointer-type='stl-string'/>
        <stl-vector name='tissue_token' pointer-type='stl-string'/>

        <stl-vector name='bp_layers_thickness' type-name='int32_t'/>
        <stl-vector name='bp_layers_selection' type-name='body_part_position_type'/>
        <stl-vector name='bp_layers_tissue' type-name='int16_t'/>
        <stl-vector name='bp_layers_criteria' pointer-type='stl-string'/>
        <stl-vector name='bp_layers_position' type-name='body_part_relation_type'/>
        <stl-vector name='bp_layers_over_under' type-name='int8_t'/>

        <stl-vector name='bp_relsize_selection' type-name='creature_interaction_effect_target_mode'/>
        <stl-vector name='bp_relsize_criteria' pointer-type='stl-string'/>
        <stl-vector name='bp_relsize_value' type-name='int32_t'/>

        <stl-vector name='bp_position_selection' type-name='creature_interaction_effect_target_mode'/>
        <stl-vector name='bp_position_criteria' pointer-type='stl-string'/>
        <stl-vector name='bp_position_value' type-name='int16_t'/>

        <stl-vector name='bp_relation_selection_1' type-name='creature_interaction_effect_target_mode'/>
        <stl-vector name='bp_relation_criteria_1' pointer-type='stl-string'/>
        <stl-vector name='bp_relation_value_1' type-name='int16_t'/>

        <stl-vector name='bp_relation_selection_2' type-name='creature_interaction_effect_target_mode'/>
        <stl-vector name='bp_relation_criteria_2' pointer-type='stl-string'/>
        <stl-vector name='bp_relation_extent' type-name='int16_t'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
