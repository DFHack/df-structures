<data-definition>
    <struct-type type-name='dipscript_info'>
        <int32_t name='id' comment='assigned during Save'/>
        <stl-string name='script_file' comment='data/dipscript/dwarf_liaison'/>
        <stl-vector name='script_steps' pointer-type='script_stepst'/>
        <stl-vector name='script_vars' pointer-type='script_varst'/>
        <stl-string name='code' comment='DWARF_LIAISON etc'/>
        <code-helper name='describe'>$.code</code-helper>
    </struct-type>

    <struct-type type-name='dipscript_popup'>
        <pointer name='meeting_holder' type-name='unit'/>
        <pointer name='activity' type-name='activity_info'/>
        <bitfield name='flags'>
            <flag-bit name='close_screen'/>
            <flag-bit name='new_screen'/>
        </bitfield>
    </struct-type>

    <class-type type-name='script_stepst'>
        <int32_t name='next_step_idx'/>
        <virtual-methods>
            <vmethod name='setNextStep' ret-type='bool'>
                <int32_t name='idx'/>
            </vmethod>
            <vmethod name='execute' ret-type='int32_t'>
                <pointer name='context' type-name='meeting_context'/>
            </vmethod>
            <vmethod name='skip' ret-type='int32_t'>
                <pointer name='context' type-name='meeting_context'/>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='script_step_setvarst' inherits-from='script_stepst'>
        <stl-string name='dest_type'/>
        <stl-string name='dest_name'/>
        <stl-string name='src_type'/>
        <stl-string name='src_name'/>
    </class-type>

    <class-type type-name='script_step_simpleactionst' inherits-from='script_stepst'>
        <stl-string name='type'/>
        <stl-string name='subtype'/>
    </class-type>

    <class-type type-name='script_step_conditionalst' inherits-from='script_stepst'>
        <compound name='condition'>
            <stl-string name='var1_type'/>
            <stl-string name='var1_name'/>
            <stl-string name='comparison'/>
            <stl-string name='var2_type'/>
            <stl-string name='var2_name'/>
        </compound>
        <int32_t name='conditional_next_step_idx'/>
    </class-type>

    <class-type type-name='script_step_textviewerst' inherits-from='script_stepst'>
        <stl-string name='filename'/>
        <stl-string name='outvar_name'/>
    </class-type>

    <class-type type-name='script_step_diphistoryst' inherits-from='script_stepst'>
        <stl-string name='event'/>
    </class-type>

    <class-type type-name='script_step_discussst' inherits-from='script_stepst'>
        <stl-string name='event'/>
    </class-type>

    <class-type type-name='script_step_topicdiscussionst' inherits-from='script_stepst'/>

    <class-type type-name='script_step_constructtopiclistst' inherits-from='script_stepst'/>

    <class-type type-name='script_step_dipeventst' inherits-from='script_step_eventst'>
        <stl-string name='parm1'/>
        <stl-string name='parm2'/>
        <stl-string name='parm3'/>
        <stl-string name='parm4'/>
        <stl-string name='parm5'/>
    </class-type>

    <class-type type-name='script_step_invasionst' inherits-from='script_step_eventst'>
        <stl-string name='parm'/>
    </class-type>

    <class-type type-name='script_step_eventst' inherits-from='script_stepst'/>


    <class-type type-name='script_varst'>
        <stl-string name='name'/>
        <virtual-methods>
            <vmethod name='instantiate'>
                <ret-type><pointer type-name='active_script_varst'/></ret-type>
            </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='script_var_unitst' inherits-from='script_varst'/>
    <class-type type-name='script_var_longst' inherits-from='script_varst'/>

    <class-type type-name='active_script_varst'>
        <stl-string name='name'/>
        <virtual-methods>
            <vmethod name='setColor'/>
            <vmethod name='formatString'>
                <pointer type-name='static-string' name='output'/>
                <pointer type-name='stl-string' name='format'/>
            </vmethod>
            <vmethod name='getValue'>
                <pointer name='int_value' type-name='int32_t'/>
                <pointer name='ref_value' type-name='specific_ref'/>
            </vmethod>
            <vmethod name='setValue'>
                <pointer name='var' type-name='meeting_variable'/>
            </vmethod>
            <vmethod name='removeUnit'>
                <pointer name='ref_value' type-name='specific_ref'/>
            </vmethod>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'> <pointer name='file' type-name='file_compressorst'/> <int32_t name='load_version'/> </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='active_script_var_unitst' inherits-from='active_script_varst'>
        <pointer name='unit' type-name='unit'/>
    </class-type>

    <class-type type-name='active_script_var_longst' inherits-from='active_script_varst'>
        <int32_t name='value'/>
    </class-type>

    <struct-type type-name='meeting_variable'>
        <int32_t name='value'/>
        <compound name='ref' type-name='specific_ref'/>
        <pointer name='active_var' type-name='active_script_varst'/>
    </struct-type>

    <struct-type type-name='meeting_context'>
        <pointer name='meeting' type-name='meeting_diplomat_info'/>
        <pointer name='popup' type-name='dipscript_popup'/>
        <int32_t/>
        <int32_t/>
    </struct-type>

    <struct-type type-name='meeting_diplomat_info'>
        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int16_t name='unk1' comment='maybe is_first_contact'/>
        <int32_t name='diplomat_id' ref-target='historical_figure'/>
        <int32_t name='associate_id' ref-target='historical_figure'/>
        <stl-vector name="topic_list">
            <enum base-type='int32_t' type-name='meeting_topic'/>
        </stl-vector>
        <stl-vector type-name='int32_t' name='topic_parms'/>
        <pointer type-name='entity_sell_requests' name='sell_requests'/>
        <pointer type-name='entity_buy_requests' name='buy_requests'/>
        <pointer name="dipscript" type-name="dipscript_info"/>
        <int32_t name="cur_step"/>
        <stl-vector name='active_script_vars' pointer-type='active_script_varst'/>
        <stl-string name="unk_50"/>
        <stl-string name="unk_6c"/>
        <bitfield name='flags'>
            <flag-bit name='dynamic_load' comment='destroy dipscript_info in destructor'/>
            <flag-bit name='failure'/>
            <flag-bit name='success'/>
        </bitfield>
        <stl-vector pointer-type='meeting_event' name='events'/>
        <stl-vector name='agreement_entity' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='agreement_topic' type-name='meeting_topic'/>
        <stl-vector name='agreement_year' type-name='int32_t'/>
        <stl-vector name='agreement_tick' type-name='int32_t'/>
        <stl-vector name='agreement_outcome' type-name='int16_t'/>
        <stl-vector name='contact_entity' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='contact_year' type-name='int32_t'/>
        <stl-vector name='contact_tick' type-name='int32_t'/>
    </struct-type>

    <enum-type type-name='meeting_topic' base-type='int16_t'>
        <enum-item name="DiscussCurrent"/>
        <enum-item name="RequestPeace"/>
        <enum-item name="TreeQuota"/>
        <enum-item name="BecomeLandHolder"/>
        <enum-item name="PromoteLandHolder"/>
        <enum-item name="ExportAgreement"/>
        <enum-item name="ImportAgreement"/>
        <enum-item name="PleasantPlace"/>
        <enum-item name="WorldStatus"/>
    </enum-type>

    <enum-type type-name='meeting_event_type' base-type='int16_t'>
        <enum-item name="AcceptAgreement"/>
        <enum-item name="RejectAgreement"/>
        <enum-item name="AcceptPeace"/>
        <enum-item name="RejectPeace"/>
        <enum-item name="ExportAgreement"/>
        <enum-item name="ImportAgreement"/>
    </enum-type>

    <struct-type type-name='meeting_event'>
        <enum base-type='int16_t' type-name='meeting_event_type' name='type'/>
        <enum base-type='int16_t' type-name='meeting_topic' name='topic'/>
        <int16_t name='topic_parm'/>
        <stl-vector type-name='int32_t'/>
        <stl-vector type-name='int32_t'/>
        <int32_t name='quota_total'/>
        <int32_t name='quota_remaining'/>
        <int32_t name='year'/>
        <int32_t name='ticks'/>
        <pointer type-name='entity_sell_prices' name='sell_prices'/>
        <pointer type-name='entity_buy_prices' name='buy_prices'/>
    </struct-type>

    <struct-type type-name='activity_info'>
        <int32_t name='id' comment='assigned during Save'/>
        <pointer name='unit_actor' type-name='unit' comment='diplomat or worker'/>
        <pointer name='unit_noble' type-name='unit' comment='meeting recipient'/>
        <pointer name='place' type-name='building'/>
        <bitfield base-type='uint16_t' name='flags'>
            <flag-bit name='next_step'/>
            <flag-bit name='checked_building'/>
            <flag-bit name='add_delay'/>
            <flag-bit name='topic_discussed'/>
            <flag-bit name='meeting_done'/>
        </bitfield>
        <int8_t name='unk3' comment='3'/>
        <int16_t name='delay' comment='0'/>
        <int32_t name='tree_quota' comment='-1'/>
    </struct-type>

    <struct-type type-name='party_info'>
        <stl-vector name="units" pointer-type='unit'/>
        <pointer name="location" type-name="building"/>
        <int32_t name="timer" comment='-1 per 10'/>
        <int32_t name='id' comment='assigned during Save'/>
    </struct-type>

    <struct-type type-name='room_rent_info'>
        <stl-vector name='elements' pointer-type='building'/>
        <int32_t name='rent_value'/>
        <bitfield name='flags'>
            <flag-bit name='eviction_underway'/>
            <flag-bit name='move_underway'/>
        </bitfield>
    </struct-type>

    <struct-type type-name='activity_entry' instance-vector='$global.world.activities.all' key-field='id'>
        <int32_t name='id'/>
        <int16_t name='type' comment='was is_individual; 2 is associated with Conflict events'/>
        <stl-vector name='events' pointer-type='activity_event'/>
        <int32_t name='next_event_id'/>
        <int32_t name='army_controller' ref-target='army_controller' comment='v0.40.1'/>
    </struct-type>

    <enum-type type-name='activity_event_type'>
        <enum-item name='TrainingSession'/>
        <enum-item name='CombatTraining'/>
        <enum-item name='SkillDemonstration'/>
        <enum-item name='IndividualSkillDrill'/>
        <enum-item name='Sparring'/>
        <enum-item name='RangedPractice'/>
        <enum-item name='Harassment'/>
        <enum-item name='Conversation'/>
        <enum-item name='Conflict'/>
        <enum-item name='Guard'/>
        <enum-item name='Reunion'/>
    </enum-type>

    <struct-type type-name='activity_event_participants'>
        <stl-vector name='histfigs'>
            <int32_t ref-target='historical_figure'/>
        </stl-vector>
        <stl-vector name='units'>
            <int32_t ref-target='unit'/>
        </stl-vector>

        -- Seemingly units that are free to be grouped
        -- away into subevents or sparring pairs.
        <stl-vector name='free_histfigs'>
            <int32_t ref-target='historical_figure'/>
        </stl-vector>
        <stl-vector name='free_units'>
            <int32_t ref-target='unit'/>
        </stl-vector>

        -- Holder event
        <int32_t name='activity_id' ref-target='activity_entry'/>
        <int32_t name='event_id'/>
    </struct-type>

    <class-type type-name='activity_event' original-name='activity_eventst'>
        <int32_t name='event_id'
                 comment='mostly, but not always, the index in activity.events'/>
        <int32_t name='activity_id' ref-target='activity_entry'/>

        <code-helper name='find-instance'>
            (let ((activity (find-instance $activity_entry $$)))
              (find-by-id $activity.events $event_id $))
        </code-helper>

        <int32_t name='parent_event_id' ref-target='activity_event' aux-value='$$.activity_id'/>

        <bitfield name='flags'>
            <flag-bit name='dismissed' comment='to be removed from squad_position, anyway'/>
            <flag-bit name='squad' comment='for all in training session, but not ind.drill'/>
        </bitfield>

        <virtual-methods>
            <vmethod ret-type='activity_event_type' name='getType'/>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <int32_t name='loadversion'/>
            </vmethod>
            <vmethod is-destructor='true'/>
            <vmethod ret-type='bool' name='isEmpty'
                     comment='returns true if hist_figure_ids empty or if various subclass fields are uninitialized'/>

            <vmethod comment='returns -1'/>
            <vmethod comment='does nothing'> <pointer/> </vmethod>
            <vmethod name='getParticipantInfo'>
                <ret-type> <pointer type-name='activity_event_participants'/> </ret-type>
            </vmethod>
            <vmethod name='dismiss'> <bool name='children_too'/> </vmethod>
            <vmethod><int32_t/><int32_t/><int32_t/></vmethod>
            <vmethod name='removeParticipant'> <int32_t name='histfig'/> <int32_t name='unit'/> <bool/> </vmethod>

            <vmethod name='process'> <int32_t/> <int32_t/> <pointer type-name='unit'/> </vmethod>
            <vmethod ret-type='int32_t' name='checkDrillInvalid'><int32_t/></vmethod>
            <vmethod ret-type='bool' name='decUniformLock'><int32_t/></vmethod>
            <vmethod name='getSquadEventType'>
                <ret-type> <enum base-type='int16_t' type-name='squad_event_type'/> </ret-type>
            </vmethod>
            <vmethod name='setDemoSkill'>
                <enum base-type='int16_t' name='skill' type-name='job_skill'/>
            </vmethod>

            <vmethod name='setSkillDemoTimers'>
                <int32_t name='wait_countdown'/>
                <int32_t name='train_rounds'/>
                <int32_t name='train_countdown'/>
            </vmethod>
            <vmethod name='adjustOrganizeCounter'>
                <int32_t name='amount'/>
            </vmethod>
            <vmethod name='getOrganizer' comment='or perhaps somebody else - only works for combat_training and skill_demonstration'>
                <pointer type-name='int32_t' name='hist_figure_id'/>
                <pointer type-name='int32_t' name='unit_id'/>
            </vmethod>
            <vmethod name='getBuilding' comment='returns pointer to building_id'>
                <ret-type><pointer type-name='int32_t'/></ret-type>
            </vmethod>
            <vmethod ret-type='bool' name='isSparring'/>

            <vmethod ret-type='int16_t' name='getUniformType'/>
            <vmethod name='getName'>
                <int32_t/>
                <pointer type-name='stl-string' name='str'/>
            </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='activity_event_training_sessionst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
    </class-type>

    <class-type type-name='activity_event_combat_trainingst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='organize_counter' comment='gt 0 => organizing, lt 0 => done'/>
    </class-type>

    <class-type type-name='activity_event_skill_demonstrationst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
        <int32_t name='unit_id' ref-target='unit'/>
        <enum base-type='int16_t' name='skill' type-name='job_skill'/>
        <int32_t name='organize_counter'/>
        <int32_t name='wait_countdown' init-value='100'/>
        <int32_t name='train_rounds' init-value='15'/>
        <int32_t name='train_countdown' init-value='20'/>
    </class-type>

    <class-type type-name='activity_event_individual_skill_drillst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='countdown' init-value='3000'/>
    </class-type>

    <class-type type-name='activity_event_sparringst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <stl-vector name='groups'>
            <pointer>
                <stl-vector name='units' type-name='int32_t' ref-target='unit'/>
                <int32_t name='countdown' init-value='3000'/>
                <int32_t name='building_id' ref-target='building'/>
            </pointer>
        </stl-vector>
        <int32_t name='countdown' init-value='3000'/>
    </class-type>

    <class-type type-name='activity_event_ranged_practicest' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='uniform_lock'/>
    </class-type>

    <class-type type-name='activity_event_harassmentst' inherits-from='activity_event'>
        <stl-vector type-name='int32_t'/>
        <stl-vector>
            <pointer>
                <int32_t/>
                <static-array type-name='int32_t' count='3'/>

                <int32_t/>
                <int32_t/>
                <int32_t/>
                <int32_t/>

                <int32_t/>
                <int32_t/>
                <int32_t/>
                <int32_t/>

                <stl-vector type-name='int32_t'/>

                <int32_t/>
                <int32_t/>
            </pointer>
        </stl-vector>
        <int32_t/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
    </class-type>

    <class-type type-name='activity_event_conversationst' inherits-from='activity_event'>
        <stl-vector>
            <pointer>
                <int32_t/>
                <int32_t/>
            </pointer>
        </stl-vector>
        <int32_t/>
        <compound name='unk1' type-name='entity_event'/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
        <stl-vector type-name='int32_t'/>
        <stl-vector type-name='int32_t'/>
        <stl-vector>
            <pointer>
                <int32_t/>
                <int32_t/>
                <int32_t/>
                <compound type-name='entity_event'/>

                <int32_t/>
                <int16_t/>
                <int16_t/>
                <int16_t/>

                <int32_t/>
                <int32_t/>
                <int32_t/>
                <int32_t/>

                <int32_t/>
                <int32_t name='unk_v4014_1' comment='v0.40.14, uninit'/>
            </pointer>
        </stl-vector>
        <int32_t/>
        <int32_t/>
        <int32_t/>

        <int32_t/>
        <compound name='unk2'>
            <stl-vector/>
            <int32_t/>
            <int32_t/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <stl-vector/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
            <int32_t/>
        </compound>
        <stl-vector pointer-type='talk_choice'/>
        <int32_t init-value='-1'/>
        <int32_t/>?
        <int32_t/>?
        <int32_t/>?
        <int32_t/>?
        <int32_t/>?
        <int32_t/>?
        <int32_t/>?
        <int32_t/>?
        <int32_t/>?
        <int32_t/>?
        <int32_t/>?
    </class-type>

    <class-type type-name='activity_event_conflictst' inherits-from='activity_event'>
        <stl-vector>
            <pointer>
                <int32_t name='id'/>
                <stl-vector type-name='int32_t'/>
                <stl-vector type-name='int32_t'/>
                <stl-vector>
                    <pointer>
                        <int32_t/>
                        <int32_t/>
                    </pointer>
                </stl-vector>
                <int32_t/>
                <int32_t/>
            </pointer>
        </stl-vector>
        <int32_t/>
        <int32_t/>
        <int32_t/>
    </class-type>

    <class-type type-name='activity_event_guardst' inherits-from='activity_event'>
        <stl-vector type-name='int32_t'/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int32_t/>
    </class-type>

    <class-type type-name='activity_event_reunionst' inherits-from='activity_event'>
        <stl-vector type-name='int32_t'/>
        <stl-vector type-name='int32_t'/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
    </class-type>

    <struct-type type-name='schedule_info' key-field='id' instance-vector='$global.world.schedules.all'>
        <int32_t name='id'/>
        <int16_t/>
        <stl-vector name='slots' pointer-type='schedule_slot'/>
    </struct-type>

    <struct-type type-name='schedule_slot'>
        <int16_t name='type' comment='0:Eat, 1:Sleep, 2-4:???'/>
        <int16_t name='start_time'/>
        <int16_t name='end_time'/>
        <int16_t/>
        <int8_t name='processed'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
