<data-definition>
    <struct-type type-name='dipscript_info'>
        <int32_t name='id' comment='assigned during Save'/>
        <stl-vector name='script_steps' pointer-type='script_stepst'/>
        <stl-vector name='script_vars' pointer-type='script_varst'/>
        <stl-string name='code' comment='DWARF_LIAISON etc'/>
        <code-helper name='describe'>$.code</code-helper>
    </struct-type>

    <struct-type type-name='dipscript_text'>
        <stl-string name='name' comment='dwarf_liaison_bye, etc.'/>
        <stl-vector name='contents' pointer-type='stl-string'/>
    </struct-type>

    <struct-type type-name='dipscript_popup' original-name='meetingmomentst' >
        <int32_t name='meeting_holder_actor' ref-target='unit' comment='bay12: actor_unid'/>
        <int32_t name='meeting_holder_noble' ref-target='unit' comment='bay12: noble_unid'/>
        <pointer name='activity' type-name='activity_info' comment='bay12: act'/>
        <bitfield name='flags'>
            <flag-bit name='close_screen'/> bay12: DEAD
            <flag-bit name='new_screen'/> bay12: RESTING
        </bitfield>
        <int32_t name='moment_time_left'/>
    </struct-type>

    <class-type type-name='script_stepst'>
        <int32_t name='next_step_idx'/>
        <virtual-methods>
            <vmethod name='setNextStep' ret-type='bool'>
                <int32_t name='idx'/>
            </vmethod>
            <vmethod name='execute' ret-type='int32_t'>
                <pointer name='context' type-name='script_environmentst'/>
            </vmethod>
            <vmethod name='skip' ret-type='int32_t'>
                <pointer name='context' type-name='script_environmentst'/>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='script_step_setvarst' inherits-from='script_stepst'>
        <stl-string name='dest_type'/>
        <stl-string name='dest_name'/>
        <stl-string name='src_type'/>
        <stl-string name='src_name'/>
    </class-type>

    <class-type type-name='script_step_simpleactionst' inherits-from='script_stepst'>
        <stl-string name='type'/>
        <stl-string name='subtype'/>
    </class-type>

    <class-type type-name='script_step_conditionalst' inherits-from='script_stepst'>
        <compound name='condition'>
            <stl-string name='var1_type'/>
            <stl-string name='var1_name'/>
            <stl-string name='comparison'/>
            <stl-string name='var2_type'/>
            <stl-string name='var2_name'/>
        </compound>
        <int32_t name='conditional_next_step_idx'/>
    </class-type>

    <class-type type-name='script_step_textviewerst' inherits-from='script_stepst'>
        <stl-string name='filename'/>
        <stl-string name='outvar_name'/>
    </class-type>

    <class-type type-name='script_step_diphistoryst' inherits-from='script_stepst'>
        <stl-string name='event'/>
    </class-type>

    <class-type type-name='script_step_discussst' inherits-from='script_stepst'>
        <stl-string name='event'/>
    </class-type>

    <class-type type-name='script_step_topicdiscussionst' inherits-from='script_stepst'/>

    <class-type type-name='script_step_constructtopiclistst' inherits-from='script_stepst'/>

    <class-type type-name='script_step_dipeventst' inherits-from='script_step_eventst'>
        <stl-string name='parm1'/>
        <stl-string name='parm2'/>
        <stl-string name='parm3'/>
        <stl-string name='parm4'/>
        <stl-string name='parm5'/>
    </class-type>

    <class-type type-name='script_step_invasionst' inherits-from='script_step_eventst'>
        <stl-string name='parm'/>
    </class-type>

    <class-type type-name='script_step_eventst' inherits-from='script_stepst'/>


    <class-type type-name='script_varst'>
        <stl-string name='name'/>
        <virtual-methods>
            <vmethod name='instantiate'>
                <ret-type><pointer type-name='active_script_varst'/></ret-type>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='script_var_unitst' inherits-from='script_varst'/>
    <class-type type-name='script_var_longst' inherits-from='script_varst'/>

    <class-type type-name='active_script_varst'>
        <stl-string name='name'/>
        <virtual-methods>
            <vmethod name='setColor'/>
            <vmethod name='formatString'>
                <pointer type-name='static-string' name='output'/>
                <pointer type-name='stl-string' name='format'/>
            </vmethod>
            <vmethod name='getValue'>
                <pointer name='int_value' type-name='int32_t'/>
                <pointer name='ref_value' type-name='specific_ref'/>
            </vmethod>
            <vmethod name='setValue'>
                <pointer name='var' type-name='meeting_variable'/>
            </vmethod>
            <vmethod name='removeUnit'>
                <pointer name='ref_value' type-name='specific_ref'/>
            </vmethod>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='active_script_var_unitst' inherits-from='active_script_varst'>
        <pointer name='unit' type-name='unit'/>
    </class-type>

    <class-type type-name='active_script_var_longst' inherits-from='active_script_varst'>
        <int32_t name='value'/>
    </class-type>

    <struct-type type-name='meeting_variable' original-name='valvarrefst'>
        <int32_t name='value'/>
        <compound name='ref' type-name='specific_ref'/>
        <pointer name='active_var' type-name='active_script_varst'/>
    </struct-type>

    <struct-type type-name='meeting_diplomat_info' original-name='diplomacy_eventst'>
        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int16_t name='unk1' comment='maybe is_first_contact'/>
        <int32_t name='diplomat_id' ref-target='historical_figure'/>
        <int32_t name='associate_id' ref-target='historical_figure'/>
        <stl-vector name="topic_list">
            <enum base-type='int32_t' type-name='meeting_topic'/>
        </stl-vector>
        <stl-vector type-name='int32_t' name='topic_parms'/>
        <pointer type-name='entity_sell_requests' name='sell_requests'/>
        <pointer type-name='entity_buy_requests' name='buy_requests'/>
        <pointer name="dipscript" type-name="dipscript_info"/>
        <int32_t name="cur_step"/>
        <stl-vector name='active_script_vars' pointer-type='active_script_varst'/>
        <stl-string name="unk_50"/>
        <stl-string name="unk_6c"/>
        <bitfield name='flags'>
            <flag-bit name='dynamic_load' comment='destroy dipscript_info in destructor'/>
            <flag-bit name='failure'/>
            <flag-bit name='success'/>
        </bitfield>
        <stl-vector pointer-type='meeting_event' name='events'/>
        <stl-vector name='agreement_entity' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='agreement_topic' type-name='meeting_topic'/>
        <stl-vector name='agreement_year' type-name='int32_t'/>
        <stl-vector name='agreement_tick' type-name='int32_t'/>
        <stl-vector name='agreement_outcome' type-name='int16_t'/>
        <stl-vector name='contact_entity' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='contact_year' type-name='int32_t'/>
        <stl-vector name='contact_tick' type-name='int32_t'/>
    </struct-type>

    <enum-type type-name='meeting_topic' base-type='int16_t'>
        <enum-item name="DiscussCurrent"/>
        <enum-item name="RequestPeace"/>
        <enum-item name="TreeQuota"/>
        <enum-item name="BecomeLandHolder"/>
        <enum-item name="PromoteLandHolder"/>
        <enum-item name="ExportAgreement"/>
        <enum-item name="ImportAgreement"/>
        <enum-item name="PleasantPlace"/>
        <enum-item name="WorldStatus"/>
        <enum-item name="TributeAgreement"/>
    </enum-type>

    <enum-type type-name='meeting_event_type' base-type='int16_t'>
        <enum-item name="AcceptAgreement"/>
        <enum-item name="RejectAgreement"/>
        <enum-item name="AcceptPeace"/>
        <enum-item name="RejectPeace"/>
        <enum-item name="ExportAgreement"/>
        <enum-item name="ImportAgreement"/>
    </enum-type>

    <struct-type type-name='meeting_event' original-name='civ_agreementst'>
        <enum base-type='int16_t' type-name='meeting_event_type' name='type'/>
        <enum base-type='int16_t' type-name='meeting_topic' name='topic'/>
        <int16_t name='topic_parm'/>
        <stl-vector name='topic_epid' type-name='int32_t'/>
        <stl-vector name='topic_hfid' type-name='int32_t'/>
        <int32_t name='quota_total'/>
        <int32_t name='quota_remaining'/>
        <int32_t name='year'/>
        <int32_t name='ticks'/>
        <pointer type-name='entity_sell_prices' name='sell_prices'/>
        <pointer type-name='entity_buy_prices' name='buy_prices'/>
    </struct-type>

    <struct-type type-name='activity_info' original-name='activity_meetingst'>
        <int32_t name='id' init-value='-1' comment='bay12: save_index; assigned during Save'/>
        <int32_t name='unit_actor' ref-target='unit' init-value='-1' comment='bay12: actor_unid; diplomat or worker'/>
        <int32_t name='unit_noble' ref-target='unit' init-value='-1' comment='bay12: target_unid; meeting recipient'/>
        <int32_t name='place' ref-target='building' init-value='-1' comment='bay12: civzone_id'/>
        <bitfield base-type='uint16_t' name='flags'>
            <flag-bit name='next_step'/> bay12: SITESEARCHED
            <flag-bit name='checked_building'/> bay12: ARRIVEDATSITE
            <flag-bit name='add_delay'/> bay12: INITIALDISCUSS
            <flag-bit name='topic_discussed'/> bay12: DISCUSSINGTOPIC
            <flag-bit name='meeting_done'/> bay12: MEETINGCOMPLETE
        </bitfield>
        <int8_t name='worstroomrank' init-value='3'/>
        <int16_t name='delay' init-value='0' comment='bay12: discusscount'/>
        <int32_t name='tree_quota' init-value='-1' comment='bay12: tempvalue'/>
    </struct-type>

    <struct-type type-name='room_rent_info'>
        <stl-vector name='elements' pointer-type='building'/>
        <int32_t name='rent_value'/>
        <bitfield name='flags'>
            <flag-bit name='eviction_underway'/>
            <flag-bit name='move_underway'/>
        </bitfield>
    </struct-type>

    <enum-type type-name='activity_entry_type' base-type='int16_t'>
        <enum-item name='TrainingSession'/>
        <enum-item name='IndividualSkillDrill'/>
        <enum-item name='Conflict'/>
        <enum-item/>
        <enum-item/>
        <enum-item name='Conversation'/>
        <enum-item/>
        <enum-item name='Prayer'/>
        <enum-item name='Socialize'/>
        <enum-item name='Research'/>
        <enum-item name='FillServiceOrder'/>
        <enum-item name='Read'/>
        <enum-item name='Play'/>
    </enum-type>

    <struct-type type-name='activity_entry' instance-vector='$global.world.activities.all' key-field='id'>
        <int32_t name='id'/>
        <enum name='type' type-name='activity_entry_type'/>
        <stl-vector name='events' pointer-type='activity_event'/>
        <int32_t name='next_event_id'/>
        <int32_t name='army_controller' ref-target='army_controller' since='v0.40.01'/>
    </struct-type>

    <enum-type type-name='activity_event_type'>
        <enum-item name='TrainingSession'/>
        <enum-item name='CombatTraining'/>
        <enum-item name='SkillDemonstration'/>
        <enum-item name='IndividualSkillDrill'/>
        <enum-item name='Sparring'/>
        <enum-item name='RangedPractice'/>
        <enum-item name='Harassment'/>
        <enum-item name='Conversation'/>

        <enum-item name='Conflict'/>
        <enum-item name='Guard'/>
        <enum-item name='Reunion'/>
        <enum-item name='Prayer'/>
        <enum-item name='Socialize'/>
        <enum-item name='Worship'/>
        <enum-item name='Performance'/>
        <enum-item name='Research'/>

        <enum-item name='PonderTopic'/>
        <enum-item name='DiscussTopic'/>
        <enum-item name='Read'/>
        <enum-item name='FillServiceOrder'/>
        <enum-item name='Write'/>
        <enum-item name='CopyWrittenContent'/>
        <enum-item name='TeachTopic'/>
        <enum-item name='Play'/>

        <enum-item name='MakeBelieve'/>
        <enum-item name='PlayWithToy'/>
        <enum-item name='Encounter'/>
        <enum-item name='StoreObject'/>
    </enum-type>

    <struct-type type-name='activity_event_participants'>
        <stl-vector name='histfigs'>
            <int32_t ref-target='historical_figure'/>
        </stl-vector>
        <stl-vector name='units'>
            <int32_t ref-target='unit'/>
        </stl-vector>

        -- Seemingly units that are free to be grouped
        -- away into subevents or sparring pairs.
        <stl-vector name='free_histfigs'>
            <int32_t ref-target='historical_figure'/>
        </stl-vector>
        <stl-vector name='free_units'>
            <int32_t ref-target='unit'/>
        </stl-vector>

        -- Holder event
        <int32_t name='activity_id' ref-target='activity_entry'/>
        <int32_t name='event_id'/>
    </struct-type>

    <enum-type type-name='activity_event_item_role_type' base-type='int32_t'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='TARGET_TO_POUR'/>
        <enum-item name='TARGET_TO_FILL'/>
        <enum-item name='TARGET_TO_READ'/>
        <enum-item name='TARGET_TO_WRITE_ON'/>
        <enum-item name='TARGET_TO_COPY'/>
        <enum-item name='PERFORMANCE_INSTRUMENT'/>
        <enum-item name='TOY'/>
    </enum-type>

    <enum-type type-name='activity_event_building_role_type' base-type='int32_t'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='SIT_AND_READ'/>
        <enum-item name='SIT_AND_WRITE'/>
        <enum-item name='PLACED_WRITING_MATERIALS'/>
        <enum-item name='PERFORMANCE_INSTRUMENT'/>
    </enum-type>

    <class-type type-name='activity_event' original-name='activity_eventst'>
        <int32_t name='event_id'
                 comment='bay12: local_id; mostly, but not always, the index in activity.events'/>
        <int32_t name='activity_id' ref-target='activity_entry' comment='bay12: source_activity_id'/>

        <code-helper name='find-instance'>
            (let ((activity (find-instance $activity_entry $$)))
              (find-by-id $activity.events $event_id $))
        </code-helper>

        <int32_t name='parent_event_id' ref-target='activity_event' aux-value='$$.activity_id' comment='bay12: source_activity_event_id'/>

        <bitfield name='flags'>
            <flag-bit name='dismissed' comment='bay12: DEAD; to be removed from squad_position, anyway'/>
            <flag-bit name='squad' comment='bay12: SQUAD; for all in training session, but not ind.drill'/>
        </bitfield>

        <stl-vector name='item'>
            <pointer comment='bay12: activity_event_itemst'>
                <enum type-name='activity_event_item_role_type' name='role'/>
                <int32_t name='item_id' ref-target='item' init-value='-1' comment='is artifact id for some activities ie. copy written'/>
                <bitfield name='flags' base-type='uint32_t'>
                    <flag-bit name='HIT_BY_DELETION'/>
                </bitfield>
            </pointer>
        </stl-vector>
        <stl-vector name='building'>
            <pointer comment='activity_event_buildingst'>
                <int32_t name='role'/>
                <int32_t name='bld_id' init-value='-1'/>
                <int32_t name='unit_id' ref-target='unit'
                         comment='is unit ID for writing jobs and reading'/>
                <bitfield name='flags' base-type='uint32_t'>
                    <flag-bit name='HIT_BY_DELETION'/>
                </bitfield>
            </pointer>
        </stl-vector>

        <virtual-methods>
            <vmethod ret-type='activity_event_type' name='getType'/>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod is-destructor='true'/>
            <vmethod ret-type='bool' name='isEmpty'
                     comment='returns true if hist_figure_ids empty or if various subclass fields are uninitialized'/>

            <vmethod ret-type='int32_t' name='get_building_id' comment='returns -1'/>
            <vmethod name='set_building_id' comment='does nothing'> <int32_t/> </vmethod>
            <vmethod name='getParticipantInfo'>
                <ret-type> <pointer type-name='activity_event_participants'/> </ret-type>
            </vmethod>
            <vmethod name='dismiss'> <bool name='children_too'/> </vmethod>
            <vmethod name='move'>
                <int16_t name='dx'/>
                <int16_t name='dy'/>
                <int16_t name='dz'/>
            </vmethod>
            <vmethod name='removeParticipant'> <int32_t name='histfig'/> <int32_t name='unit'/> <bool/> </vmethod>

            <vmethod name='follow_order'>
                <pointer type-name='dungeon_contextst' name='context'/>
                <pointer type-name='unit' name='unit'/>
            </vmethod>
            <vmethod ret-type='int32_t' name='checkDrillInvalid'>
                <pointer type-name='unit' name='unit'/>
            </vmethod>
            <vmethod ret-type='bool' name='decUniformLock'><int32_t/></vmethod>
            <vmethod name='getSquadEventType'>
                <ret-type> <enum base-type='int16_t' type-name='squad_event_type'/> </ret-type>
            </vmethod>
            <vmethod name='setDemoSkill'>
                <enum base-type='int16_t' name='skill' type-name='job_skill'/>
            </vmethod>

            <vmethod name='setSkillDemoTimers'>
                <int32_t name='wait_countdown'/>
                <int32_t name='train_rounds'/>
                <int32_t name='train_countdown'/>
            </vmethod>
            <vmethod name='adjustOrganizeCounter'>
                <int32_t name='amount'/>
            </vmethod>
            <vmethod name='getOrganizer' comment='or perhaps somebody else - only works for combat_training and skill_demonstration'>
                <pointer name='hist_figure_id'>
                    <pointer type-name='int32_t' ref-target='historical_figure'/>
                </pointer>
                <pointer name='unit_id'>
                    <pointer type-name='int32_t' ref-target='unit'/>
                </pointer>
            </vmethod>
            <vmethod name='getBuilding' comment='returns pointer to building_id'>
                <ret-type><pointer type-name='int32_t'/></ret-type>
            </vmethod>
            <vmethod ret-type='bool' name='isSparring'/>

            <vmethod ret-type='int16_t' name='getUniformType'/>
            <vmethod name='getName'>
                <int32_t name='unit_id'/>
                <pointer type-name='stl-string' name='str'/>
            </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='activity_event_training_sessionst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
    </class-type>

    <class-type type-name='activity_event_combat_trainingst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='organize_counter' comment='gt 0 => organizing, lt 0 => done'/>
    </class-type>

    <class-type type-name='activity_event_skill_demonstrationst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
        <int32_t name='unit_id' ref-target='unit'/>
        <enum base-type='int16_t' name='skill' type-name='job_skill'/>
        <int32_t name='organize_counter'/>
        <int32_t name='wait_countdown' init-value='100'/>
        <int32_t name='train_rounds' init-value='15'/>
        <int32_t name='train_countdown' init-value='20'/>
    </class-type>

    <class-type type-name='activity_event_individual_skill_drillst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='countdown' init-value='3000'/>
    </class-type>

    <class-type type-name='activity_event_sparringst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <stl-vector name='groups'>
            <pointer>
                <stl-vector name='units' type-name='int32_t' ref-target='unit'/>
                <int32_t name='countdown' init-value='3000'/>
                <int32_t name='building_id' ref-target='building'/>
            </pointer>
        </stl-vector>
        <int32_t name='countdown' init-value='3000'/>
    </class-type>

    <class-type type-name='activity_event_ranged_practicest' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>

        <int32_t name='building_id' ref-target='building'/>
        <int16_t/>
        <int16_t/>
        <int32_t/>
    </class-type>

    <class-type type-name='activity_event_harassmentst' inherits-from='activity_event'>
        <stl-vector name='unk_1' type-name='int32_t'/>
        <stl-vector name='unk_2'>
            <pointer>
                <int32_t name='unk_1' comment='is an hfid'/>
                <static-array name='unk_2' type-name='int32_t' count='3'/>

                <int32_t name='unk_3'/>
                <int32_t name='unk_4'/>
                <int32_t name='unk_5'/>
                <int32_t name='unk_6'/>

                <int32_t name='unk_7'/>
                <int32_t name='unk_8'/>
                <int32_t name='unk_9'/>
                <int32_t name='unk_10'/>

                <stl-vector name='unk_11' type-name='int32_t'/>

                <int32_t name='unk_12'/>
                <int32_t name='unk_13'/>
            </pointer>
        </stl-vector>
        <int32_t name='unk_3'/>
        <int32_t name='unk_4'/>
        <int32_t name='unk_5'/>
        <int32_t name='unk_6'/>
        <int32_t name='unk_7'/>
        <int32_t name='unk_8'/>
    </class-type>

    <enum-type type-name='conversation_state_type' base-type='int16_t'> bay12: ConversationState
        <enum-item name='NONE' value='-1'/>
        <enum-item name='START'/>
        <enum-item name='MAIN'/>
        <enum-item name='CURRENT_PROBLEMS'/>
        <enum-item name='BRING_UP_SPECIFIC_INCIDENT'/>
        <enum-item name='CREATE_GENERAL_TROUBLES_SUMMARY'/>
        <enum-item name='INCIDENT'/>
        <enum-item name='RUMOR'/>
        <enum-item name='COMPLETE'/>
        <enum-item name='BAIL'/>
        <enum-item name='SLEEP_PERMISSION_REQUESTED'/>
        <enum-item name='JOIN_REASON'/>
        <enum-item name='RESPOND_JOIN_ADVENTURE'/>
        <enum-item name='RESCUE'/>
        <enum-item name='AGREEMENT'/>
        <enum-item name='TRADE'/>
        <enum-item name='SURROUNDINGS'/>
        <enum-item name='ACCUSATION_NIGHT_CREATURE'/>
        <enum-item name='PROFESSION'/>
        <enum-item name='FAMILY'/>
        <enum-item name='CEASE_HOSTILITIES_REQUEST'/>
        <enum-item name='DEMAND_YIELD_REQUEST'/>
        <enum-item name='TROUBLES_SUMMARY'/>
        <enum-item name='SPECIFIC_TROUBLE'/>
        <enum-item name='ASK_FOR_DIRECTIONS'/>
        <enum-item name='ASKED_FOR_SITE_DIRECTIONS'/>
        <enum-item name='ASKED_FOR_HF_DIRECTIONS'/>
        <enum-item name='ASKED_FOR_SITE_GUIDE'/>
        <enum-item name='ASKED_FOR_HF_GUIDE'/>
        <enum-item name='JOIN_GUIDE_DESTINATION'/>
        <enum-item name='ASKED_ABOUT_ABSTRACT_BUILDING'/>
        <enum-item name='FAVOR_REQUEST_DEMAND_ORDER'/>
        <enum-item name='JUST_PLACED_ORDER'/>
        <enum-item name='JUST_BOUNCED_ORDER'/>
        <enum-item name='REQUESTED_FOLLOW'/>
        <enum-item name='PERSONAL_BARTER'/>
        <enum-item name='ASKED_FOR_SQUAD_TASK'/>
        <enum-item name='ASKED_TO_JOIN_SQUAD'/>
        <enum-item name='TRAVELS'/>
        <enum-item name='ENTITY'/>
        <enum-item name='CONFLICT'/>
        <enum-item name='SITE_TRADE_PARTNERS'/>
        <enum-item name='DEMAND_ITEM_DROP_REQUEST'/>
        <enum-item name='ITEM_LOCATION_REQUEST'/>
        <enum-item name='DEMAND_TRIBUTE_FOR_ENTITY'/>
        <enum-item name='OFFER_TRIBUTE_TO_ENTITY'/>
        <enum-item name='CANCEL_TRIBUTE_TO_ENTITY'/>
        <enum-item name='OFFER_PEACE'/>
        <enum-item name='AGREEMENT_CANCELLED'/>
        <enum-item name='ASKED_TO_ADOPT_CHILD'/>
        <enum-item name='INVITED_TO_JOIN_SQUAD'/>
        <enum-item name='KICKED_OUT_OF_SQUAD'/>
        <enum-item name='ASKED_TO_ACCEPT_POSITION_FROM_SPEAKER'/>
        <enum-item name='JUST_INVOKED_SERVITUDE'/>
        <enum-item name='GAVE_SQUAD_TASK_REPORT'/>
        <enum-item name='ASK_ABOUT_SOMEBODY'/>
        <enum-item name='ASKED_ABOUT_HF'/>
        <enum-item name='CURRENT_STATE'/>
        <enum-item name='REQUESTED_SERVICES_OF_STATE_AB'/>
        <enum-item name='LISTED_SERVICES_OF_STATE_AB'/>
        <enum-item name='REQUESTED_SPECIFIC_STATE_SERVICE'/>
        <enum-item name='RESPOND_JOIN_ENTERTAIN'/>
        <enum-item name='ASKED_TO_JOIN_TROUPE'/>
        <enum-item name='INVITED_TO_JOIN_TROUPE'/>
        <enum-item name='KICKED_OUT_OF_TROUPE'/>
        <enum-item name='LEFT_TROUPE'/>
        <enum-item name='VOLUNTEER_CURRENT_STATE'/>
        <enum-item name='VOLUNTEER_VALUE'/>
        <enum-item name='VALUE_PUT_FORWARD'/>
        <enum-item name='PASSIVE_RESPONSE_TO_VALUE_ARGUMENT'/>
        <enum-item name='FLATTER_RESPONSE_TO_VALUE_ARGUMENT'/>
        <enum-item name='DISMISS_RESPONSE_TO_VALUE_ARGUMENT'/>
        <enum-item name='ASKED_FOR_PERSONAL_ENID_OCCUPATION'/>
        <enum-item name='ASKED_FOR_ENTIRE_ENTITY_ENID_OCCUPATION'/>
        <enum-item name='MISSING_ARTIFACT'/>
        <enum-item name='ASKED_FOR_IDENTITY_FOR_SITE_CLEARANCE'/>
        <enum-item name='INTERROGATE'/>
        <enum-item name='FISHED_FOR_MASTER'/>
        <enum-item name='FISHED_FOR_PLOTS'/>
        <enum-item name='FLATTER'/>
        <enum-item name='PACIFY'/>
        <enum-item name='UNNEEDED_PACIFY'/>
        <enum-item name='TOLD_JOKE'/>
        <enum-item name='GIFT_PET'/>
        <enum-item name='GAVE_PET'/>
    </enum-type>

    <struct-type type-name='service_order_templatest'>
        <int32_t name='local_id'/>
        <enum name="type" type-name='service_order_type'/>
        <int16_t name='item_type'/>
        <int16_t name='item_subtype'/>
        <int16_t name='item_mat'/>
        <int32_t name='item_matg'/>
        <int32_t name='cost'/>
        <int32_t name='full_cost'/>
        <int32_t name='room_ab_local_id' comment='not zone or ab id -- something local to ab'/>
    </struct-type>

    <struct-type type-name='utterancest'>
        <int32_t name='speaker_unid' ref-target='unit'/>
        <int32_t name='speaker_hfid' ref-target='historical_figure'/>
        <enum name='choice' type-name='talk_choice_type'/>
        <compound name='rumor' type-name='entity_event'/>
        <int32_t name='incident_id'/>
        <int16_t name='curf' comment='foreground'/>
        <int16_t name='curb' comment='background'/>
        <int16_t name='curbr' comment='bright'/>
        <int32_t name='year'/>
        <int32_t name='precise_phase' comment='ticks'/>
        <compound is-union='true'>
            <int32_t name='variable1'/>
            <enum name="adventure_desire" type-name='adventure_desire_state_type'/>
            <enum name="opinion" type-name='opinion_type'/>
            <int32_t name='sleep_zone_id'/>
            <int32_t name='main_relevant_id'/>
            <int32_t name='banter_item_id' ref-target='item'/>
            <enum name="trouble_type" type-name='conversation_trouble_type'/>
            <int32_t name='squad_id' ref-target='squad'/>
            <int32_t name='agreement_id' ref-target='agreement'/>
            <int32_t name='giver_entity_id' ref-target='historical_entity'/>
            <int32_t name='asker_entity_id' ref-target='historical_entity'/>
            <enum name="emotion" type-name='emotion_type'/>
            <int32_t name='position_entity_id' ref-target='historical_entity'/>
            <int32_t name='invocation_target_hfid' ref-target='historical_figure'/>
            <int32_t name='service_order_id'/>
            <enum name="value_type" type-name='value_type'/>
            <enum name="squad_order_type" type-name='squad_order_type'/>
            <int32_t name='belief_system_id'/>
        </compound>
        <compound is-union='true'>
            <int32_t name='variable2'/>
            <enum name="reason" type-name='history_event_reason'/>
            <int32_t name='site_id2' ref-target='world_site'/>
            <int32_t name='banter_bld_id'/>
            <int32_t name='trouble_amount'/>
            <int32_t name='dipstate_holder_enid' ref-target='historical_entity'/>
            <int32_t name='squad_joiner_unid' ref-target='unit'/>
            <int32_t name='taker_entity_id' ref-target='historical_entity'/>
            <int32_t name='considerer_entity_id' ref-target='historical_entity'/>
            <enum name="circumstance" type-name='unit_thought_type'/>
            <enum name="witness" type-name='witness_type'/>
            <int32_t name='position_profile_id'/>
            <int32_t name='invocation_target_identity_id'/>
            <int32_t name='service_order_occid'/>
            <int32_t name='value_level'/>
            <int32_t name='squad_order_target_hfid' ref-target='historical_figure'/>
            <int32_t name='story_index'/>
            <int32_t name='question_identity_id'/>
        </compound>
        <compound is-union='true'>
            <int32_t name='variable3'/>
            <int32_t name='banter_entity_id' ref-target='historical_entity'/>
            <int32_t name='agreement_subject_id'/>
            <int32_t name='order_squad_id' ref-target='squad'/>
            <int32_t name='circumstance_id'/>
            <enum name="occupation_type" type-name='occupation_type'/>
            <int32_t name='squad_order_target_stid' ref-target='world_site'/>
            <int32_t name='story_frame_index'/>
        </compound>
        <compound is-union='true'>
            <int32_t name='variable4'/>
            <int32_t name='circumstance_value'/>
            <int32_t name='occupation_unid' ref-target='unit'/>
            <int32_t name='squad_order_target_enid' ref-target='historical_entity'/>
        </compound>
    </struct-type>

    <struct-type type-name='conflict_reportst'>
        <stl-vector name='incident' pointer-type='incident'/>
        <int32_t name='earliest_year'/>
        <int32_t name='earliest_season_count'/>
        <stl-vector name='personal_kill_hfid' type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name='personal_kill_batch_race' type-name='int32_t'/>
        <stl-vector name='personal_kill_batch_caste' type-name='int32_t'/>
        <stl-vector name='personal_kill_batch_entity_id' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='personal_kill_batch_number' type-name='int32_t'/>
        <stl-vector name='died_hfid' type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name='slayer_hfid' type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name='slayer_race' type-name='int32_t'/>
        <stl-vector name='slayer_caste' type-name='int32_t'/>
        <stl-vector name='slayer_entity_id' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='died_batch_race' type-name='int32_t'/>
        <stl-vector name='died_batch_caste' type-name='int32_t'/>
        <stl-vector name='died_batch_entity_id' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='died_batch_number' type-name='int32_t'/>
        <int32_t name='starter_actor_hfid' ref-target='historical_figure'/>
        <int32_t name='starter_actor_race'/>
        <int32_t name='starter_actor_caste'/>
        <int32_t name='starter_actor_entity_id' ref-target='historical_entity'/>
        <int32_t name='starter_target_hfid' ref-target='historical_figure'/>
        <int32_t name='starter_target_race'/>
        <int32_t name='starter_target_caste'/>
        <int32_t name='starter_target_entity_id' ref-target='historical_entity'/>
        <bitfield name='spec_flag' base-type='uint32_t'>
            <flag-bit name='personally_involved'/>
        </bitfield>
        <int32_t name='location_srid'/>
        <int32_t name='location_flid'/>
        <int32_t name='location_stid' ref-target='world_site'/>
    </struct-type>

    <class-type type-name='activity_event_conversationst' inherits-from='activity_event'>
        <stl-vector name='participants'>
            <pointer comment='conversation_participantst'>
                <int32_t name='unit_id' ref-target='unit'/>
                <int32_t name='histfig_id' ref-target='historical_figure'/>
            </pointer>
        </stl-vector>
        <enum name='state' type-name='conversation_state_type'/>
        <compound name='state_rumor' type-name='entity_event'/>
        <int32_t name='state_incident_id'/>
        <compound is-union='true'>
            <int32_t name='state_relevant_id'/>
            <int32_t name='state_value_type'/>
            <int32_t name='state_asker_entity_id' ref-target='historical_entity'/>
        </compound>
        <compound is-union='true'>
            <int32_t name='state_relevant_id_2'/>
            <int32_t name='state_value_level'/>
            <int32_t name='state_considerer_entity_id' ref-target='historical_entity'/>
            <int32_t name='state_question_identity_id'/>
        </compound>
        <compound is-union='true'>
            <int32_t name='state_relevant_id_3'/>
            <int32_t name='state_attack_roll'/>
            <int32_t name='state_occupation_type'/>
        </compound>
        <compound is-union='true'>
            <int32_t name='state_relevant_id_4'/>
            <int32_t name='state_defense_roll'/>
        </compound>
        <stl-vector type-name='conversation_trouble_type' name='state_trouble_type'/>
        <stl-vector name='state_trouble_amount' type-name='int32_t'/>
        <stl-vector name='state_service_order_template' pointer-type='service_order_templatest'/>
        <stl-vector name='state_mentioned_stid' type-name='int32_t' ref-target='world_site' comment='binary'/>
        <stl-vector name='state_mentioned_hfid' type-name='int32_t' ref-target='historical_figure' comment='binary'/>
        <compound name='state_incident_hf' type-name='incident_hfid'/>
        <enum name='state_tact' type-name='conversation_tact_type'/>
        <stl-vector name='utterance' pointer-type='utterancest'/>
        <int32_t name='anticipated_speaker_unid' ref-target='unit' comment="-1 = no one's turn"/>
        <int32_t name='anticipated_speaker_hfid' ref-target='historical_figure' comment="-1 = no one's turn"/>
        <int32_t name='inactivity_timer' comment='ticks since the last turn'/>
        <bitfield name='spec_flag' base-type='uint32_t'>
            <flag-bit name='monologue'/>
            <flag-bit name='shouting'/>
        </bitfield>
        <compound name='conflict_report' type-name='conflict_reportst'/>
        <stl-vector name='choice' pointer-type='talk_choice'/>
        <enum name='return_topic_state' type-name='conversation_state_type' init-value='NONE'/>
        <compound name='return_topic_rumor' type-name='entity_event'/>
        <int32_t name='return_topic_incident_id'/>
    </class-type>

    <class-type type-name='activity_event_conflictst' inherits-from='activity_event'>
        <stl-vector name='sides'>
            <pointer>
                <int32_t name='id'/>
                <stl-vector name='histfig_ids' type-name='int32_t' ref-target='historical_figure'/>
                <stl-vector name='unit_ids' type-name='int32_t' ref-target='unit'/>
                <stl-vector name='enemies' comment='relationships to other sides in this conflict'>
                    <pointer>
                        <int32_t name='id'/>
                        <enum name='conflict_level' type-name='conflict_level'/>
                    </pointer>
                </stl-vector>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
            </pointer>
        </stl-vector>
        <int32_t name='unk_1'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3'/>
        <int32_t name='unk_v42_3' since='v0.42.01'/>
        <int32_t since='v0.50.01'/>
    </class-type>

    <class-type type-name='activity_event_guardst' inherits-from='activity_event'>
        <stl-vector name='unk_1' type-name='int32_t'/>
        <compound name='unk_2' type-name='coord'/>
        <int32_t name='unk_3'/>
    </class-type>

    <class-type type-name='activity_event_reunionst' inherits-from='activity_event'>
        <stl-vector name='unk_1' type-name='int32_t'/>
        <stl-vector name='unk_2' type-name='int32_t'/>
        <int32_t name='unk_3'/>
        <int32_t name='unk_4'/>
        <int32_t name='unk_5'/>
        <int32_t name='unk_6'/>
        <int32_t name='unk_7'/>
    </class-type>

    <class-type type-name='activity_event_prayerst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='histfig_id' ref-target='historical_figure' comment='deity'/>
        <enum base-type='int16_t' type-name='sphere_type' name='topic' comment='-1 when praying'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='location_id' ref-target='abstract_building' aux-value='$$.site_id'/>
        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='timer'/>
    </class-type>

    <class-type type-name='activity_event_socializest' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='location_id' ref-target='abstract_building' aux-value='$$.site_id'/>
        <int32_t name='building_id'/>
        <int32_t name='unk_1'/>
    </class-type>

    <class-type type-name='activity_event_worshipst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='location_id' ref-target='abstract_building' aux-value='$$.site_id'/>
        <int32_t name='building_id'/>
        <int32_t name='unk_1'/>
    </class-type>

    <enum-type type-name='performance_event_type'>
        <enum-item name='STORY'/>
        <enum-item name='POETRY'/>
        <enum-item name='MUSIC'/>
        <enum-item name='DANCE'/>
        <enum-item name='SERMON_EVENT'/>
        <enum-item name='SERMON_SPHERE'/>
        <enum-item name='SERMON_PROMOTE_VALUE'/>
        <enum-item name='SERMON_INVEIGH_AGAINST_VALUE'/>
    </enum-type>

    <enum-type type-name='performance_participant_type'>
        <enum-item name='TELL_STORY'/>
        <enum-item name='RECITE_POETRY'/>
        <enum-item name='MAKE_MUSIC'/>
        <enum-item name='PERFORM_DANCE'/>
        <enum-item name='LISTEN'/>
        <enum-item name='HEAR'/>
    </enum-type>

    <class-type type-name='activity_event_performancest' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <enum name='type' base-type='int32_t' type-name='performance_event_type'/>
        <int32_t name='event' ref-target='history_event' comment='used for story'/>
        <int32_t name='written_content_id' ref-target='written_content'/>
        <int32_t name='poetic_form' ref-target='poetic_form'/>
        <int32_t name='music_form' ref-target='musical_form'/>
        <int32_t name='dance_form' ref-target='dance_form'/>
        <int32_t name='unk_1'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3'/>
        <int32_t name='unk_4'/>
        <int32_t name='unk_5'/>
        <int32_t name='unk_6'/>
        <stl-vector name='participant_actions'>
            <pointer>
                <enum name='type' base-type='int32_t' type-name='performance_participant_type'/>
                <int32_t name='sub_type' comment='depends on type. if music: voice index in musical form'/>
                <int32_t name='unit_id' ref-target='unit'/>
                <int32_t name='histfig_id' ref-target='historical_figure'/>
                <int32_t name='unk_act_1'/>
                <int32_t name='unk_act_2'/>
                <compound name='unk_act_3' type-name='coord'/>
                <int32_t name='unk_act_6'/>
                <int32_t name='unk_act_7'/>
                <int32_t name='unk_act_8'/>
                <int32_t name='unk_act_9'/>
            </pointer>
        </stl-vector>
        <compound name='pos_performer_2d' type-name='coord2d'/>
        <compound name='pos_performer' type-name='coord'/>

        <int16_t name='unk_pos_1_x0'/>
        <int16_t name='unk_pos_1_y0'/>
        <int16_t name='unk_pos_1_x1'/>
        <int16_t name='unk_pos_1_y1'/>
        <int16_t name='unk_pos_1_z'/>

        <int16_t name='unk_pos_2_x0'/>
        <int16_t name='unk_pos_2_y0'/>
        <int16_t name='unk_pos_2_x1'/>
        <int16_t name='unk_pos_2_y1'/>
        <int16_t name='unk_pos_2_z'/>

        <stl-vector name='play_orders' pointer-type='performance_play_orderst'/>
        <int32_t name='unk_11'/>

        <static-array name='unk_12' type-name='int8_t' count='49'/>
        <compound name='unk_13' type-name='coord'/>

        <int32_t name='unk_16'/>
        <int32_t name='unk_17'/>
        <int32_t name='unk_18'/>
    </class-type>

    <class-type type-name='performance_play_orderst'>
        <int32_t name='unk_1'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3'/>
        <stl-vector name='unk_4'>
            <pointer>
                <static-array name='unk_1' type-name='int16_t' count='28'/>
                <static-array name='unk_2' type-name='int16_t' count='28'/>
            </pointer>
        </stl-vector>
        <int32_t name='unk_5'/>
        <virtual-methods>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='activity_event_researchst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='location_id' ref-target='abstract_building' aux-value='$$.site_id'/>
        <int32_t name='building_id'/>
    </class-type>

    <class-type type-name='activity_event_ponder_topicst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='location_id' ref-target='abstract_building' aux-value='$$.site_id'/>
        <int32_t name='building_id'/>
        <int32_t name='unk_1'/>
        <compound name='knowledge' type-name='knowledge_scholar_category_flag'/>
        <int32_t name='timer'/>
    </class-type>

    <class-type type-name='activity_event_discuss_topicst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='location_id' ref-target='abstract_building' aux-value='$$.site_id'/>
        <int32_t name='building_id'/>

        <int32_t name='unk_1'/>
        <compound name='knowledge' type-name='knowledge_scholar_category_flag'/>
        <int32_t name='timer'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3' ref-target='historical_figure'/>
    </class-type>

    <class-type type-name='activity_event_readst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='building_id'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='location_id' ref-target='abstract_building' aux-value='$$.site_id'/>
        <int32_t name='state' comment='0 if not in progress, 1 if reading'/>
        <int32_t name='timer'/>
    </class-type>

    <class-type type-name='activity_event_fill_service_orderst' inherits-from='activity_event'>
        <int32_t name='histfig_id' ref-target='historical_figure'/>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='occupation_id' ref-target='occupation'/>
        <int32_t name='unk_1'/>
    </class-type>

    <class-type type-name='activity_event_writest' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='building_id'/>
        <int32_t name='site_id'/>
        <int32_t name='location_id'/>
        <bitfield name='unk_1'>
            <flag-bit/>
            <flag-bit/>
            <flag-bit/>
        </bitfield>
        <int32_t name='timer'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3'/>
        <enum name='mode'>
            <enum-item name='WriteAboutKnowledge'/>
        </enum>
        <compound name='knowledge' type-name='knowledge_scholar_category_flag'/>
    </class-type>

    <class-type type-name='activity_event_copy_written_contentst' inherits-from='activity_event'>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='histfig_id' ref-target='historical_figure'/>
        <int32_t name='occupation_id'/>
        <int32_t name='building_id'/>
        <int32_t name='site_id'/>
        <int32_t name='location_id'/>
        <bitfield name='flagsmaybe'>
            <flag-bit name='unk0'/>
            <flag-bit/>
            <flag-bit/>
            <flag-bit/>
            <flag-bit/>
            <flag-bit/>
            <flag-bit/>
            <flag-bit/>
            <flag-bit/>
            <flag-bit/>
        </bitfield>
        <int32_t name='unk_1'/>
        <int32_t name='timer'/>
        <int32_t since='v0.50.01'/>
    </class-type>

    <class-type type-name='activity_event_teach_topicst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='unk_1'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3'/>

        <int32_t name='unk_4'/>
        <int32_t name='unk_5'/>
        <int32_t name='unk_6'/>

        <int32_t name='unk_7'/>
        <int32_t name='unk_8'/>
        <int32_t name='unk_9'/>
    </class-type>

    <class-type type-name='activity_event_playst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='unk_1'/>
        <static-array name='unk_2' type-name='int8_t' count='49'/>
        <compound name='unk_3' type-name='coord'/>
    </class-type>

    <class-type type-name='activity_event_make_believest' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='unk_1'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3'/>
        <static-array name='unk_4' type-name='int8_t' count='49'/>
        <compound name='unk_5' type-name='coord'/>
    </class-type>

    <class-type type-name='activity_event_play_with_toyst' inherits-from='activity_event'>
        <compound name='participants' type-name='activity_event_participants'/>
        <int32_t name='unk_1'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3'/>
        <compound name='unk'>
            <static-array name='unk_1' type-name='int8_t' count='49'/>
            <compound name='unk_2' type-name='coord'/>
        </compound>
        <int32_t name='unk_4'/>
        <stl-vector name='unk_5' type-name='pointer'/>
    </class-type>

    <class-type type-name='activity_event_encounterst' inherits-from='activity_event'>
        <stl-vector name='unk_1'>
            <pointer>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
                <int32_t name='unk_3'/>
                <int32_t name='unk_4'/>
                <int32_t name='unk_5'/>
                <int32_t name='unk_6'/>
                <int32_t name='unk_7'/>
                <int32_t name='unk_8'/>
                <int32_t name='unk_9'/>
                <int32_t name='unk_10'/>
            </pointer>
        </stl-vector>
        <stl-vector name='unk_2'>
            <pointer>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
                <int32_t name='unk_3'/>
                <int32_t name='unk_4'/>
                <int32_t name='unk_5'/>
                <int32_t name='unk_6'/>
                <int32_t name='unk_7'/>
                <int32_t name='unk_8'/>
            </pointer>
        </stl-vector>
        <stl-vector name='unk_3' type-name='int32_t'/>
        <stl-vector name='unk_4' type-name='int32_t'/>
        <int32_t name='unk_5'/>
        <int32_t name='unk_6'/>
        <int32_t name='unk_7'/>
        <int32_t name='unk_8'/>
        <int32_t name='unk_9'/>
    </class-type>

    <class-type type-name='activity_event_store_objectst' inherits-from='activity_event'>
        <int32_t name='unk_1'/>
        <compound name='unk_2' type-name='coord'/>
        <int32_t name='building_id' ref-target='building'/>
        <int32_t name='unk_3'/>
        <int32_t name='unk_4'/>
    </class-type>

    <struct-type type-name='schedule_info' key-field='id' instance-vector='$global.world.schedules.all'>
        <int32_t name='id'/>
        <int16_t name='unk_1'/>
        <stl-vector name='slots' pointer-type='schedule_slot'/>
    </struct-type>

    <struct-type type-name='schedule_slot'>
        <int16_t name='type' comment='0:Eat, 1:Sleep, 2-4:???'/>
        <int16_t name='start_time'/>
        <int16_t name='end_time'/>
        <int16_t name='unk_1'/>
        <int8_t name='processed'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
