<data-definition>
    <struct-type type-name='dipscript_text' original-name='dipscript_textst'>
        <stl-string name='name' comment='dwarf_liaison_bye, etc.'/>
        <stl-vector name='contents' pointer-type='stl-string'/>
    </struct-type>

    <struct-type type-name='dipscript_popup' original-name='meetingmomentst' >
        <int32_t name='meeting_holder_actor' ref-target='unit' comment='bay12: actor_unid'/>
        <int32_t name='meeting_holder_noble' ref-target='unit' comment='bay12: noble_unid'/>
        <pointer name='activity' type-name='activity_info' comment='bay12: act'/>
        <bitfield name='flags'>
            <flag-bit name='close_screen'/> bay12: DEAD
            <flag-bit name='new_screen'/> bay12: RESTING
        </bitfield>
        <int32_t name='moment_time_left'/>
    </struct-type>

    <class-type type-name='script_stepst'>
        <int32_t name='next_step_idx'/>
        <virtual-methods>
            <vmethod name='setNextStep' ret-type='bool'>
                <int32_t name='idx'/>
            </vmethod>
            <vmethod name='execute' ret-type='int32_t'>
                <pointer name='context' type-name='script_environmentst'/>
            </vmethod>
            <vmethod name='skip' ret-type='int32_t'>
                <pointer name='context' type-name='script_environmentst'/>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='script_step_setvarst' inherits-from='script_stepst'>
        <stl-string name='dest_type'/>
        <stl-string name='dest_name'/>
        <stl-string name='src_type'/>
        <stl-string name='src_name'/>
    </class-type>

    <class-type type-name='script_step_simpleactionst' inherits-from='script_stepst'>
        <stl-string name='type'/>
        <stl-string name='subtype'/>
    </class-type>

    <class-type type-name='script_step_conditionalst' inherits-from='script_stepst'>
        <compound name='condition'> bay12: conditionalst
            <stl-string name='var1_type'/>
            <stl-string name='var1_name'/>
            <stl-string name='comparison'/>
            <stl-string name='var2_type'/>
            <stl-string name='var2_name'/>
        </compound>
        <int32_t name='conditional_next_step_idx'/>
    </class-type>

    <class-type type-name='script_step_textviewerst' inherits-from='script_stepst'>
        <stl-string name='filename'/>
        <stl-string name='outvar_name'/>
    </class-type>

    <class-type type-name='script_step_diphistoryst' inherits-from='script_stepst'>
        <stl-string name='event'/>
    </class-type>

    <class-type type-name='script_step_discussst' inherits-from='script_stepst'>
        <stl-string name='event'/>
    </class-type>

    <class-type type-name='script_step_topicdiscussionst' inherits-from='script_stepst'/>

    <class-type type-name='script_step_constructtopiclistst' inherits-from='script_stepst'/>

    <class-type type-name='script_step_dipeventst' inherits-from='script_step_eventst'>
        <stl-string name='parm1'/>
        <stl-string name='parm2'/>
        <stl-string name='parm3'/>
        <stl-string name='parm4'/>
        <stl-string name='parm5'/>
    </class-type>

    <class-type type-name='script_step_invasionst' inherits-from='script_step_eventst'>
        <stl-string name='parm'/>
    </class-type>

    <class-type type-name='script_step_eventst' inherits-from='script_stepst'/>


    <class-type type-name='script_varst'>
        <stl-string name='name'/>
        <virtual-methods>
            <vmethod name='instantiate'>
                <ret-type><pointer type-name='active_script_varst'/></ret-type>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='script_var_unitst' inherits-from='script_varst'/>
    <class-type type-name='script_var_longst' inherits-from='script_varst'/>

    <class-type type-name='active_script_varst'>
        <stl-string name='name'/>
        <virtual-methods>
            <vmethod name='setColor'/>
            <vmethod name='formatString'>
                <pointer type-name='static-string' name='output'/>
                <pointer type-name='stl-string' name='format'/>
            </vmethod>
            <vmethod name='getValue'>
                <pointer name='int_value' type-name='int32_t'/>
                <pointer name='ref_value' type-name='specific_ref'/>
            </vmethod>
            <vmethod name='setValue'>
                <pointer name='var' type-name='meeting_variable'/>
            </vmethod>
            <vmethod name='removeUnit'>
                <pointer name='ref_value' type-name='specific_ref'/>
            </vmethod>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='active_script_var_unitst' inherits-from='active_script_varst'>
        <pointer name='unit' type-name='unit'/>
    </class-type>

    <class-type type-name='active_script_var_longst' inherits-from='active_script_varst'>
        <int32_t name='value'/>
    </class-type>

    <struct-type type-name='meeting_variable' original-name='valvarrefst'>
        <int32_t name='value'/>
        <compound name='ref' type-name='specific_ref'/>
        <pointer name='active_var' type-name='active_script_varst'/>
    </struct-type>

    <enum-type type-name='conversation_trouble_type' base-type='int32_t'> bay12: ConversationTroubleType
        <enum-item name='None' value='-1'/>
        <enum-item name='Death'/>
        <enum-item name='Crime'/>
        <enum-item name='Conflict'/>
        <enum-item name='ArmyMarching'/>
        <enum-item name='Abduction'/>
        <enum-item name='Occupation'/>
        <enum-item name='BeastPresent'/>
        <enum-item name='Criminals'/>
        <enum-item name='Bandits'/>
        <enum-item name='Skulking'/>
        <enum-item name='EvilSite'/>
        <enum-item name='ArmyHarassing'/>
        <enum-item name='War'/>
        <enum-item name='BrewingTroubleWithNeighbors'/>
        <enum-item name='MissingArtifact'/>
    </enum-type>

    <enum-type type-name='conversation_tact_type' base-type='int32_t'> bay12: ConversationTactType
        <enum-item name='None' value='-1'/>
        <enum-item name='Persuade'/>
        <enum-item name='Intimidate'/>
    </enum-type>

    <struct-type type-name='service_order_templatest'>
        <enum name='type' type-name='service_order_type'/>
        <enum name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype'/>
        <int16_t name='mat_type'/>
        <int32_t name='mat_index'/>
        <int32_t name='cost'/>
        <int32_t name='full_cost'/>
        <int32_t name='room_ab_local_id' comment='not zone or abstract building id'/>
    </struct-type>

    <struct-type type-name='schedule_info' original-name='schedulest' key-field='id' instance-vector='$global.world.schedules.all'>
        <int32_t name='id'/>
        <int16_t name='ax'/>
        <stl-vector name='slots' pointer-type='schedule_slot'/>
    </struct-type>

    <struct-type type-name='schedule_slot' original-name='schedule_elementst'>
        <enum name='type' type-name='schedule_type' base-type='int16_t'/>
        <int16_t name='start_time'/>
        <int16_t name='end_time'/>
        <int16_t name='priority'/>
        <int8_t name='processed'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
