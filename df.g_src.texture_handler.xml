<data-definition>
    <struct-type type-name='palette_rowst'>
        <pointer type-name='uint8_t' name='row' is-array='true'/>
    </struct-type>

    <struct-type type-name='palette_pagest' key-field='token'>
        <stl-string name='token'/>
        <stl-fs-path name='graphics_dir'/>
        <stl-fs-path name='filename'/>

        <int32_t name='default_row'/>
        <stl-vector name='color_token' pointer-type='stl-string'/>
        <stl-vector name='color_row' type-name='int32_t'/>
        <stl-vector pointer-type='palette_rowst' name='row'/>
        <int32_t name='row_width'/>
    </struct-type>

    <struct-type type-name='tile_pagest' key-field='token'>
        <stl-string name='token'/>
        <stl-fs-path name='graphics_dir'/>
        <stl-fs-path name='filename'/>

        <int16_t name='tile_dim_x'/>
        <int16_t name='tile_dim_y'/>
        <int16_t name='page_dim_x'/>
        <int16_t name='page_dim_y'/>

        <stl-vector name='texpos' type-name='long'/>
        <stl-vector name='datapos' type-name='long'/>
        <stl-vector name='texpos_gs' type-name='long'/>
        <stl-vector name='datapos_gs' type-name='long'/>

        <bool name='loaded'/>
    </struct-type>

    <struct-type type-name='texture_handlerst'>
        <stl-vector name='page' pointer-type='tile_pagest'/>
        <stl-vector name='palette' pointer-type='palette_pagest'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
