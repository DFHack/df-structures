{"version":1,"ops":[{"type":3,"author":{"id":"7c3935464acdaaae9d6fcb27abcbbe21ec75027f"},"timestamp":1541084540,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQzNTA2ODg5MQ==","github-url":"https://github.com/DFHack/df-structures/issues/303#issuecomment-435068891"},"message":"If it didn't have food in it, my guess would be some missing vectors, like #235. However, that usually breaks other tools that deal with items in various ways, and we haven't had issues with that in 0.44.12-r1 that I know of. However, just to be sure, do any of the nearby vectors in world.items.other have an appropriate name for this group of items?","files":null},{"type":3,"author":{"id":"dc07f1dff8eee6d97a060efd0e58b122b9009d24"},"timestamp":1541094139,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQzNTA4MzU0MQ==","github-url":"https://github.com/DFHack/df-structures/issues/303#issuecomment-435083541"},"message":"No, the vector has food in it, but it also has non food in it. Most of the non food item types are containers, but \"books\" obviously aren't. The nearby vectors seem to contain what they're supposed to, given their names, while none of the generic ones seem to contain cookable items exclusively. ANY_GENERIC84 (the next one) seems to contain boxes only (I haven't checked everything), and so can't contain all cookable items, even if the boxes contain things following a common theme [which I haven't checked if they do]).\n\nThus, it seems the vector is misidentified, and is intended for some other purpose.","files":null},{"type":6,"author":{"id":"dc07f1dff8eee6d97a060efd0e58b122b9009d24"},"timestamp":1541094139,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzEzMzU4OQ=="},"target":"ecc47424a6a240afccb7d56261cc405957e78657da154561e6cbcf3815441574","message":"No, the vector has food in it, but it also has non food in it. Most of the non food item types are containers, but \"books\" obviously aren't. The nearby vectors seem to contain what they're supposed to, given their names, while none of the generic ones seem to contain cookable items exclusively. ANY_GENERIC84 (the next one) seems to contain boxes only (I haven't checked everything), and so can't contain all cookable items, even if the boxes contain things following a common theme [which I haven't checked if they do]).\n\nThus, it seems the vector is misidentified, and is intended for some other purpose.\n\nEdit: It seems ANY_COOKABLE is referenced by kitchen recipes, so it might not be totally wrong. A speculation is that it might be used for multiple purposes, which might include looking for \"books\" to store into bookcases or library coffers (speculation about why \"books\" are in there at all. At least one was a blank quire). Boxes might be targets for storing actions?","files":null},{"type":6,"author":{"id":"dc07f1dff8eee6d97a060efd0e58b122b9009d24"},"timestamp":1543571474,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1NzExNzU3Mg=="},"target":"ecc47424a6a240afccb7d56261cc405957e78657da154561e6cbcf3815441574","message":"No, the vector has food in it, but it also has non food in it. Most of the non food item types are containers, but \"books\" obviously aren't. The nearby vectors seem to contain what they're supposed to, given their names, while none of the generic ones seem to contain cookable items exclusively. ANY_GENERIC84 (the next one) seems to contain boxes only (I haven't checked everything), and so can't contain all cookable items, even if the boxes contain things following a common theme [which I haven't checked if they do]).\n\nThus, it seems the vector is misidentified, and is intended for some other purpose.\n\nEdit: It seems ANY_COOKABLE is referenced by kitchen recipes, so it might not be totally wrong. A speculation is that it might be used for multiple purposes, which might include looking for \"books\" to store into bookcases or library coffers (speculation about why \"books\" are in there at all. At least one was a blank quire). Boxes might be targets for storing actions?\n\nEdit 2: While not exactly the same issue, the \"generic_item\" references in df.item_vectors.xml entries seem to be incomplete. I ran a comparison script on my fortress and found EDIBLE_VERMIN_BOX to contain edible stuff; seedst, corpsest, corpsepiecest, eggst, plant_growthst, plantst, foodst, remainsst, powder_miscst. ANY_CAN_ROT contained globst, and ANY_GENERIC36 contained sheetst.\n\nThe script in question:\n```\nfunction x ()\n  for i, vector in pairs (df.global.world.items.other) do    \n    if df.items_other_id.attrs [i].generic_item and\n       #df.items_other_id.attrs [i].generic_item \u003e 0 then\n      local reported = {}\n      \n      for k, item in ipairs (vector) do\n        local found = false\n      \n        for l, generic_item in pairs (df.items_other_id.attrs [i].generic_item) do\n          if item.getType (item) == generic_item then\n            found = true\n            break\n          end\n        end\n      \n        if not found then\n          for l, report in ipairs (reported) do\n            if report == item.getType (item) then\n              found = true\n              break\n            end\n          end\n          \n          if not found then\n            dfhack.println (\"Vector \" .. i .. \" contains unexpected item type \" .. tostring (item._type))\n            table.insert (reported, item.getType (item))\n          end\n        end\n      end\n    end\n  end\nend\n\nx ()\n```","files":null}]}