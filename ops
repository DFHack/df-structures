{"version":1,"ops":[{"type":6,"author":{"id":"fe9bfa5b3d8f2049fc74c3f55489f1a62726e2cd"},"timestamp":1582223983,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDozNTI5MTYyNjg="},"target":"a190984d5d0f1251351e0bef7d278c7a97e5c06f19adde09c7885ad003f9280f","message":"The following observation was made using gui/gm-editor in 0.47.03 with DFHack build 200219000 Win64. When a unit transforms into a different creature as a result of a syndrome effect, a unit_wound is created to store the effect in wound_curse_info. Within this, `were_race` and `were_curse` should of course respectively contain the race and caste IDs pertaining to the transformation. However, I have observed that the race ID is being displayed in `were_caste` instead, with the real caste ID seemingly missing.","files":null},{"type":6,"author":{"id":"fe9bfa5b3d8f2049fc74c3f55489f1a62726e2cd"},"timestamp":1582224226,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDozNTI5MTc2Njg="},"target":"a190984d5d0f1251351e0bef7d278c7a97e5c06f19adde09c7885ad003f9280f","message":"The following observation was made using gui/gm-editor in 0.47.03 with DFHack build 200219000 Win64. When a unit transforms into a different creature as a result of a syndrome effect, a unit_wound is created to store the effect details in wound_curse_info. Within this, `were_race` and `were_curse` should of course respectively contain the race and caste IDs pertaining to the transformation. However, I have observed that the race ID is being displayed in `were_caste` instead, with the real caste ID seemingly missing.","files":null},{"type":6,"author":{"id":"fe9bfa5b3d8f2049fc74c3f55489f1a62726e2cd"},"timestamp":1582233706,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDozNTI5NjU3NTQ="},"target":"a190984d5d0f1251351e0bef7d278c7a97e5c06f19adde09c7885ad003f9280f","message":"The following observation was made using gui/gm-editor in 0.47.03 with DFHack build 200219000 Win64. When a unit transforms into a different creature as a result of a syndrome effect, a unit_wound is created to store the effect details in wound_curse_info. Within this, `were_race` and `were_caste` should of course respectively contain the race and caste IDs pertaining to the transformation. However, I have observed that the race ID is being displayed in `were_caste` instead, with the real caste ID seemingly missing.","files":null},{"type":5,"author":{"id":"7c3935464acdaaae9d6fcb27abcbbe21ec75027f"},"timestamp":1582227134,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMwNTc4NzE1MzM="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"7c3935464acdaaae9d6fcb27abcbbe21ec75027f"},"timestamp":1582227134,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMwNTc4NzE1MzY="},"added":["layout"],"removed":[]},{"type":3,"author":{"id":"dc07f1dff8eee6d97a060efd0e58b122b9009d24"},"timestamp":1582284109,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4OTYxMzAwNA==","github-url":"https://github.com/DFHack/df-structures/issues/364#issuecomment-589613004"},"message":"I was fortunate enough to have a 0.44.12 save with a caged were, so I could compare this save in both 0.44.12 and 0.47.03, and the unit_wound and wound_curse_info looks identical (apart from timer values, as I had to manually advance time for the were to turn, done separately in the two copies). Thus, the layout changed before 0.44.12 (or was mis-mapped originally).\nOriginally the were was a male elf, but when converted it's converted into an asexual creature (with a gender of -1). The weresquirrel (in this case) is asexual and has a single caste, according to its raws.\nThus, I'd suggest the were_race and were_caste fields are swapped.","files":null},{"type":3,"author":{"id":"fe9bfa5b3d8f2049fc74c3f55489f1a62726e2cd"},"timestamp":1582302460,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4OTcyNzk3Mw==","github-url":"https://github.com/DFHack/df-structures/issues/364#issuecomment-589727973"},"message":"I did consider the possibility of the two fields being swapped, but ruled it out before opening the issue. I have observed `were_race` set to 0 or values which definitely don't correspond to the appropriate caste ID, and such values sometimes differ between units transformed into the the exact same creature. I suggest you see this for yourself using simple modded interactions such as the following, which will allow you to directly apply transformation syndromes to units created in arena mode:\n\n\u003e [INTERACTION:TRANSFORM_INTO_DOG_MALE]\n\u003e \t[I_SOURCE:CREATURE_ACTION]\n\u003e \t[I_TARGET:A:CREATURE]\n\u003e \t\t[IT_LOCATION:CONTEXT_CREATURE]\n\u003e \t[I_EFFECT:ADD_SYNDROME]\n\u003e \t\t[IE_TARGET:A]\n\u003e \t\t[IE_IMMEDIATE]\n\u003e \t\t[IE_ARENA_NAME:Transform into male dog]\n\u003e \t\t[SYNDROME]\n\u003e \t\t\t[CE_BODY_TRANSFORMATION:START:0]\n\u003e \t\t\t[CE:CREATURE:DOG:MALE]\n\n\u003e [INTERACTION:TRANSFORM_INTO_DOG_FEMALE]\n\u003e \t[I_SOURCE:CREATURE_ACTION]\n\u003e \t[I_TARGET:A:CREATURE]\n\u003e \t\t[IT_LOCATION:CONTEXT_CREATURE]\n\u003e \t[I_EFFECT:ADD_SYNDROME]\n\u003e \t\t[IE_TARGET:A]\n\u003e \t\t[IE_IMMEDIATE]\n\u003e \t\t[IE_ARENA_NAME:Transform into female dog]\n\u003e \t\t[SYNDROME]\n\u003e \t\t\t[CE_BODY_TRANSFORMATION:START:0]\n\u003e \t\t\t[CE:CREATURE:DOG:FEMALE]","files":null},{"type":3,"author":{"id":"dc07f1dff8eee6d97a060efd0e58b122b9009d24"},"timestamp":1582495685,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4OTc0OTkxMg==","github-url":"https://github.com/DFHack/df-structures/issues/364#issuecomment-589749912"},"message":"I'll have to leave that to someone who's familiar with the arena.","files":null},{"type":6,"author":{"id":"dc07f1dff8eee6d97a060efd0e58b122b9009d24"},"timestamp":1582495685,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDM1MzU1MjM0NQ=="},"target":"47a0c4e3cdc467ce9a4842352c53a369c0c5b74595f41708685b233a8095362b","message":"I'll have to leave that to someone who's familiar with the arena.\n\nEdit:\nI've managed to find where the numeric race and caste values were hidden in the syndrome, and hacking a were worked to change both race and caste, but the caste info was not reflected in the wound info (but was in the unit's caste and sex fields). Thus, the race field has been moved and the caste one removed.","files":null},{"type":3,"author":{"id":"7c3935464acdaaae9d6fcb27abcbbe21ec75027f"},"timestamp":1587764644,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYxOTI1MDk2Mw==","github-url":"https://github.com/DFHack/df-structures/issues/364#issuecomment-619250963"},"message":"Actually, the `unk_1` field you added in 8e9dc3e4 is padding. I took your save from https://github.com/DFHack/df-structures/issues/370#issuecomment-617793752 and loaded it on linux64 and linux32. `devel/visualize-structure world.units.all.1865.body.wounds.0.curse` gives this on linux64 (starting at time_counter):\n```\nint32_t time_counter\n32360000 \n\nint32_t unk_1\nd2d2d2d2  \n\nint32_t were_race\nffffffff \n\n(padding)\nffffffff  \n\nvector\u003cint32_t\u003e body_appearance\n00000000 00000000  00000000 00000000  00000000 00000000  \nlength: 0\n\nvector\u003cint32_t\u003e bp_appearance\n00000000 00000000  00000000 00000000  00000000 00000000  \nlength: 0\n```\nand this on linux32:\n```","files":null},{"type":6,"author":{"id":"7c3935464acdaaae9d6fcb27abcbbe21ec75027f"},"timestamp":1587764644,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY3Njg3MDc0"},"target":"487625a096b3553cf4d576319c842183eff40cc84b149f5213f980fdbe96b4b4","message":"Actually, the `unk_1` field you added in 8e9dc3e4 is padding. I took your save from https://github.com/DFHack/df-structures/issues/370#issuecomment-617793752 and loaded it on linux64 and linux32. `devel/visualize-structure world.units.all.1865.body.wounds.0.curse` gives this on linux64 (starting at time_counter):\n```\nint32_t time_counter\n32360000 \n\nint32_t unk_1\nd2d2d2d2  (lethosor: this is what I've set malloc to fill uninitialized memory with)\n\nint32_t were_race\nffffffff \n\n(padding)\nffffffff  (lethosor: in red because it doesn't match what uninitialized memory should be)\n\nvector\u003cint32_t\u003e body_appearance\n00000000 00000000  00000000 00000000  00000000 00000000  \nlength: 0\n\nvector\u003cint32_t\u003e bp_appearance\n00000000 00000000  00000000 00000000  00000000 00000000  \nlength: 0\n```\nand this on linux32:\n```\nint32_t time_counter\n32360000  \n\nint32_t unk_1\nffffffff \n\nint32_t were_race\nffffffff  \n\nvector\u003cint32_t\u003e body_appearance\n00000000 00000000  00000000 \nlength: 0\n\nvector\u003cint32_t\u003e bp_appearance\n00000000  00000000 00000000  \nlength: 0\n```\n\nwere_race and were_caste are still there - the issue is that due to how sub-structures are laid out, the padding that should go before were_race on x64 is actually going after were_caste, effectively making were_caste on x64 invisible from Lua.","files":null},{"type":6,"author":{"id":"7c3935464acdaaae9d6fcb27abcbbe21ec75027f"},"timestamp":1587765329,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY3Njg5MDMy"},"target":"487625a096b3553cf4d576319c842183eff40cc84b149f5213f980fdbe96b4b4","message":"Actually, the `unk_1` field you added in 8e9dc3e4 is padding. I took your save from https://github.com/DFHack/df-structures/issues/370#issuecomment-617793752 and loaded it on linux64 and linux32. `devel/visualize-structure world.units.all.1865.body.wounds.0.curse` gives this on linux64 (starting at time_counter, since everything matches up before there):\n```\nint32_t time_counter\n32360000 \n\nint32_t unk_1\nd2d2d2d2  (lethosor: this is what I've set malloc to fill uninitialized memory with)\n\nint32_t were_race\nffffffff \n\n(padding)\nffffffff  (lethosor: in red because it doesn't match what uninitialized memory should be)\n\nvector\u003cint32_t\u003e body_appearance\n00000000 00000000  00000000 00000000  00000000 00000000  \nlength: 0\n\nvector\u003cint32_t\u003e bp_appearance\n00000000 00000000  00000000 00000000  00000000 00000000  \nlength: 0\n```\nand this on linux32:\n```\nint32_t time_counter\n32360000  \n\nint32_t unk_1\nffffffff \n\nint32_t were_race\nffffffff  \n\nvector\u003cint32_t\u003e body_appearance\n00000000 00000000  00000000 \nlength: 0\n\nvector\u003cint32_t\u003e bp_appearance\n00000000  00000000 00000000  \nlength: 0\n```\n\nwere_race and were_caste are still there - the issue is that due to how sub-structures are laid out, the padding that should go before were_race on x64 is actually going after were_caste, effectively making were_caste on x64 invisible from Lua.","files":null},{"type":4,"author":{"id":"7c3935464acdaaae9d6fcb27abcbbe21ec75027f"},"timestamp":1587764929,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzI3MTE0MTE4OQ=="},"status":2}]}