{"version":1,"ops":[{"type":1,"author":{"id":"dc07f1dff8eee6d97a060efd0e58b122b9009d24"},"timestamp":1498142322,"metadata":{"github-id":"MDU6SXNzdWUyMzc4NjgxNzI=","github-url":"https://github.com/DFHack/df-structures/issues/201","origin":"github"},"title":"df.world-data.xml:world_river elements unk_8c and unk_9c are probably flow and exit tile","message":"As far as I could see an unk_8c value of 0 corresponds to the pre embark region to calling the river a 'brook', while it changes to 'stream' for larger values. It also seems the values are increasing the further down the course you get. As a speculation, that value ought to correspond to the width, but I haven't investigated that. Edit: Hacking the values and then moving to the region to embark did NOT change the 'brook' designation, nor did an embark show any changed brook width.\n\nunk_9c seems to match the region exit tile of the river. The edge on which tile this exit occurs is given by the side on which the world coordinates for the next segment is located. Edit: Hacking those values did change where exits appeared as expected.\n\nEdit 2: A new attempt with unk_8c showed it is related to width, but I had used to small values previously. Width (2 m tiles); \"flow\"\n 4:  \u003c= 3478\n 5:   3579\n 6:   4348\n 7:   5218\n 8:   6087\n 9:   6957\n10:  7827\n11:  8696\n12:  9566\n13: 10435\n14: 11305\n15: 12174\n16: 13044\n17: 13914\n18: 14783\n19: 15653\n20: 16522\n21: 17392\n22: 18261\n23: 19131\n24: 20000\n25: 20870\n26: 21740\n27: 22609\n28: 23479\n29: 24348\n30: 25218\n31: 26087\n32: 26957\n33: 27827\n34: 28696\n35: 29566\n36: 30435\n37: 31305\n38: 32174\n39: 33044\n40: 33914\n41: 34783\n42: 35653\n43: 36522\n44: 37392\n45: 38261\n46: 39131\n47: 40000\n\nThe formula seems to be: width = (flow / 40000 * 46) + 1, with a minimum width of 4.\n\nIn addition to the above, I've found the following relations (I haven't tested with a brook):\n\u003c 5000 =\u003e Stream\n5000 - 9999 =\u003e Minor River\n10000 - 19999 =\u003e River\n20000 -\u003e =\u003e Major River. It seems the maximum river width is 47, although the flow can be higher than 40000.\n\nEdit3:\nRather than tedious manual river width determination, I've made a script to measure it and edited edit2 above with the results:\n\n``--  Purpose: Determine the flow values at which the width of a river increases.\n--  Usage: Locate a water course that flows through 3 world tiles horizontally\n--  on the embark screen. The middle tile mustn't have any other river joining.\n--  Then place the DF focus (i.e. the embark rectangle) in the middle tile and\n--  invoke the script.\n--\nfunction rivermeasurer()\n  local x = df.global.gview.view.child.location.region_pos.x\n  local y = df.global.gview.view.child.location.region_pos.y\n  local river\n  local center\n  local found = false\n  local widhth\n  local previous_width = 0\n  local previous_index = 0\n  local tile_x = 8\n  local tile_y\n\n  for i, riv in ipairs (df.global.world.world_data.rivers) do\n    for k, pos_x in ipairs (riv.path.x) do\n      if x == pos_x and y == riv.path.y[k] then\n\t    river = i\n\t\tcenter = k\n\t\tfound = true\n\t\tbreak\n\t  end\n\t  \n\t  if found then\n\t    break\n\t  end\n    end\n  end\n  \n  dfhack.println (\"River: \" .. tostring (river) .. \" center world tile \" .. tostring (center))\n\n  for i = 0, 15 do\n    if df.global.world.world_data.region_details[0].rivers_horizontal.active [tile_x] [i] ~= 0 then\n\t  tile_y = i\n\t  break\n\tend\n  end\n  \n  for i = 0, 100000 do\n    df.global.world.world_data.rivers[river].unk_8c [center - 1] = i\n    df.global.world.world_data.rivers[river].unk_8c [center] = i\n    df.global.world.world_data.rivers[river].unk_8c [center + 1] = i\n\t\n\tdf.global.gview.view.child:feed_key (df.interface_key.CURSOR_UP)\t  \n    df.global.gview.view.child:feed_key (df.interface_key.CURSOR_DOWN)\t  \n\t\n\twidth = df.global.world.world_data.region_details[0].rivers_horizontal.y_max [tile_x] [tile_y] -\n\t        df.global.world.world_data.region_details[0].rivers_horizontal.y_min [tile_x] [tile_y] + 1\n\t\t\t\n\tif width \u003e previous_width then\n\t  dfhack.println (\"Width \" .. tostring(width) ..  \" at river flow \" ..  tostring (i) .. \" diff \" .. tostring (i - previous_index))\n\t  previous_width = width\n\t  previous_index = i\n\t  if width == 47 then\n\t    break\n\t  end\n\tend\n   end\nend\n\nrivermeasurer()``","files":null}]}