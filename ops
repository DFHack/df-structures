{"version":1,"ops":[{"type":1,"author":{"id":"dc07f1dff8eee6d97a060efd0e58b122b9009d24"},"timestamp":1526578029,"metadata":{"github-id":"MDU6SXNzdWUzMjQxMTU5NjU=","github-url":"https://github.com/DFHack/df-structures/issues/260","origin":"github"},"title":"df.world.xml:incident_sub6 field determination investigation","message":"I've tried to determine some of the parameters of the _sub6 struct and believe I've had some success.\nThis is what I've concluded:\n```xml\n    \u003cstruct-type type-name='incident_sub6' comment='Performance incident parameters'\u003e\n        \u003cint32_t name='performance_event' type-name='performance_event_type'/\u003e\n        \u003cstl-vector name='participants'\u003e\n            \u003cpointer\u003e\n                \u003cint32_t/\u003e\n                \u003cint32_t/\u003e\n                \u003ccompound type-name='incident_hfid'/\u003e\n                \u003cint32_t/\u003e\n            \u003c/pointer\u003e\n        \u003c/stl-vector\u003e\n        \u003cint32_t name='reference_id' comment='history_event id/poetic_form id/musical_form id/dance_form_id or -1'/\u003e\n        \u003cint32_t name='written_content id or -1'/\u003e\n        \u003cint32_t/\u003e\n        \u003cint32_t/\u003e\n        \u003cint32_t/\u003e\n        \u003cint32_t/\u003e\n    \u003c/struct-type\u003e\n    --  There ought to be either a type specific reference or a written content one. Not both.\n    --  Story has only been seen with a history event id, not a written content one, but the sample was small.\n    --  Poem has been seen with either a poetic form or a written content reference.\n    --  Music has been seen only with a music form reference, but the sample was small.\n    --    Music has been seen to be \"sang\" and \"spoke\" in DF displayed thoughts, but no instrument playing\n    --    or simulation. It's still unknown how to determine what action participants took.\n    --  Dance has been seen only with a dance form reference, but the sample was small.\n```\n\nI've used the following script to extract data from a small number of saves:\n```lua\nfunction x ()\n  local civ_id = df.global.world.world_data.active_site [0].entity_links [0].entity_id\n  \n  local count = 0\n  \n  for i, incident in ipairs (df.global.world.incidents.all) do\n    if incident.subtype == 6 then\n      local active = false\n      \n      for k, participant in ipairs (incident.unk_v42_1.t6.anon_2) do\n        local hf = df.historical_figure.find (participant.anon_3.hfid)\n        \n        if hf and hf.civ_id == civ_id then\n          local unit = df.unit.find (hf.unit_id)\n          \n          if unit then\n            for l, emotion in ipairs (unit.status.current_soul.personality.emotions) do\n              if emotion.thought == df.unit_thought_type.Perform and\n                 emotion.subthought == incident.id then\n                if not active then\n                  count = count + 1\n                end\n\n                dfhack.print (\"Incident \" .. tostring (incident.id))\n                dfhack.print (\", \" .. dfhack.TranslateName (unit.name, false))\n                dfhack.print (\", Emotion \" .. tostring (l) .. \", anon_1: \" .. tostring (incident.unk_v42_1.t6.anon_1))\n                dfhack.print (\", anon_1: \" .. tostring (participant.anon_1) .. \", anon_4: \" .. tostring (participant.anon_4))\n                -- incident.unk_v42_1.t6.anon_1 = df.performance_event_type\n                if incident.unk_v42_1.t6.anon_1 == 0 then  --  History event story. anon_3 = event id, anon_4 = written contents id?\n                  dfhack.println (\", Tell History Event Story. anon_3: \" .. tostring (incident.unk_v42_1.t6.anon_3))\n                  \n                elseif incident.unk_v42_1.t6.anon_1 == 1 then  --  Recite poem. anon_3 = poetry form, anon_4 = written contents id\n                  if incident.unk_v42_1.t6.anon_3 == -1 then\n                    dfhack.println (\", Recite: Type: \" .. tostring (df.written_content_type [df.written_content.find (incident.unk_v42_1.t6.anon_4).type]))\n                    \n                  else\n                    dfhack.println (\", Recite Poetic Form: \" .. dfhack.TranslateName (df.poetic_form.find (incident.unk_v42_1.t6.anon_3).name, true))\n                  end\n                  \n                elseif incident.unk_v42_1.t6.anon_1 == 2 then  --  Musical composition. anon_3 = music form?, anon_4 = written contents id\n                  if incident.unk_v42_1.t6.anon_3 == -1 then\n                    dfhack.println (\", Speak/Sing: Type: \" .. tostring (df.written_content_type [df.written_content.find (incident.unk_v42_1.t6.anon_4).type]))\n                    -- Sang: anon_5: 0, anon_6: -1, anon_7: 137, anon_8: -1\n                    --       anon_1: 2, anon_2: 0, anon_4: 14\n                    -- Spoke:anon_5: -1, anon_6: -1, anon_7: 0, anon_8: -1 \n                    --       anon_1: 2, anon_2: 0, anon_4: 0\n                    -- Spoke:anon_5: -1, anon_6: -1, anon_7: 17, anon_8: -1\n                    --       anon_1: 2, anon_2: 0, anon_4: 0\n                    --### anon_5: -1 = Speak, , 0 = Sing, 1+ = instrument? Should be per participant, not individual?\n                  else\n                    dfhack.println (\", Music: \" .. dfhack.TranslateName (df.musical_form.find (incident.unk_v42_1.t6.anon_3).name, true))\n                  end\n                  \n                elseif incident.unk_v42_1.t6.anon_1 == 3 then  --  Dance. anon_3 = dance form id, anon_4 = written contents id?\n                  dfhack.println (\", anon_3: \" .. tostring (incident.unk_v42_1.t6.anon_3))\n                  \n                else\n                  dfhack.println (\", Unmapped type: \" .. tostring (incident.unk_v42_1.t6.anon_1))                \n                end\n                active = true\n              end\n            end\n          end\n        end\n      end\n    end\n  end\n  \n  dfhack.println (\"Active performance incidents: \" .. tostring (count))\nend\n\nx ()\n```\nThe script used the \"official\" layout, not the one above (which hasn't yet been processed, so it may contain syntactic errors).\nThe output of the script has been processed by looking up the listed citizens and DFHack the specified \"emotion\" entry to have the \"unk2\" and \"strength\" fields both set to 100 (and the flags [5] flag reset, if set; that's the \"remembered\" field). When that is done that emotion gets promoted to the one shown with extra details at the top on the unit's \"Thoughts and Preferences\" screen (which has to be refreshed for the changes to take effect). Obviously another 100/100 pair can trump the one you want, although I've seen that only with my own manipulations not being withdrawn.\nThe thought has then been compared to what the parameters would produce, eventually leading to the conclusions above. I haven't gone through every poetry case (there were a lot of those), but each of the others (of which there were fewer than I'd like).\n\ndf.meetings.xml:activity_event_performancest seems to indicate that only poetry can reference written contents, not any of the other performance forms. I've seen nothing to contradict that conclusion, but there are written contents with types that might work as targets for stories, music, and dances, so the scripts tries to cater for such cases.","files":null}]}