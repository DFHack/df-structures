<data-definition>
    <enum-type type-name='mental_picture_element_type' base-type='int32_t'> bay12: MentalPictureElementType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='HF'/>
        <enum-item name='SITE'/>
        <enum-item name='REGION' comment='assuming this is actually a subregion, because REGION would refer to the entire world'/>
    </enum-type>

    <class-type type-name='mental_picture_elementst'>
        <int32_t name='id'/>
        <virtual-methods>
            <vmethod ret-type='mental_picture_element_type' name='getType'/>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='mental_picture_element_hfst' inherits-from='mental_picture_elementst'>
        <int32_t name='hf' ref-target='historical_figure'/>
    </class-type>

    <class-type type-name='mental_picture_element_sitest' inherits-from='mental_picture_elementst'>
        <int32_t name='site' ref-target='world_site'/>
    </class-type>

    <class-type type-name='mental_picture_element_regionst' inherits-from='mental_picture_elementst'>
        <int32_t name='region' ref-target='world_region' comment='assuming actually subregion, not the entire world (which would not have an ID)'/>
    </class-type>

    <enum-type type-name='mental_picture_property_type' base-type='int32_t'> bay12: MentalPicturePropertyType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='DATE'/>
        <enum-item name='ACTION'/>
        <enum-item name='TOOL'/>
        <enum-item name='EMOTION'/>
        <enum-item name='COLOR_PATTERN'/>
        <enum-item name='SHAPE'/>
        <enum-item name='ADJECTIVE'/>
        <enum-item name='POSITION'/>
        <enum-item name='TIME'/>
    </enum-type>

    <class-type type-name='mental_picture_propertyst'>
        <int32_t name='id'/>
        <virtual-methods>
            <vmethod ret-type='mental_picture_property_type' name='getType'/>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='mental_picture_property_datest' inherits-from='mental_picture_propertyst'>
        <int32_t name='year'/>
        <int32_t name='season_count'/>
    </class-type>

    <enum-type type-name='mental_picture_action_type' base-type='int32_t'> bay12: MentalPictureActionType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='APPEAR'/>
        <enum-item name='DESTROY'/>
        <enum-item name='SPOKE'/>
        <enum-item name='BURN'/>
        <enum-item name='FLOOD'/>
        <enum-item name='REWARD'/>
    </enum-type>

    <bitfield-type type-name='mental_picture_property_action_flag' base-type='uint32_t'> bay12: MENTAL_PICTURE_PROPERTY_ACTION_FLAG_*
        <flag-bit name='continuous'/>
    </bitfield-type>

    <class-type type-name='mental_picture_property_actionst' inherits-from='mental_picture_propertyst'>
        <enum name='action' type-name='mental_picture_action_type'/>
        <int32_t name='actor_element'/>
        <int32_t name='target_element'/>
        <bitfield name='spec_flag' base-type='uint32_t' type-name='mental_picture_property_action_flag'/>
    </class-type>

    <class-type type-name='mental_picture_property_toolst' inherits-from='mental_picture_propertyst'>
        <int32_t name='user_element'/>
        <int32_t name='tool_element'/>
        <int32_t name='property'/>
    </class-type>

    <class-type type-name='mental_picture_property_emotionst' inherits-from='mental_picture_propertyst'>
        <int32_t name='element'/>
        <enum name='emotion' type-name='emotion_type'/>
    </class-type>

    <class-type type-name='mental_picture_property_color_patternst' inherits-from='mental_picture_propertyst'>
        <int32_t name='element'/>
        <int32_t name='color_pattern' ref-target='descriptor_pattern'/>
    </class-type>

    <class-type type-name='mental_picture_property_shapest' inherits-from='mental_picture_propertyst'>
        <int32_t name='element'/>
        <int32_t name='shape' ref-target='descriptor_shape'/>
    </class-type>

    <enum-type type-name='mental_picture_adjective_type' base-type='int32_t'> bay12: MentalPictureAdjectiveType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='UNNAMED'/>
    </enum-type>

    <class-type type-name='mental_picture_property_adjectivest' inherits-from='mental_picture_propertyst'>
        <int32_t name='element'/>
        <enum name='adjective' type-name='mental_picture_adjective_type'/>
    </class-type>

    <enum-type type-name='mental_picture_position_type' base-type='int32_t'> bay12: MentalPicturePositionType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='UNNAMED'/>
    </enum-type>

    <class-type type-name='mental_picture_property_positionst' inherits-from='mental_picture_propertyst'>
        <int32_t name='element1'/>
        <int32_t name='element2'/>
        <enum name='position' type-name='mental_picture_position_type'/>
    </class-type>

    <bitfield-type type-name='mental_picture_property_time_flag' base-type='uint32_t'> bay12: MENTAL_PICTURE_PROPERTY_TIME_FLAG_*
        <flag-bit name='undetermined_past'/>
        <flag-bit name='undetermined_future'/>
    </bitfield-type>

    <class-type type-name='mental_picture_property_timest' inherits-from='mental_picture_propertyst'>
        <int32_t name='diff_year'/>
        <int32_t name='diff_season_count'/>
        <bitfield name='spec_flag' base-type='uint32_t' type-name='mental_picture_property_time_flag'/>
    </class-type>

    <struct-type type-name='mental_picturest'>
        <stl-vector name='elements' pointer-type='mental_picture_elementst'/>
        <int32_t name='next_element_id'/>
        <stl-vector name='properties' pointer-type='mental_picture_propertyst'/>
        <int32_t name='next_property_id'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
