<data-definition>
    <enum-type type-name='river_flag_type'> bay12: RiverFlagType
        <enum-item name='UNUSED_1'/>
    </enum-type>

    <struct-type type-name='world_river' original-name='riverst'>
        <compound name='name' type-name='language_name'/>
        <code-helper name='describe'>(describe-obj $.name)</code-helper>

        <compound name='path' type-name='coord2d_path'/>
        <stl-vector name="flow" type-name='int32_t'/>
        <stl-vector name="exit_tile" type-name='int16_t'/>  --  0 - 15
        <stl-vector name="elevation" type-name='int16_t'/>

        <compound name='end_pos' type-name='coord2d'/>
        <df-flagarray name='flags' index-enum='river_flag_type'/>
        <comment>
            Additional river information:
            The flow element affects the width of the river and seems to follow the
            formula width = (flow / 40000 * 46) + 1, with a minimum width of 4 and
            a maximum width of 47. DF uses specific names for rivers with certain flows:
            - Stream:      less than 5000
            - Minor River  5000 - 9999
            - River        10000 - 19999
            - Major River: greather than 20000
            Brooks tend to have a flow of 0, but DF has divided the controlling information
            between this structure, the region map entry (below), and the feature map.
            Thus, the region map flag 'is_brook' controls whether a water course actually
            is a (potentially broad) brook or an open water course. Likewise, the 'has_river'
            flag is needed for DF to properly understand a water course should be present.
            The exit tile holds the information on which mid level tile the river should
            exit the region. Presumably the path controls which edge to apply this to.
            Note that the river up/down/left/right flags of the region map entry should
            align with the sides rivers enter/exit.
            The feature map has to have a river entry for the corresponding world tile
            for a river to be implemented properly. All this is done by DF, but needs
            to be known if hacking.
            The world region details (below) data on rivers are generated as the regions
            are generated.
            The elevation element affects the level of the river. If the river elevation
            is lower than the surrounding area DF tends to generate a valley around the
            river to allow it to reach the correct elevation.
        </comment>
    </struct-type>

    <enum-type type-name='feature_type' base-type='int16_t'> bay12: FeatureType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='outdoor_river'/>
        <enum-item name='cave'/>
        <enum-item name='pit'/>
        <enum-item name='magma_pool'/>
        <enum-item name='volcano'/>
        <enum-item name='deep_special_tube'/>
        <enum-item name='deep_surface_portal'/>
        <enum-item name='subterranean_from_layer'/>
        <enum-item name='magma_core_from_layer'/>
        <enum-item name='underworld_from_layer'/>
    </enum-type>

    <enum-type type-name='feature_alteration_type' base-type='int16_t'> bay12: FeatureAlterationType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='new_pop_max'/>
        <enum-item name='new_lava_fill_z'/>
    </enum-type>

    <class-type type-name='feature_alteration' original-name='feature_alterationst'>
        <virtual-methods>
            <vmethod ret-type='feature_alteration_type' name='getType'/>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='feature_alteration_new_pop_maxst' inherits-from='feature_alteration'>
        <int32_t name='index'/>
        <int32_t name='new_num'/>
    </class-type>

    <class-type type-name='feature_alteration_new_lava_fill_zst' inherits-from='feature_alteration'>
        <int32_t name='magma_fill_z'/>
    </class-type>

    <class-type type-name='feature' original-name='featurest'>
        <stl-vector name='population' pointer-type='world_population'/>

        <int32_t name='irritation_level' comment='divide by 10k for attack chance, max 100k'/>
        <int16_t name='irritation_attacks' comment='maxes at 10?'/>

        <compound name='embark_pos' type-name='coord2d_path'/>
        <stl-vector name='min_map_z' type-name='int16_t'/>
        <stl-vector name='max_map_z' type-name='int16_t'/>

        <virtual-methods>
            <vmethod ret-type='feature_type' name='getType'/>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod name='shiftCoords'><int16_t name='x'/><int16_t name='y'/><int16_t name='z'/></vmethod>
            <vmethod name='discovery_realize' comment='originally used in 40d to populate demon pits'/>

            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='feature_outdoor_riverst' inherits-from='feature'/>

    <class-type type-name='feature_cavest' inherits-from='feature'/>

    <class-type type-name='feature_pitst' inherits-from='feature'/>

    <class-type type-name='feature_magma_poolst' inherits-from='feature'>
        <int32_t name='magma_fill_z'/>
    </class-type>

    <class-type type-name='feature_volcanost' inherits-from='feature'>
        <int32_t name='magma_fill_z'/>
    </class-type>

    <class-type type-name='feature_deep_special_tubest' inherits-from='feature'/>

    <class-type type-name='feature_deep_surface_portalst' inherits-from='feature'/>

    <class-type type-name='feature_subterranean_from_layerst' inherits-from='feature'/>

    <class-type type-name='feature_magma_core_from_layerst' inherits-from='feature'/>

    <class-type type-name='feature_underworld_from_layerst' inherits-from='feature'/>

    <enum-type type-name='feature_init_flags'> bay12: FeatureInitFlagType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='AddSavage'/>
        <enum-item name='AddEvil'/>
        <enum-item name='AddGood'/>
        <enum-item name='Discovered'/>
        <enum-item name='Announced'/>
        <enum-item name='AnnouncedFully' comment='for tube inside vs. outside'/>
    </enum-type>

    <class-type type-name='feature_init' original-name='feature_initst'>
        <df-flagarray name='flags' index-enum='feature_init_flags'/>
        <stl-vector name='alterations' pointer-type='feature_alteration'/>
        <int16_t name='start_x'/>
        <int16_t name='start_y'/>
        <int16_t name='end_x'/>
        <int16_t name='end_y'/>
        <enum name='start_depth' type-name='layer_type' base-type='int16_t'/>
        <enum name='end_depth' type-name='layer_type' base-type='int16_t'/>

        <virtual-methods>
            <vmethod ret-type='feature_type' name='getType'/>
            <vmethod name='write_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <bool name='include_feature'/>
            </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
                <bool name='include_feature'/>
            </vmethod>
            <vmethod name='createFeature' comment='for load'>
                <ret-type><pointer type-name='feature'/></ret-type>
            </vmethod>
            <vmethod name='recreateFeature' comment='destroyFeature(), then createFeature()'>
                <ret-type><pointer type-name='feature'/></ret-type>
            </vmethod>

            <vmethod name='destroyFeature'/>
            <vmethod name='getFeature'>
                <ret-type><pointer type-name='feature'/></ret-type>
            </vmethod>
            <vmethod is-destructor='true'/>
            <vmethod name='getMaterial'>
                <pointer name='mat_type' type-name='int16_t'/>
                <pointer name='mat_index' type-name='int32_t'/>
            </vmethod>
            <vmethod ret-type='bool' name='generates_river_vermin'/>

            <vmethod ret-type='bool' name='outdoor_wildlife_feature'/>
            <vmethod ret-type='bool' name='indoor_wildlife_feature'/>
            <vmethod ret-type='bool' name='fishing_feature'/>
            <vmethod name='getColor'>
                <pointer name='foreground' type-name='int16_t'/>
                <pointer name='background' type-name='int16_t'/>
                <pointer name='bright' type-name='int8_t'/>
            </vmethod>
            <vmethod name='getName'>
                <pointer name='name' type-name='stl-string'/>
            </vmethod>

            <vmethod name='isWater' ret-type='bool'/>
            <vmethod name='isSubterranean' ret-type='bool'/>
            <vmethod name='isMagma' ret-type='bool'/>
            <vmethod name='isChasm' ret-type='bool'/>
            <vmethod name='isUnderworld' ret-type='bool'/>

            <vmethod ret-type='bool' name='isOutdoorRiver'/>
            <vmethod ret-type='int32_t' name='getLayer'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='feature_init_outdoor_riverst' inherits-from='feature_init'>
        <pointer name='feature' type-name='feature_outdoor_riverst'/>
    </class-type>

    <class-type type-name='feature_init_cavest' inherits-from='feature_init'>
        <pointer name='feature' type-name='feature_cavest'/>
    </class-type>

    <class-type type-name='feature_init_pitst' inherits-from='feature_init'>
        <pointer name='feature' type-name='feature_pitst'/>
    </class-type>

    <class-type type-name='feature_init_magma_poolst' inherits-from='feature_init'>
        <pointer name='feature' type-name='feature_magma_poolst'/>
    </class-type>

    <class-type type-name='feature_init_volcanost' inherits-from='feature_init'>
        <pointer name='feature' type-name='feature_volcanost'/>
    </class-type>

    <class-type type-name='feature_init_deep_special_tubest' inherits-from='feature_init'>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <pointer name='feature' type-name='feature_deep_special_tubest'/>
    </class-type>

    <class-type type-name='feature_init_deep_surface_portalst' inherits-from='feature_init'>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <pointer name='feature' type-name='feature_deep_surface_portalst'/>
    </class-type>

    <class-type type-name='feature_init_subterranean_from_layerst' inherits-from='feature_init'>
        <int32_t name='layer' ref-target='world_underground_region'/>
        <pointer name='feature' type-name='feature_subterranean_from_layerst'/>
    </class-type>

    <class-type type-name='feature_init_magma_core_from_layerst' inherits-from='feature_init'>
        <int32_t name='layer' ref-target='world_underground_region'/>
        <pointer name='feature' type-name='feature_magma_core_from_layerst'/>
    </class-type>

    <class-type type-name='feature_init_underworld_from_layerst' inherits-from='feature_init'>
        <int32_t name='layer' ref-target='world_underground_region'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <pointer name='feature' type-name='feature_underworld_from_layerst'/>
    </class-type>

    <struct-type type-name='feature_mapst'>
        <static-array name='feature_init' count='16'>
            <static-array count='16'>
                <stl-vector pointer-type='feature_init'/>
            </static-array>
        </static-array>
        <static-array name='index_ul' count='16'>
            <static-array count='16'>
                <static-array count='5'><static-array count='2' type-name='int32_t'/></static-array>
            </static-array>
        </static-array>
        <static-array name='index_u' count='16'>
            <static-array count='16'>
                <static-array count='5'><static-array count='2' type-name='int32_t'/></static-array>
            </static-array>
        </static-array>
        <static-array name='index_l' count='16'>
            <static-array count='16'>
                <static-array count='5'><static-array count='2' type-name='int32_t'/></static-array>
            </static-array>
        </static-array>
    </struct-type>

    <struct-type type-name='feature_river_informationst'>
        <static-array name='map' count='16'>
            <static-array count='16'>
                <static-array count='2' type-name='int16_t'/>
            </static-array>
        </static-array>
    </struct-type>

    <struct-type type-name='feature_layer_informationst'>
        <static-array name='map' count='16'>
            <static-array count='16'>
                <static-array count='5'><static-array count='2' type-name='int32_t'/></static-array>
            </static-array>
        </static-array>
    </struct-type>

    <struct-type type-name='feature_map_shellst'>
        <int16_t name='x'/>
        <int16_t name='y'/>
        <pointer name='features' type-name='feature_mapst'/>
        <pointer name='river_info' type-name='feature_river_informationst'/>
        <pointer name='layer_info' type-name='feature_layer_informationst'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
