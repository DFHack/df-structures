<data-definition>
    -- BUILDING COMPONENT ITEM SELECTION

    <struct-type type-name='ui_build_item_req' original-name='build_req_stagest'>
        <comment>
            When creating a building, one record per required item type.
            E.g. Soap Maker's workshop requires a bucket and a building material.
        </comment>

        <compound name='filter' type-name='job_item_filter'/>

        <stl-vector name='candidates' pointer-type='item'/>
        <stl-vector name='candidate_selected' type-name='bool'/>
        <stl-vector name='level_map' type-name='int16_t' comment='map_block.walkable'/>
        <stl-vector name='candidate_enabled' type-name='bool'/>

        <int16_t name="count_required"/>
        <int16_t name="count_max" comment='if 0, fixed at required'/>
        <int16_t name="count_provided"/>
    </struct-type>

    <enum-type type-name='build_req_choice_type'> bay12: BuildReqChoice
        <enum-item name='General'/>
        <enum-item name='Specific'/>
    </enum-type>

    <class-type type-name='build_req_choicest'>
        <comment>One choice in the build item selector.</comment>
        <int32_t name="distance"/>
        <bool name='on'/>
        <stl-string name='compstr'/>

        <virtual-methods>
            <vmethod is-destructor='true'/>
            <vmethod ret-type='build_req_choice_type' name='getType'/>
            <vmethod name='getName'>
                <pointer type-name='stl-string' name='str'/>
            </vmethod>
            <vmethod ret-type='int32_t' name='select'/>
            <vmethod ret-type='bool' name='isCandidate'>
                <int32_t name='item_id'/>
            </vmethod>
            <vmethod ret-type='bool' name='deselect'/>
            <vmethod ret-type='int32_t' name='getUsedCount'/>
            <vmethod ret-type='int32_t' name='getNumCandidates'/>
            <vmethod ret-type='bool' name='expandable'/>
            <vmethod ret-type='bool' name='is_expanded'/>
            <vmethod name='expand'/>
            <vmethod name='unexpand'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='build_req_choice_genst' inherits-from='build_req_choicest'>
        <enum name="item_type" type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>

        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>

        <stl-vector name="candidates">
            <int32_t>
                <code-helper name='refers-to'>
                    (let* ((selector $global.buildreq)
                           (req $selector.requirements[$selector.req_index]))
                      $req.candidates[$])
                </code-helper>
            </int32_t>
        </stl-vector>

        <int32_t name="used_count"/>
        <bool name='expanded'/>
    </class-type>

    <class-type type-name='build_req_choice_specst' inherits-from='build_req_choicest'>
        <pointer name='candidate' type-name='item'/>
        <int32_t name='candidate_id'>
            <code-helper name='refers-to'>
                (let* ((selector $global.buildreq)
                       (req $selector.requirements[$selector.req_index]))
                  $req.candidates[$])
            </code-helper>
        </int32_t>
    </class-type>

    <enum-type type-name='build_square_type'> bay12: BuildSquare
        <enum-item name='FINE'/>
        <enum-item name='FINE_BLOCKED'/>
        <enum-item name='FINE_WATER'/>
        <enum-item name='FINE_MAGMA'/>
        <enum-item name='SKIP'/>
        <enum-item name='BAD_ANCHOR'/>
        <enum-item name='BLOCKED'/>
        <enum-item name='HIDDEN'/>
        <enum-item name='NEED_WALL'/>
        <enum-item name='OFF_MAP'/>
        <enum-item name='WATER'/>
        <enum-item name='MAGMA'/>
        <enum-item name='BUILDING_PRESENT'/>
        <enum-item name='CLOSE_TO_EDGE'/>
        <enum-item name='INSIDE'/>
        <enum-item name='NEED_OPEN_AIR'/>
        <enum-item name='SURROUNDED_BY_AIR'/>
        <enum-item name='TOO_HIGH'/>
        <enum-item name='CONSTRUCTION_PRESENT'/>
        <enum-item name='NEEDS_SOIL_OR_MUD'/>
        <enum-item name='NEED_SOIL'/>
    </enum-type>

    <class-type type-name='buildreq' original-name='buildreqst'>
        <stl-vector name='requirements' pointer-type='ui_build_item_req'/>

        <stl-vector name='choices' pointer-type='build_req_choicest'/>

        <enum base-type='int32_t' name="building_type" type-name='building_type' comment='if -1, in Build menu; otherwise select item'/> Toady used the actual enum rather than the matching typedef
        <int16_t name="building_subtype"/>
        <int32_t name="custom_type" ref-target='building_def'/>

        <enum name="stage"> bay12: BuildReqMode
            <enum-item name='INITIAL_FAILURE'/>
            <enum-item name='PLACING'/>
            <enum-item name='STAGES'/>
        </enum>

        <int16_t name="req_index"/>
        <int16_t name="sel_index"/>

        <bool name="general_choices"/>

        <stl-vector name='errors' pointer-type='stl-string'/>
        <stl-vector name='warnings' pointer-type='stl-string'/>

        <static-array name='tiles' count='31'>
            <static-array type-name='build_square_type' count='31'/>
        </static-array>

        <int16_t name='cur_walk_tag'/>

        <compound name='plate_info' type-name='pressure_plate_info'/>

        <stl-vector name='min_weight_races' type-name='int16_t' ref-target='creature_raw'/>
        <stl-vector name='max_weight_races' type-name='int16_t' ref-target='creature_raw'/>

        <stl-vector name='trigger_track_weight' type-name='int32_t'/>
        <stl-vector name='trigger_race_example' type-name='int16_t' ref-target='creature_raw'/>
        <stl-vector name='trigger_race_size' type-name='int32_t'/>
        <int32_t name='scroll_position_race'/>
        <bool name='scrolling_race'/>

        <compound name='track_stop' type-name='track_stop_profilest'/>

        <int32_t name='speed' init-value='50000' since='v0.34.08'/>
        <compound name='pos' type-name='coord' since='v0.50.01'/>
        <int32_t name='direction' since='v0.50.01'/>
        <bool name='first_stage_pass'/>

        <compound name='selection_pos' type-name='coord' since='v0.50.01'/>
        <int32_t name='selection_area' since='v0.50.01'/>
        <int32_t name='total_sq'/>
        <stl-vector name='total_sq_level_map' type-name='int16_t' since='v0.50.01'/>

        <bool name='use_closest_material'/>
        <bool name='use_same_material'/>
        <bool name='build_after_placement'/>

        <virtual-methods>
            <vmethod name='evaluate_buildability'><int16_t name='x'/><int16_t name='y'/><int16_t name='z'/><int32_t name='orientation'/></vmethod>
            <vmethod name='evaluate_items_vs_placement'/>
            <vmethod name='old_evaluate_buildability'/>
        </virtual-methods>
    </class-type>

    -- MISC. SIDEBAR MENUS

    <enum-type type-name='interface_category_building'> bay12: InterfaceCategoryBuilding
        <enum-item name='NONE' value='-1'/>
        <enum-item name='WEAPON'/>
        <enum-item name='ARMOR'/>
        <enum-item name='FURNITURE'/>
        <enum-item name='SIEGE'/>
        <enum-item name='TRAP'/>
        <enum-item name='OTHER'/>
        <enum-item name='METAL'/>
        <enum-item name='SELECT_MEMORIAL_UNIT'/>
    </enum-type>

    <enum-type type-name='interface_category_construction'> bay12: InterfaceCategoryConstruction
        <enum-item name='MAIN'/>
        <enum-item name='SIEGEENGINE'/>
        <enum-item name='TRAP'/>
        <enum-item name='WORKSHOP'/>
        <enum-item name='FURNACE'/>
        <enum-item name='CONSTRUCTION'/>
        <enum-item name='MACHINE'/>
        <enum-item name='TRACK'/>
    </enum-type>

    <class-type type-name='interface_button' original-name='interface_buttonst'>
        <enum name='hotkey' type-name='interface_key'/>
        <bool name="leave_button"/>
        <bitfield name='flag' base-type='uint32_t'> bay12: INTERFACE_BUTTON_FLAG_*
            <flag-bit name='left'/>
            <flag-bit name='right'/>
        </bitfield>
        <stl-string name='filter_str'/>

        <virtual-methods>
            <vmethod name='print_info' comment='ghost, buried, memorialized'>
                <int32_t name='y'/>
                <int32_t name='limx_min'/>
                <int32_t name='limx_max'/>
            </vmethod>
            <vmethod name='text'>
                <pointer type-name='stl-string' name='str'/>
            </vmethod>
            <vmethod name='press'/>
            <vmethod name='set_button_color'>
                <bool name='selected'/>
            </vmethod>
            <vmethod name='set_leave_button'/>
            <vmethod name='tile' ret-type='uint8_t'/>
            <vmethod name='set_tile_color'/>
            <vmethod name='prepare_tool_tip'>
                <pointer name='box' type-name='curses_text_boxst'/>
            </vmethod>
            <vmethod name='pressable' ret-type='bool'/>
            <vmethod name='has_view' ret-type='bool'/>
            <vmethod name='is_alphabetized' ret-type='bool'/>
            <vmethod name='get_objection_string'>
                <ret-type><pointer type-name='stl-string'/></ret-type>
            </vmethod>
            <vmethod name='get_info_string'>
                <ret-type><pointer type-name='stl-string'/></ret-type>
            </vmethod>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='interface_button_buildingst'
                inherits-from='interface_button'>
        <pointer name='bd' type-name='building'/>
    </class-type>

    <class-type type-name='interface_button_building_category_selectorst'
                inherits-from='interface_button_buildingst'>
        <enum type-name='interface_category_building' name='category'/>
        <int8_t name="prepare_interface"/>
    </class-type>

    <class-type type-name='interface_button_building_material_selectorst'
                inherits-from='interface_button_buildingst'>
        <int16_t name='material' ref-target='material' aux-value='$$.matgloss'/>
        <int32_t name='matgloss'/>
        <bitfield name='job_item_flag' type-name='job_material_category'/>
        <int8_t name="prepare_interface"/>
    </class-type>

    <class-type type-name='interface_button_building_new_jobst'
                inherits-from='interface_button_buildingst'>
        <enum name='jobtype' type-name='job_type'/>
        <stl-string name='mstring'/>
        <enum name='itemtype' type-name='item_type'/>
        <int16_t name='subtype'/>
        <int16_t name='material' ref-target='material' aux-value='$$.matgloss'/>
        <int32_t name='matgloss'/>
        <compound name='specflag' type-name='job_spec_flags'/>
        <compound name='specdata' type-name='job_spec_data'/>
        <bitfield name='job_item_flag' type-name='job_material_category'/>
        <bool name='add_building_location'/>
        <bool name='show_help_instead'/>

        <stl-string name='objection'/>
        <stl-string name='info'/>
    </class-type>

    <class-type type-name='interface_button_building_custom_category_selectorst'
                inherits-from='interface_button_buildingst'>
        <stl-string name='custom_category_token'/>
    </class-type>

    <enum-type type-name='construction_category_type' base-type='int32_t'> bay12: ConstructionCategoryType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='MAIN'/>
        <enum-item name='WORKSHOPS'/>
        <enum-item name='WORKSHOPS_FURNACES'/>
        <enum-item name='WORKSHOPS_CLOTHING'/>
        <enum-item name='WORKSHOPS_FARMING'/>
        <enum-item name='FURNITURE'/>
        <enum-item name='DOORS_HATCHES'/>
        <enum-item name='WALLS_FLOORS'/>
        <enum-item name='MACHINES_FLUIDS'/>
        <enum-item name='CAGES_RESTRAINTS'/>
        <enum-item name='TRAPS'/>
        <enum-item name='MILITARY'/>
    </enum-type>

    <struct-type type-name='bb_buttonst'>
        <enum name='category' type-name='construction_category_type'/>
        <int32_t name='type'/>
        <int32_t name='subtype'/>
        <int32_t name='custom_building_id'/>
        <int32_t name='number'/>
        <int32_t name='grid_height'/>
        <int32_t name='texpos'/>
        <stl-string name='str'/>
        <enum name='hotkey' type-name='interface_key'/>
    </struct-type>

    <enum-type type-name='construction_interface_page_status_type' base-type='int32_t'> bay12: ConstructionInterfacePageStatusType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='FULL'/>
        <enum-item name='ICONS_ONLY'/>
        <enum-item name='OFF'/>
    </enum-type>

    <struct-type type-name='construction_interface_pagest'>
        <enum name='category' type-name='construction_category_type'/>
        <stl-vector pointer-type='bb_buttonst' name='bb_button'/>

        <int32_t name='last_main_sx'/>
        <int32_t name='last_main_ex'/>
        <int32_t name='last_main_sy'/>
        <int32_t name='last_main_ey'/>

        <enum name='page_status' type-name='construction_interface_page_status_type'/>
        <int32_t name='number_of_columns'/>
        <int32_t name='column_height'/>
        <int32_t name='column_width'/>

        <pointer type-name='bb_buttonst' name='selected_button'/>

        <bool name='scrolling'/>
        <int32_t name='scroll_position'/>
    </struct-type>

    <enum-type type-name='room_flow_shape_type' base-type='int16_t'> bay12: RoomFlowShapeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='RECTANGLE'/>
        <enum-item name='WALL_FLOW'/>
        <enum-item name='FLOOR_FLOW'/>
    </enum-type>

    <enum-type type-name='cannot_expel_reason_type' base-type='int32_t'> bay12: CannotExpelReasonType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='HEREDITARY'/>
        <enum-item name='ELECTED'/>
        <enum-item name='MEET_WORKERS'/>
        <enum-item name='SPOUSE_NOT_PRESENT'/>
        <enum-item name='SPOUSE_HEREDITARY'/>
        <enum-item name='SPOUSE_ELECTED'/>
        <enum-item name='SPOUSE_MEET_WORKERS'/>
        <enum-item name='CHILD_NOT_PRESENT'/>
        <enum-item name='CHILD_HEREDITARY'/>
        <enum-item name='CHILD_ELECTED'/>
        <enum-item name='CHILD_MEET_WORKERS'/>
    </enum-type>

    <enum-type type-name='mine_mode_type' base-type='int32_t'> bay12: MineModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='ALL'/>
        <enum-item name='AUTOMINE_NON_LAYER_MATERIAL'/>
        <enum-item name='MARK_ECONOMIC_ONLY'/>
        <enum-item name='MARK_GEMS_ONLY'/>
    </enum-type>

    <enum-type type-name='job_details_option_type' base-type='int32_t'> bay12: JobDetailsOptionType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='MATERIAL'/>
        <enum-item name='IMAGE'/>
        <enum-item name='CLOTHING_SIZE'/>
        <enum-item name='IMPROVEMENT_TYPE'/>
    </enum-type>

    <enum-type type-name='job_details_context_type' base-type='int32_t'> bay12: JobDetailsContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='BUILDING_TASK_LIST'/>
        <enum-item name='CREATURES_LIST_TASK'/>
        <enum-item name='TASK_LIST_TASK'/>
        <enum-item name='BUILDING_WORK_ORDER'/>
        <enum-item name='MANAGER_WORK_ORDER'/>
    </enum-type>

    <enum-type type-name='stock_pile_pointer_type' base-type='int32_t'> bay12: StockPilePointerType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='ANIMAL_EMPTY_CAGES'/>
        <enum-item name='ANIMAL_EMPTY_ANIMAL_TRAPS'/>
        <enum-item name='FOOD_PREPARED_FOOD'/>
        <enum-item name='REFUSE_ROTTEN_RAW_HIDE'/>
        <enum-item name='REFUSE_UNROTTEN_RAW_HIDE'/>
        <enum-item name='WEAPON_USABLE'/>
        <enum-item name='WEAPON_NON_USABLE'/>
        <enum-item name='ARMOR_USABLE'/>
        <enum-item name='ARMOR_NON_USABLE'/>
    </enum-type>

    <enum-type type-name='stockpile_tools_context_type' base-type='int32_t'> bay12: StockpileToolsContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='STOCKPILE'/>
    </enum-type>

    <enum-type type-name='stockpile_link_context_type' base-type='int32_t'> bay12: StockpileLinkContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='STOCKPILE'/>
        <enum-item name='WORKSHOP'/>
        <enum-item name='HAULING_STOP'/>
    </enum-type>

    <enum-type type-name='hauling_stop_conditions_context_type' base-type='int32_t'> bay12: HaulingStopConditionsContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='HAULING_MENU'/>
    </enum-type>

    <enum-type type-name='assign_vehicle_context_type' base-type='int32_t'> bay12: AssignVehicleContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='HAULING_MENU'/>
    </enum-type>

    <enum-type type-name='location_details_context_type' base-type='int32_t'> bay12: LocationDetailsContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='FROM_ZONE'/>
        <enum-item name='FROM_LOCATION_SELECTOR'/>
    </enum-type>

    <enum-type type-name='location_selector_context_type' base-type='int32_t'> bay12: LocationSelectorContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='ZONE_MEETING_AREA_ASSIGNMENT'/>
    </enum-type>

    <enum-type type-name='custom_symbol_context_type' base-type='int32_t'> bay12: CustomSymbolContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='BURROW'/>
        <enum-item name='BURROW_PAINT'/>
        <enum-item name='WORK_DETAIL'/>
        <enum-item name='SQUAD_MENU'/>
    </enum-type>

    <enum-type type-name='name_creator_context_type' base-type='int32_t'> bay12: NameCreatorContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='EMBARK_FORT_NAME'/>
        <enum-item name='EMBARK_GROUP_NAME'/>
        <enum-item name='IMAGE_CREATOR_NAME'/>
        <enum-item name='LOCATION_NAME'/>
        <enum-item name='SQUAD_NAME'/>
        <enum-item name='INFO_NOBLES_ELEVATING_POSITION_SYMBOL'/>
        <enum-item name='ADVENTURER_INVENTORY_ITEM'/>
        <enum-item name='ADVENTURER_PET'/>
        <enum-item name='ADVENTURER_PERFORMANCE_TROUPE'/>
        <enum-item name='ADVENTURER_SITE_ENTITY'/>
        <enum-item name='CHARGEN_NAME'/>
        <enum-item name='CHARGEN_PET_NAME'/>
    </enum-type>

    <enum-type type-name='image_creator_context_type' base-type='int32_t'> bay12: ImageCreatorContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='EMBARK_FORT_SYMBOL'/>
        <enum-item name='JOB_DETAILS_MAIN'/>
        <enum-item name='JOB_DETAILS_IMPROVEMENT'/>
        <enum-item name='DESIGNATION_ENGRAVING'/>
    </enum-type>

    <enum-type type-name='image_creator_option_type' base-type='int32_t'> bay12: ImageCreatorOptionType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='ALLOW_ARTIST_TO_CHOOSE'/>
        <enum-item name='RELATED_TO_HFID'/>
        <enum-item name='RELATED_TO_STID'/>
        <enum-item name='RELATED_TO_ENID'/>
        <enum-item name='RELATED_TO_HEID'/>
        <enum-item name='EXISTING_IMAGE'/>
        <enum-item name='NEW_IMAGE'/>
        <enum-item name='NEW_IMAGE_ELEMENT_CREATURE'/>
        <enum-item name='NEW_IMAGE_ELEMENT_HF'/>
        <enum-item name='NEW_IMAGE_ELEMENT_PLANT'/>
        <enum-item name='NEW_IMAGE_ELEMENT_TREE'/>
        <enum-item name='NEW_IMAGE_ELEMENT_SHAPE'/>
        <enum-item name='NEW_IMAGE_ELEMENT_ITEM'/>
        <enum-item name='NEW_IMAGE_ELEMENT_ARTIFACT'/>
        <enum-item name='NEW_IMAGE_PROPERTY'/>
        <enum-item name='NEW_IMAGE_PROPERTY_ACTOR'/>
        <enum-item name='NEW_IMAGE_PROPERTY_TARGET'/>
        <enum-item name='NEW_IMAGE_DELETE_ELEMENTS'/>
    </enum-type>

    <enum-type type-name='unit_selector_context_type' base-type='int32_t'> bay12: UnitSelectorContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='ZONE_PEN_ASSIGNMENT'/>
        <enum-item name='ZONE_PIT_ASSIGNMENT'/>
        <enum-item name='ZONE_BEDROOM_ASSIGNMENT'/>
        <enum-item name='ZONE_OFFICE_ASSIGNMENT'/>
        <enum-item name='ZONE_DINING_HALL_ASSIGNMENT'/>
        <enum-item name='ZONE_TOMB_ASSIGNMENT'/>
        <enum-item name='CHAIN_ASSIGNMENT'/>
        <enum-item name='CAGE_ASSIGNMENT'/>
        <enum-item name='WORKER_ASSIGNMENT'/>
        <enum-item name='OCCUPATION_ASSIGNMENT'/>
        <enum-item name='BURROW_ASSIGNMENT'/>
        <enum-item name='SQUAD_KILL_ORDER'/>
        <enum-item name='SQUAD_FILL_POSITION'/>
    </enum-type>

    <enum-type type-name='squad_selector_context_type' base-type='int32_t'> bay12: SquadSelectorContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='ZONE_BARRACKS_ASSIGNMENT'/>
        <enum-item name='ZONE_ARCHERY_RANGE_ASSIGNMENT'/>
    </enum-type>

    <enum-type type-name='squad_schedule_context_type' base-type='int32_t'> bay12: SquadScheduleContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='FROM_SQUAD_MENU'/>
    </enum-type>

    <enum-type type-name='squad_equipment_context_type' base-type='int32_t'> bay12: SquadEquipmentContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='FROM_SQUAD_MENU'/>
    </enum-type>

    <enum-type type-name='patrol_routes_context_type' base-type='int32_t'> bay12: PatrolRoutesContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='GIVING_SQUAD_PATROL_ORDER'/>
    </enum-type>

    <enum-type type-name='burrow_selector_context_type' base-type='int32_t'> bay12: BurrowSelectorContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='GIVING_SQUAD_ORDER'/>
    </enum-type>

    <enum-type type-name='view_sheet_trait_type' base-type='int32_t'> bay12: ViewSheetTraitType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='PHYS_ATT_PLUS'/>
        <enum-item name='PHYS_ATT_MINUS'/>
        <enum-item name='MENT_ATT_PLUS'/>
        <enum-item name='MENT_ATT_MINUS'/>
        <enum-item name='PERSONALITY_FACET_HIGH'/>
        <enum-item name='PERSONALITY_FACET_LOW'/>
        <enum-item name='VALUE_HIGH'/>
        <enum-item name='VALUE_LOW'/>
    </enum-type>

    <enum-type type-name='view_sheet_unit_knowledge_type' base-type='int32_t'> bay12: ViewSheetUnitKnowledgeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='PHILOSOPHY_FLAG'/>
        <enum-item name='PHILOSOPHY_FLAG2'/>
        <enum-item name='MATHEMATICS_FLAG'/>
        <enum-item name='MATHEMATICS_FLAG2'/>
        <enum-item name='HISTORY_FLAG'/>
        <enum-item name='ASTRONOMY_FLAG'/>
        <enum-item name='NATURALIST_FLAG'/>
        <enum-item name='CHEMISTRY_FLAG'/>
        <enum-item name='GEOGRAPHY_FLAG'/>
        <enum-item name='MEDICINE_FLAG'/>
        <enum-item name='MEDICINE_FLAG2'/>
        <enum-item name='MEDICINE_FLAG3'/>
        <enum-item name='ENGINEERING_FLAG'/>
        <enum-item name='ENGINEERING_FLAG2'/>
        <enum-item name='POETIC_FORM'/>
        <enum-item name='MUSICAL_FORM'/>
        <enum-item name='DANCE_FORM'/>
        <enum-item name='WRITTEN_CONTENT'/>
    </enum-type>

    <enum-type type-name='view_sheets_context_type' base-type='int32_t'> bay12: ViewSheetsContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='REGULAR_PLAY'/>
        <enum-item name='PREPARE_CAREFULLY'/>
    </enum-type>

    <enum-type type-name='view_sheet_type' base-type='int32_t'> bay12: ViewSheetType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='UNIT'/>
        <enum-item name='ITEM'/>
        <enum-item name='BUILDING'/>
        <enum-item name='ENGRAVING'/>
        <enum-item name='ENGRAVING_PLANNED'/>
        <enum-item name='UNIT_LIST'/>
        <enum-item name='ITEM_LIST'/>
    </enum-type>

    <enum-type type-name='unit_list_mode_type' base-type='int32_t'> bay12: UnitListModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='CITIZEN'/>
        <enum-item name='PET'/>
        <enum-item name='OTHER'/>
        <enum-item name='DECEASED'/>
    </enum-type>

    <enum-type type-name='buildings_mode_type' base-type='int32_t'> bay12: BuildingsModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='ZONES'/>
        <enum-item name='LOCATIONS'/>
        <enum-item name='STOCKPILES'/>
        <enum-item name='WORKSHOPS'/>
        <enum-item name='FARMPLOTS'/>
    </enum-type>

    <enum-type type-name='kitchen_pref_category_type' base-type='int32_t'> bay12: KitchenPrefCategoryType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='PLANTS'/>
        <enum-item name='SEEDS'/>
        <enum-item name='DRINK'/>
        <enum-item name='OTHER'/>
    </enum-type>

    <enum-type type-name='standing_orders_category_type' base-type='int32_t'> bay12: StandingOrdersCategoryType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='AUTOMATED_WORKSHOPS'/>
        <enum-item name='HAULING'/>
        <enum-item name='REFUSE_AND_DUMPING'/>
        <enum-item name='AUTOMATIC_FORBIDDING'/>
        <enum-item name='CHORES'/>
        <enum-item name='OTHER'/>
    </enum-type>

    <enum-type type-name='stone_use_category_type' base-type='int32_t'> bay12: StoneUseCategoryType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='ECONOMIC'/>
        <enum-item name='OTHER'/>
    </enum-type>

    <enum-type type-name='labor_mode_type' base-type='int32_t'> bay12: LaborModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='WORK_DETAILS'/>
        <enum-item name='STANDING_ORDERS'/>
        <enum-item name='KITCHEN'/>
        <enum-item name='STONE_USE'/>
    </enum-type>

    <enum-type type-name='artifacts_mode_type' base-type='int32_t'> bay12: ArtifactsModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='ARTIFACTS'/>
        <enum-item name='SYMBOLS'/>
        <enum-item name='NAMED_OBJECTS'/>
        <enum-item name='WRITTEN_CONTENT'/>
    </enum-type>

    <enum-type type-name='counterintelligence_mode_type' base-type='int32_t'> bay12: CounterintelligenceModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='INTERROGATIONS'/>
        <enum-item name='ACTORS'/>
        <enum-item name='ORGANIZATIONS'/>
        <enum-item name='PLOTS'/>
    </enum-type>

    <enum-type type-name='justice_interface_mode_type' base-type='int32_t'> bay12: JusticeInterfaceModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='OPEN_CASES'/>
        <enum-item name='CLOSED_CASES'/>
        <enum-item name='COLD_CASES'/>
        <enum-item name='FORTRESS_GUARD'/>
        <enum-item name='CONVICTS'/>
        <enum-item name='COUNTERINTELLIGENCE'/>
    </enum-type>

    <enum-type type-name='info_interface_mode_type' base-type='int32_t'> bay12: InfoInterfaceModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='CREATURES'/>
        <enum-item name='JOBS'/>
        <enum-item name='BUILDINGS'/>
        <enum-item name='LABOR'/>
        <enum-item name='WORK_ORDERS'/>
        <enum-item name='ADMINISTRATORS'/>
        <enum-item name='ARTIFACTS'/>
        <enum-item name='JUSTICE'/>
    </enum-type>

    <enum-type type-name='main_menu_option_type' base-type='int32_t'> bay12: MainMenuOptionType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='RETURN'/>
        <enum-item name='SAVE_AND_QUIT'/>
        <enum-item name='SAVE_AND_CONTINUE'/>
        <enum-item name='SETTINGS'/>
        <enum-item name='SUCCUMB_TO_INVASION'/>
        <enum-item name='ABANDON_FORTRESS'/>
        <enum-item name='RETIRE_FORTRESS'/>
        <enum-item name='ABANDON_ADVENTURER'/>
        <enum-item name='RETIRE_ADVENTURER'/>
        <enum-item name='QUIT_WITHOUT_SAVING'/>
        <enum-item name='END_GAME'/>
        <enum-item name='SAVE_TO_EXISTING_FOLDER'/>
        <enum-item name='SAVE_TO_NEW_FOLDER_NEW_TIMELINE'/>
        <enum-item name='SAVE_TO_NEW_FOLDER_EXISTING_TIMELINE'/>
        <enum-item name='RETURN_TO_TITLE'/>
        <enum-item name='CONTINUE'/>
    </enum-type>

    <enum-type type-name='options_context_type' base-type='int32_t'> bay12: OptionsContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='MAIN_DWARF'/>
        <enum-item name='MAIN_DWARF_GAME_OVER'/>
        <enum-item name='MAIN_DWARF_HELP'/>
        <enum-item name='MAIN_DWARF_SAVE_AND_EXIT_CHOICES'/>
        <enum-item name='MAIN_DWARF_SAVE_AND_EXIT_CHOICES_ENDED'/>
        <enum-item name='ABORT_FROM_STARTING_GAME'/>
        <enum-item name='MAIN_ADVENTURE'/>
        <enum-item name='MAIN_ADVENTURE_SAVE_AND_EXIT_CHOICES'/>
        <enum-item name='MAIN_ADVENTURE_SAVE_AND_EXIT_CHOICES_ENDED'/>
        <enum-item name='MAIN_ADVENTURE_GAME_OVER_RETIRED'/>
        <enum-item name='MAIN_ADVENTURE_GAME_OVER_ABANDONED'/>
    </enum-type>

    <enum-type type-name='help_context_type' base-type='int32_t'> bay12: HelpContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='WORLD_GEN_MESSAGE'/>
        <enum-item name='EMBARK_TUTORIAL_CHOICE'/>
        <enum-item name='EMBARK_MESSAGE'/>
        <enum-item name='START_TUTORIAL_CAMERA_CONTROLS'/>
        <enum-item name='START_TUTORIAL_MINING'/>
        <enum-item name='START_TUTORIAL_STOCKPILES'/>
        <enum-item name='START_TUTORIAL_CHOPPING'/>
        <enum-item name='START_TUTORIAL_WORKSHOPS_AND_TASKS'/>
        <enum-item name='START_TUTORIAL_SHEETS'/>
        <enum-item name='START_TUTORIAL_ALERTS'/>
        <enum-item name='START_TUTORIAL_PREPARING_FOR_CARAVAN'/>
        <enum-item name='DONE_WITH_FIRST_STEPS_MESSAGE'/>
        <enum-item name='POPUP_ZONES'/>
        <enum-item name='POPUP_BURROWS'/>
        <enum-item name='POPUP_HAULING'/>
        <enum-item name='POPUP_STOCKS'/>
        <enum-item name='POPUP_WORK_DETAILS'/>
        <enum-item name='POPUP_NOBLES'/>
        <enum-item name='POPUP_JUSTICE'/>
        <enum-item name='POPUP_SQUADS'/>
        <enum-item name='POPUP_WORLD'/>
        <enum-item name='POPUP_WORK_ORDERS'/>
        <enum-item name='REVISIT_CAMERA_CONTROLS'/>
        <enum-item name='REVISIT_MINING'/>
        <enum-item name='REVISIT_STOCKPILES'/>
        <enum-item name='REVISIT_CHOPPING'/>
        <enum-item name='REVISIT_WORKSHOPS_AND_TASKS'/>
        <enum-item name='REVISIT_SHEETS'/>
        <enum-item name='REVISIT_ALERTS'/>
        <enum-item name='REVISIT_PREPARING_FOR_CARAVAN'/>
        <enum-item name='GUIDE_SURVIVAL'/>
        <enum-item name='GUIDE_PLANTING'/>
        <enum-item name='GUIDE_OTHER_FOOD_SOURCES'/>
        <enum-item name='GUIDE_BINS_BAGS_AND_BARRELS'/>
        <enum-item name='GUIDE_TRADE'/>
        <enum-item name='GUIDE_OFFICES'/>
        <enum-item name='GUIDE_ORE_AND_SMELTING'/>
        <enum-item name='GUIDE_TRAPS_AND_LEVERS'/>
        <enum-item name='GUIDE_WELLS'/>
        <enum-item name='GUIDE_HANDLING_LIGHT_AQUIFERS'/>
        <enum-item name='GUIDE_CLOTHING'/>
        <enum-item name='GUIDE_MEETING_AREAS_AND_LOCATIONS'/>
        <enum-item name='GUIDE_MILITARY'/>
        <enum-item name='GUIDE_CHANNELS_AND_RAMPS'/>
        <enum-item name='GUIDE_REFUSE'/>
        <enum-item name='GUIDE_DEEPER'/>
        <enum-item name='GUIDE_HAPPINESS'/>
        <enum-item name='GUIDE_GOALS'/>
    </enum-type>

    <enum-type type-name='settings_tab_type' base-type='int32_t'> bay12: SettingsTabType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='VIDEO'/>
        <enum-item name='AUDIO'/>
        <enum-item name='GAME'/>
        <enum-item name='KEYBINDINGS'/>
        <enum-item name='ANNOUNCEMENTS'/>
        <enum-item name='DIFFICULTY'/>
    </enum-type>

    <enum-type type-name='settings_context_type' base-type='int32_t'> bay12: SettingsContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='OUTSIDE_PLAY'/>
        <enum-item name='FORT_MODE'/>
        <enum-item name='ADVENTURE_MODE'/>
    </enum-type>

    <enum-type type-name='arena_context_type' base-type='int32_t'> bay12: CreateCreatureModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='CREATURE'/>
        <enum-item name='SKILLS'/>
        <enum-item name='EQUIPMENT'/>
        <enum-item name='CONDITION'/>
    </enum-type>

    <enum-type type-name='assign_uniform_context_type' base-type='int32_t'> bay12: AssignUniformContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='CREATE_SQUAD_FROM_SQUAD_MENU'/>
        <enum-item name='FROM_SQUAD_EQUIPMENT_MENU'/>
    </enum-type>

    <enum-type type-name='main_bottom_mode_type' base-type='int32_t'> bay12: MainBottomModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='BUILDING'/>
        <enum-item name='BUILDING_PLACEMENT'/>
        <enum-item name='BUILDING_PICK_MATERIALS'/>
        <enum-item name='ZONE'/>
        <enum-item name='ZONE_PAINT'/>
        <enum-item name='STOCKPILE'/>
        <enum-item name='STOCKPILE_PAINT'/>
        <enum-item name='BURROW'/>
        <enum-item name='BURROW_PAINT'/>
        <enum-item name='HAULING'/>
        <enum-item name='ARENA_UNIT'/>
        <enum-item name='ARENA_TREE'/>
        <enum-item name='ARENA_WATER_PAINT'/>
        <enum-item name='ARENA_MAGMA_PAINT'/>
        <enum-item name='ARENA_SNOW_PAINT'/>
        <enum-item name='ARENA_MUD_PAINT'/>
        <enum-item name='ARENA_REMOVE_PAINT'/>
    </enum-type>

    <enum-type type-name='main_designation_type' base-type='int32_t'> bay12: MainDesignationType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='DIG_DIG'/>
        <enum-item name='DIG_REMOVE_STAIRS_RAMPS'/>
        <enum-item name='DIG_STAIR_UP'/>
        <enum-item name='DIG_STAIR_UPDOWN'/>
        <enum-item name='DIG_STAIR_DOWN'/>
        <enum-item name='DIG_RAMP'/>
        <enum-item name='DIG_CHANNEL'/>
        <enum-item name='CHOP'/>
        <enum-item name='GATHER'/>
        <enum-item name='SMOOTH'/>
        <enum-item name='TRACK'/>
        <enum-item name='ENGRAVE'/>
        <enum-item name='FORTIFY'/>
        <enum-item name='REMOVE_CONSTRUCTION'/>
        <enum-item name='CLAIM'/>
        <enum-item name='UNCLAIM'/>
        <enum-item name='MELT'/>
        <enum-item name='NO_MELT'/>
        <enum-item name='DUMP'/>
        <enum-item name='NO_DUMP'/>
        <enum-item name='HIDE'/>
        <enum-item name='NO_HIDE'/>
        <enum-item name='TOGGLE_ENGRAVING'/>
        <enum-item name='DIG_FROM_MARKER'/>
        <enum-item name='DIG_TO_MARKER'/>
        <enum-item name='CHOP_FROM_MARKER'/>
        <enum-item name='CHOP_TO_MARKER'/>
        <enum-item name='GATHER_FROM_MARKER'/>
        <enum-item name='GATHER_TO_MARKER'/>
        <enum-item name='SMOOTH_FROM_MARKER'/>
        <enum-item name='SMOOTH_TO_MARKER'/>
        <enum-item name='DESIGNATE_TRAFFIC_HIGH'/>
        <enum-item name='DESIGNATE_TRAFFIC_NORMAL'/>
        <enum-item name='DESIGNATE_TRAFFIC_LOW'/>
        <enum-item name='DESIGNATE_TRAFFIC_RESTRICTED'/>
        <enum-item name='ERASE'/>
    </enum-type>

    <class-type type-name='markup_text_box_widget' inherits-from='widget'>
        <int32_t name='scroll'/>
        <int32_t name='num_visible'/>
        <bool name='scrolling'/>
        <compound type-name='scrollbarst' name='scrollbar'/>
        <pointer type-name='markup_text_boxst' name='box'/>
    </class-type>

    <enum-type type-name='burrow_unit_selector_filter_type' base-type='uint8_t'> bay12: BurrowUnitSelectorFilter
        <enum-item name='ALL'/>
        <enum-item name='MILITARY'/>
        <enum-item name='CIVILIAN'/>
    </enum-type>

    <class-type type-name='unit_selector_interfacest' inherits-from='widget_container'>
        <enum name='context' type-name='unit_selector_context_type'/>
        <int32_t name='bld_id'/>

        <pointer type-name='occupation' name='loc_occupation' comment='occupationst'/>
        <pointer type-name='historical_entity' name='loc_ent'/>
        <pointer type-name='entity_position' name='loc_position'/>
        <pointer type-name='entity_position_assignment' name='loc_epp'/>

        <int32_t name='burrow_id'/>

        <int32_t name='squad_id'/>
        <int32_t name='squad_position'/>

        <enum type-name='burrow_unit_selector_filter_type' name='burrow_filter'/>

        <int32_t name='scroll_position'/>
        <bool name='scrolling'/>
    </class-type>

    <class-type type-name='creatures_interfacest' inherits-from='widget_container'>
        <enum name='current_mode' type-name='unit_list_mode_type'/>
        <compound type-name='markup_text_boxst' name='activity_details_text'/>
    </class-type>

    <class-type type-name='labor_work_details_interfacest' inherits-from='widget_container'/>

    <struct-type type-name='labor_kitchen_interface_food_key'>
        <enum name='type' type-name='item_type'/>
        <int16_t name='subtype'/>
        <int16_t name='mat'/>
        <int32_t name='matg'/>
    </struct-type>

    <struct-type type-name='labor_kitchen_interface_food_value'>
        <int32_t name='num'/>
        <int8_t name='canrest'/>
        <stl-string name='name'/>
    </struct-type>

    <struct-type type-name='labor_kitchen_interface_food_entry'>
        <compound type-name='labor_kitchen_interface_food_key' name='first'/>
        <compound type-name='labor_kitchen_interface_food_value' name='second'/>
    </struct-type>

    <struct-type type-name='labor_kitchen_interface_food_sort_entry' inherits-from='sort_entry'/>

    <enum-type type-name='labor_kitchen_interface_type_filter' base-type='int8_t'> bay12: labor_kitchen_interface_type_filter
        <enum-item name='ALL' value='-1'/>
        <enum-item name='PLANTS'/>
        <enum-item name='SEEDS'/>
        <enum-item name='DRINKS'/>
        <enum-item name='OTHER'/>
    </enum-type>

    <class-type type-name='labor_kitchen_interfacest' inherits-from='widget_container'>
        <enum type-name='kitchen_pref_category_type' name='current_category'/>
        <stl-unordered-map type-name='labor_kitchen_interface_food_value' name='known' comment='std::unordered_map&lt;labor_kitchen_interface_food_key,labor_kitchen_interface_food_value&gt;'/>
        <stl-vector type-name='labor_kitchen_interface_food_sort_entry' name='sorting_by'/>
        <stl-unordered-map type-name='int8_t' name='ascending_sort' comment='std::unordered_map&lt;std::string,bool&gt;'/>
        <stl-vector name='filter_func'>
            <stl-function comment='std::function&lt;bool(labor_kitchen_interface_food_entry)&gt;'/>
        </stl-vector>
        <stl-string name='filter_str'/>
        <enum type-name='labor_kitchen_interface_type_filter' name='filter_type' init-value='ALL'/>
        <uint8_t name='filter_perm'/>
        <int8_t name='sort_flags'/>
        <int32_t name='cursor_idx'/>
    </class-type>

    <class-type type-name='labor_standing_orders_interfacest' inherits-from='widget'>
        <enum type-name='standing_orders_category_type' name='current_category'/>
        <stl-vector pointer-type='unit' name='unit'/>
        <stl-vector type-name='int32_t' name='labor_list'/>
        <int32_t name='scroll_position_labor_list'/>
        <bool name='scrolling_labor_list'/>
        <int32_t name='scroll_position_units'/>
        <bool name='scrolling_units'/>
    </class-type>

    <class-type type-name='labor_stone_use_interfacest' inherits-from='widget'>
        <enum name='current_category' type-name='stone_use_category_type'/>

        <static-array count='2' index-enum='stone_use_category_type' name='stone_mg_index'><stl-vector type-name='int32_t'/></static-array>
        <static-array count='2' index-enum='stone_use_category_type' name='stone_restriction_p'><stl-vector pointer-type='int8_t'/></static-array>

        <stl-vector pointer-type='stl-string' name='stone_item_use_str'/>

        <static-array count='2' index-enum='stone_use_category_type' type-name='int32_t' name='scroll_position'/>
        <static-array count='2' index-enum='stone_use_category_type' type-name='bool' name='scrolling'/>
    </class-type>

    <class-type type-name='labor_interfacest' inherits-from='widget_container'>
        <stl-shared-ptr type-name='labor_work_details_interfacest' name='work_details'/>
        <stl-shared-ptr type-name='labor_standing_orders_interfacest' name='standing_orders'/>
        <stl-shared-ptr type-name='labor_kitchen_interfacest' name='kitchen'/>
        <stl-shared-ptr type-name='labor_stone_use_interfacest' name='stone_use'/>
    </class-type>

    <bitfield-type type-name='justice_screen_interrogation_list_flag' base-type='uint32_t'> bay12: JUSTICE_SCREEN_INTERROGATION_LIST_FLAG_*
        <flag-bit name='SCHEDULED_FOR_INTERVIEW'/>
        <flag-bit name='ALREADY_INTERVIEWED'/>
    </bitfield-type>

    <class-type type-name='justice_interfacest' inherits-from='widget_container'>
        <enum name='current_mode' type-name='justice_interface_mode_type'/>

        <int32_t name='cage_chain_needed'/>
        <int32_t name='cage_chain_count'/>

        <stl-vector pointer-type='cri_unitst' name='cri_fortress_guard'/>
        <int32_t name='scroll_position_fortress_guard'/>
        <bool name='scrolling_fortress_guard'/>
        <bool name='sorting_guard_nameprof'/>
        <bool name='sorting_guard_nameprof_is_ascending'/>
        <bool name='sorting_guard_nameprof_doing_name'/>
        <bool name='sorting_guard_nameprof_doing_prof'/>

        <stl-set pointer-type='unit' name='convicts'/>
        <pointer type-name='unit' name='selected_convict'/>

        <stl-vector pointer-type='crime' name='convict_crime'/>
        <pointer name='convict_lawaction' type-name='punishment'/>

        <bool name='convicting'/>

        <bool name='interrogating'/>
        <stl-vector type-name='uint32_t' name='interrogation_list_flag'/>

        <compound name='interrogation_report_box' type-name='curses_text_boxst'/>
        <int32_t name='interrogation_report_box_width'/>
        <stl-vector name='interrogation_report' type-name='interrogation_report'/>
        <pointer name='viewing_interrogation_report' type-name='interrogation_report'/>
        <int32_t name='scroll_position_interrogation_list'/>
        <bool name='scrolling_interrogation_list'/>
        <int32_t name='scroll_position_interrogation_report'/>
        <bool name='scrolling_interrogation_report'/>

        <stl-vector pointer-type='actor_entryst' name='base_actor_entry'/>
        <stl-vector pointer-type='organization_entryst' name='base_organization_entry'/>
        <stl-vector pointer-type='plot_entryst' name='base_plot_entry'/>

        <enum name='counterintelligence_mode' type-name='counterintelligence_mode_type'/>
        <int32_t name='counterintelligence_selected'/>
        <stl-string name='counterintelligence_filter_str'/>
        <bool name='entering_counterintelligence_filter'/>
        <pointer name='selected_counterintelligence_oen' type-name='organization_entry_nodest'/>
        <int32_t name='scroll_position_counterintelligence'/>
        <bool name='scrolling_counterintelligence'/>

        <stl-vector pointer-type='actor_entryst' name='value_actor_entry'/>
        <stl-vector pointer-type='organization_entryst' name='value_organization_entry'/>
        <stl-vector pointer-type='plot_entryst' name='value_plot_entry'/>

        <stl-vector pointer-type='actor_entryst' name='actor_entry'/>
        <stl-vector pointer-type='organization_entryst' name='organization_entry'/>
        <stl-vector pointer-type='plot_entryst' name='plot_entry'/>

        <stl-unordered-map type-name='int32_t' name='crimevals' comment='std::unordered_map&lt;unitst *,int32_t&gt;'/>
        <stl-unordered-map type-name='justice_screen_interrogation_list_flag' name='crimeflag' comment='std::unordered_map&lt;unitst *,int32_t&gt;'/>
        <stl-unordered-map type-name='int32_t' name='guardvals' comment='std::unordered_map&lt;unitst *,int32_t&gt;'/>

        <bool name='do_init'/>
    </class-type>

    <class-type type-name='info_interfacest' inherits-from='widget_tabs'>
        <bool name='open'/>

        <enum name='current_mode' type-name='info_interface_mode_type'/>

        <compound name='creatures' type-name='creatures_interfacest'/>

        <compound name='jobs'> bay12: jobs_interfacest
            <stl-vector pointer-type='cri_unitst' name='cri_job'/>
            <bool name='scrolling_cri_job'/>
            <int32_t name='scroll_position_cri_job'/>
        </compound>

        <compound name='buildings'> bay12: buildings_interfacest
            <enum name='mode' type-name='buildings_mode_type'/>
            <static-array count='5' index-enum='buildings_mode_type' name='list'><stl-vector pointer-type='building'/></static-array>
            <static-array count='5' index-enum='buildings_mode_type' name='scrolling_position' type-name='int32_t'/>
            <static-array count='5' index-enum='buildings_mode_type' name='scrolling' type-name='bool'/>
        </compound>

        <compound type-name='labor_interfacest' name='labor'/>

        <compound name='work_orders'> bay12: work_orders_interfacest
            <int32_t name='scroll_position_work_orders'/>
            <bool name='scrolling_work_orders'/>

            <compound name='conditions'> bay12: work_orders_conditions_interfacest
                <bool name='open'/>

                <pointer type-name='manager_order' name='wq'/>

                <stl-bit-vector name='item_condition_satisfied'/>
                <stl-bit-vector name='order_condition_satisfied'/>
                <int32_t name='scroll_position_conditions'/>
                <bool name='scrolling_conditions'/>

                <stl-vector name='suggested_item_condition' type-name='manager_order_condition_item'/>
                <int32_t name='scroll_position_suggested'/>
                <bool name='scrolling_suggested'/>

                <stl-string name='filter'/>
                <stl-vector pointer-type='stl-string' name='compare_master'/>
                <int32_t name='change_type'/>
                <pointer name='change_wqc' type-name='manager_order_condition_item'/>
                <int32_t name='scroll_position_change'/>
                <int8_t name='scrolling_change'/>

                <stl-vector type-name='item_type' name='item_type_master'/>
                <stl-vector type-name='int16_t' name='item_subtype_master'/>
                <stl-bit-vector name='item_type_on'/>

                <stl-vector type-name='int16_t' name='item_material_master'/>
                <stl-vector type-name='int32_t' name='item_matgloss_master'/>
                <stl-vector type-name='matter_state' name='item_matstate_master'/>
                <stl-bit-vector name='item_material_on'/>

                <stl-vector pointer-type='wqc_item_traitst' name='item_trait_master'/>

                <bool name='selecting_order_condition'/>
                <stl-vector pointer-type='manager_order' name='condition_wq'/>
                <int32_t name='scroll_position_condition_wq'/>
                <bool name='scrolling_condition_wq'/>

                <bool name='entering_logic_number'/>
                <stl-string name='logic_number_str'/>
                <pointer name='entering_logic_wqc' type-name='manager_order_condition_item'/>
            </compound>

            <bool name='entering_number'/>
            <stl-string name='number_str'/>
            <pointer type-name='manager_order' name='entering_wq'/>

            <bool name='b_entering_number'/>
            <stl-string name='b_number_str'/>
            <pointer type-name='manager_order' name='b_entering_wq'/>
        </compound>

        <compound name='administrators'> bay12: administrators_interfacest
            <stl-vector name='noblelist'>
                <pointer> bay12: noblelistst
                    <pointer type-name='unit' name='un'/>
                    <pointer type-name='nemesis_record' name='nem'/>
                    <pointer name='upplist'> bay12: unitpropertyplacementst
                        <compound name='floor' type-name='coord'/>
                        <compound name='box' type-name='coord'/>
                        <int16_t name='maxfreebox'/>

                        <compound name='cab' type-name='coord'/>
                        <int16_t name='maxfreecab'/>

                        <compound name='rack' type-name='coord'/>
                        <int16_t name='maxfreerack'/>

                        <int8_t name='freestand_armor'/>
                        <int8_t name='freestand_helm'/>
                        <int8_t name='freestand_shoes'/>
                        <int8_t name='freestand_gloves'/>
                        <int8_t name='freestand_pants'/>
                        <int8_t name='freestand_shield'/>
                        <compound name='stand_armor' type-name='coord'/>
                        <compound name='stand_helm' type-name='coord'/>
                        <compound name='stand_shoes' type-name='coord'/>
                        <compound name='stand_gloves' type-name='coord'/>
                        <compound name='stand_pants' type-name='coord'/>
                        <compound name='stand_shield' type-name='coord'/>

                        <int32_t name='flooritems'/>

                        <int32_t name='boxcount'/>
                        <int32_t name='cabcount'/>
                        <int32_t name='rackcount'/>
                        <int32_t name='standcount'/>
                    </pointer>
                    <pointer type-name='entity_position' name='ep'/>
                    <pointer type-name='entity_position_assignment' name='epp'/>
                    <int32_t name='enid' ref-target='historical_entity'/>
                    <int32_t name='value'/>
                </pointer>
            </stl-vector>
            <stl-vector pointer-type='entity_position_assignment' name='spec_prof'/>
            <stl-vector type-name='int32_t' name='spec_hfid' ref-target='historical_figure'/>
            <stl-vector type-name='int32_t' name='spec_enid' ref-target='historical_entity'/>
            <int32_t name='scroll_position_noblelist'/>
            <bool name='scrolling_noblelist'/>

            <compound name='desc_hover_text' type-name='curses_text_boxst'/>
            <int32_t name='last_hover_width'/>
            <int32_t name='last_hover_entity_id' ref-target='historical_entity'/>
            <int32_t name='last_hover_ep_id'/>

            <bool name='choosing_candidate'/>
            <int32_t name='candidate_noblelist_ind'/>
            <stl-vector name='candidate'>
                <pointer> bay12: appointment_candidatest
                    <pointer type-name='unit' name='un'/>
                    <int32_t name='value'/>
                </pointer>
            </stl-vector>
            <int32_t name='scroll_position_candidate'/>
            <bool name='scrolling_candidate'/>

            <bool name='assigning_symbol'/>
            <int32_t name='symbol_noblelist_ind'/>
            <stl-vector pointer-type='item' name='cand_symbol'/>
            <stl-vector type-name='int32_t' name='cand_symbol_new_ind'/>
            <stl-vector type-name='int32_t' name='cand_symbol_is_symbol_of_ind'/>
            <stl-vector type-name='int32_t' name='cand_symbol_value'/>
            <int32_t name='scroll_position_symbol'/>
            <bool name='scrolling_symbol'/>
            <int32_t name='handling_symbol_closure_ind'/>
        </compound>

        <compound name='artifacts'> bay12: artifacts_interfacest
            <enum name='mode' type-name='artifacts_mode_type'/>

            <static-array count='4' index-enum='artifacts_mode_type' name='list'><stl-vector pointer-type='artifact_record'/></static-array>
            <static-array count='4' index-enum='artifacts_mode_type' name='scroll_position' type-name='int32_t'/>
            <static-array count='4' index-enum='artifacts_mode_type' name='scrolling' type-name='bool'/>
        </compound>

        <compound type-name='justice_interfacest' name='justice'/>
    </class-type>

    <struct-type type-name='announcements_interfacest'>
        <compound type-name='widget_stack' name='stack'/>
    </struct-type>

    <struct-type type-name='adventure_interface_announcementsst'>
        <bool name='open'/>
        <stl-vector name='adv_announcement' pointer-type='adv_announcementst'/>
        <bool name='scrolling'/>
        <int32_t name='scroll_position'/>
    </struct-type>

    <enum-type type-name='adventure_interface_options_list_context_type' base-type='int32_t'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='GROUND'/>
        <enum-item name='HOLD'/>
        <enum-item name='MOVE'/>
        <enum-item name='DIRECT_CLICK'/>
        <enum-item name='AIM_PROJECTILE'/>
    </enum-type>

    <struct-type type-name='adventure_interface_option_listst'>
        <bool name='open'/>
        <enum name='context' type-name='adventure_interface_options_list_context_type'/>
        <compound name='pos' type-name='coord'/>
        <int32_t name='context_tmx'/>
        <int32_t name='context_tmy'/>
        <stl-vector name='option' pointer-type='adventure_optionst'/>
        <bool name='scrolling'/>
        <int32_t name='scroll_position'/>

        <bool name='doing_pickup_amount'/>
        <int32_t name='pickup_amount_index'/>
        <int32_t name='pickup_amount_max'/>
        <int32_t name='number_amount'/>
        <bool name='entering_number'/>
        <stl-string name='number_str'/>
    </struct-type>

    <enum-type type-name='adventure_inventory_option_list_type' base-type='int32_t'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='MAIN'/>
        <enum-item name='DETAILS'/>
        <enum-item name='DROP'/>
        <enum-item name='WEAR'/>
        <enum-item name='REMOVE'/>
        <enum-item name='PUT_IN'/>
        <enum-item name='EAT_DRINK'/>
        <enum-item name='INTERACT'/>
        <enum-item name='THROW' comment='in interact, or from key press'/>
    </enum-type>

    <enum-type type-name='adventure_interface_inventory_context_type' base-type='int32_t'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='MAIN'/>
        <enum-item name='DROP'/>
        <enum-item name='WEAR'/>
        <enum-item name='REMOVE'/>
        <enum-item name='PUT_IN'/>
        <enum-item name='EAT_DRINK'/>
        <enum-item name='INTERACT'/>
        <enum-item name='PUT_IN_DESTINATION'/>
        <enum-item name='INTERACT_LIST'/>
        <enum-item name='ONE_ITEM_FULL_LIST'/>
        <enum-item name='THROW'/>
    </enum-type>

    <struct-type type-name='adventure_interface_inventoryst'>
        <bool name='open'/>
        <enum name='context' type-name='adventure_interface_inventory_context_type'/>
        <pointer name='context_item' type-name='item'/>
        <bool name='started_from_main'/>
        <stl-vector name='option_current' pointer-type='adventure_optionst'/>
        <static-array name='option' index-enum='adventure_inventory_option_list_type' count='9'>
            <stl-vector pointer-type='adventure_optionst'/>
        </static-array>
        <bool name='scrolling'/>
        <int32_t name='scroll_position'/>
    </struct-type>

    <struct-type type-name='projectile_target_list_optionst'>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='hfid' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='adventure_interface_aim_projectilest'>
        <bool name='open'/>
        <compound name='cursor' type-name='coord'/>
        <bool name='shooting'/>
        <pointer name='shooter_it' type-name='item'/>
        <pointer name='ammo_it' type-name='item'/>
        <pointer name='thrown_it' type-name='item'/>
        <stl-vector name='projectile_target_list' pointer-type='projectile_target_list_optionst'/>
    </struct-type>

    <struct-type type-name='adventure_interface_jumpst'>
        <bool name='open'/>
        <compound name='cursor' type-name='coord'/>
    </struct-type>

    <struct-type type-name='adventure_conversation_choice_infost'>
        <pointer name='cc' type-name='talk_choice'/>
        <stl-vector name='key_word' pointer-type='stl-string'/>
        <compound type-name='curses_text_boxst' name='print_string'/>
        <int32_t name='basic_value' comment='original index'/>
        <int32_t name='value'/>
    </struct-type>

    <enum-type type-name='activity_type' base-type='int16_t' comment='bay12: ActivityType'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='TRAINING_SESSION'/>
        <enum-item name='PERSONAL_TRAINING'/>
        <enum-item name='CONFLICT'/>
        <enum-item name='HARASSMENT'/>
        <enum-item name='GUARD'/>
        <enum-item name='CONVERSATION'/>
        <enum-item name='REUNION'/>
        <enum-item name='WORSHIP'/>
        <enum-item name='SOCIALIZE'/>
        <enum-item name='RESEARCH'/>
        <enum-item name='PERFORM_OCCUPATION'/>
        <enum-item name='READ'/>
        <enum-item name='PLAY'/>
        <enum-item name='ENCOUNTER'/>
        <enum-item name='STORE_OBJECT'/>
    </enum-type>

    <struct-type type-name='activityst'>
        <int32_t name='id'/>
        <enum name='type' type-name='activity_type'/>
        <stl-vector name='event' pointer-type='activity_event'/>
        <int32_t name='next_ae_local_id'/>
        <int32_t name='source_army_controller_id'/>
    </struct-type>

    <struct-type type-name='adventure_interface_conversationst'>
        <bool name='open'/>
        <bool name='selecting_conversation'/>
        <stl-vector name='select_option' pointer-type='adventure_optionst'/>
        <bool name='select_scrolling'/>
        <int32_t name='select_scroll_position'/>
        <pointer name='conv_act' type-name='activityst'/>
        <pointer name='conv_actce' type-name='activity_event_conversationst'/>
        <stl-vector name='conv_choice_info' pointer-type='adventure_conversation_choice_infost'/>
        <bool name='entering_conv_string_filter'/>
        <stl-string name='conv_string_filter'/>
        <enum name='conv_tact' type-name='conversation_tact_type'/>
        <bool name='choice_scrolling'/>
        <int32_t name='choice_scroll_position'/>
        <bool name='selecting_tact'/>
        <pointer name='tact_cci' type-name='adventure_conversation_choice_infost'/>
        <stl-vector name='tact_list' type-name='conversation_tact_type'/>
        <bool name='tact_scrolling'/>
        <int32_t name='tact_scroll_position'/>
        <stl-vector name='adv_announcement' pointer-type='adv_announcementst'/>
    </struct-type>

    <enum-type type-name='performance_menu_choice_type' base-type='int32_t'> bay12: PerformanceMenuChoiceType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='TELL_STORY'/>
        <enum-item name='RECITE_POEM'/>
        <enum-item name='PERFORM_MUSIC'/>
        <enum-item name='DANCE'/>
        <enum-item name='STORY_SITES'/>
        <enum-item name='STORY_PEOPLE'/>
        <enum-item name='STORY_ENTITIES'/>
        <enum-item name='STORY_SUBREGIONS'/>
        <enum-item name='STORY_SITE'/>
        <enum-item name='STORY_HF'/>
        <enum-item name='STORY_ENTITY'/>
        <enum-item name='STORY_SUBREGION'/>
        <enum-item name='STORY_EVENT'/>
        <enum-item name='POETRY_FORM'/>
        <enum-item name='POETRY_COMPOSITION'/>
        <enum-item name='MUSIC_FORM'/>
        <enum-item name='MUSIC_COMPOSITION'/>
        <enum-item name='MUSIC_ROLE'/>
        <enum-item name='DANCE_FORM'/>
        <enum-item name='DANCE_COMPOSITION'/>
        <enum-item name='GIVE_SERMON'/>
        <enum-item name='SERMON_HFIDS'/>
        <enum-item name='SERMON_SPHERES'/>
        <enum-item name='SERMON_PROMOTE_VALUES'/>
        <enum-item name='SERMON_REFUSE_VALUES'/>
        <enum-item name='SERMON_HFID'/>
        <enum-item name='SERMON_SPHERE'/>
        <enum-item name='SERMON_PROMOTE_VALUE'/>
        <enum-item name='SERMON_REFUSE_VALUE'/>
    </enum-type>

    <struct-type type-name='performance_menu_choicest'>
        <enum name='type' type-name='performance_menu_choice_type'/>
        <stl-string name='print_name'/>
        <stl-string name='list_name'/>
        <stl-string name='simple_filter_name'/>
        <int32_t name='id'/>
        <pointer name='iden' type-name='identity'/>
    </struct-type>

    <enum-type type-name='performance_menu_mode_type' base-type='int32_t'> bay12: PerformanceMenuModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='START'/>
        <enum-item name='STORY_TYPES'/>
        <enum-item name='STORY_SITES'/>
        <enum-item name='STORY_PEOPLE'/>
        <enum-item name='STORY_ENTITIES'/>
        <enum-item name='STORY_SUBREGIONS'/>
        <enum-item name='STORY_EVENTS'/>
        <enum-item name='POETRY_FORMS_PIECES'/>
        <enum-item name='MUSIC_FORMS_PIECES'/>
        <enum-item name='MUSIC_ROLES'/>
        <enum-item name='DANCE_FORMS_PIECES'/>
        <enum-item name='SERMON_TYPES'/>
        <enum-item name='SERMON_HFID'/>
        <enum-item name='SERMON_SPHERE'/>
        <enum-item name='SERMON_PROMOTE_VALUE'/>
        <enum-item name='SERMON_REFUSE_VALUE'/>
    </enum-type>

    <struct-type type-name='adventure_interface_performst'>
        <bool name='open'/>
        <enum name='mode' type-name='performance_menu_mode_type'/>
        <stl-vector name='base_choice' pointer-type='performance_menu_choicest'/>
        <stl-vector name='choice' pointer-type='performance_menu_choicest'/>
        <int32_t name='scroll_position_choice'/>
        <bool name='scrolling_choice'/>
        <stl-string name='filter_str'/>
        <bool name='entering_filter'/>
        <enum name='relevant_choice' type-name='performance_menu_choice_type'/>
        <int32_t name='relevant_id'/>
        <compound name='color_box' type-name='color_text_boxst'/>
        <int32_t name='scroll_position_text'/>
        <bool name='scrolling_text'/>
        <int32_t name='color_box_choice_index'/>
    </struct-type>

    <struct-type type-name='adventure_interface_companionsst'>
        <bool name='open'/>
        <stl-vector name='companion_party_nem' pointer-type='nemesis_record' comment='only for party members'/>
        <stl-vector name='companion' pointer-type='unit' comment='can be NULL'/>
        <stl-bit-vector name='companion_visible'/>
        <stl-vector name='companion_x' type-name='int16_t'/>
        <stl-vector name='companion_y' type-name='int16_t'/>
        <stl-vector name='companion_z' type-name='int16_t'/>
        <int32_t name='scroll_position'/>
        <bool name='scrolling'/>
    </struct-type>

    <enum-type type-name='attack_move_choice_type' base-type='int32_t'> bay12: AttackMoveChoiceType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='STRIKE'/>
        <enum-item name='WRESTLE'/>
        <enum-item name='PARRY'/>
        <enum-item name='BLOCK'/>
        <enum-item name='DODGE_AWAY'/>
    </enum-type>

    <enum-type type-name='adventure_interface_attack_mode_type' base-type='int32_t'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='UNIT_CHOICE'/>
        <enum-item name='CONFIRM'/>
        <enum-item name='MOVE_CHOICE'/>
        <enum-item name='AIM_TARGET'/>
        <enum-item name='AIM_ATTACK'/>
        <enum-item name='PARRY_CHOICE'/>
        <enum-item name='BLOCK_CHOICE'/>
        <enum-item name='DODGE_CHOICE'/>
        <enum-item name='WRESTLE_GRASP'/>
        <enum-item name='WRESTLE_MOVE'/>
    </enum-type>

    <struct-type type-name='special_combatst'>
        <stl-vector name='parry_wld' pointer-type='item'/>
        <stl-vector name='parry_move' pointer-type='unit_action'/>
        <stl-vector name='block_wld' pointer-type='item'/>
        <stl-vector name='block_move' pointer-type='unit_action'/>
        <bool name='can_jump_dodge'/>
        <compound name='jumpsquare' type-name='coord2d_path'/>
    </struct-type>

    <bitfield-type type-name='attack_chance_modifier_flag' base-type='uint32_t'> bay12: ATTACK_CHANCE_MODIFIER_FLAG_*
        <flag-bit name='HEAD'/>
        <flag-bit name='BODY'/>
        <flag-bit name='LIMB'/>
        <flag-bit name='PRIORITY_WIELD'/>
        <flag-bit name='MAIN_ATTACK' comment='used for edged attacks on weapons too'/>
        <flag-bit name='ADJUSTED_UP_LOTS'/>
        <flag-bit name='ADJUSTED_UP'/>
        <flag-bit name='ADJUSTED_DOWN'/>
        <flag-bit name='ADJUSTED_DOWN_LOTS'/>
        <flag-bit name='RING_OF_SAVINGS'/>
        <flag-bit name='GRASP'/>
        <flag-bit name='STANCE'/>
        <flag-bit name='ARMOR_3'/>
        <flag-bit name='ARMOR_2'/>
        <flag-bit name='ARMOR_1'/>
        <flag-bit name='SMALL_AIM_MINUS'/>
        <flag-bit name='COUNTS_AS_LETHAL'/>
    </bitfield-type>

    <struct-type type-name='attack_chance_modifierst'>
        <pointer name='attack_item' type-name='item'/>
        <int32_t name='attack_index' comment='both natural and item attacks -- natural attacks have attack_item==NULL'/>
        <int32_t name='target_bp'/>
        <int32_t name='hit_chance_adjustment'/>
        <int32_t name='hit_squareness_adjustment'/>
        <bitfield name='flag' type-name='attack_chance_modifier_flag'/>
    </struct-type>

    <struct-type type-name='adventure_custom_combatst'>
        <stl-vector name='aim_mod' pointer-type='attack_chance_modifierst'/>
    </struct-type>

    <struct-type type-name='unit_wrestlest'>
        <int32_t name='opp_id'/>
        <int32_t name='bp'/>
        <int32_t name='oppbp'/>
        <int32_t name='subbp'/>
        <int32_t name='oppsubbp'/>
        <int32_t name='item_id' ref-target='item'/>
        <int32_t name='oppitem_id' ref-target='item'/>
        <enum name='state' type-name='wrestle_state_type'/>
        <int8_t name='advantage'/>
        <int32_t name='opp_active_wound_id'/>
    </struct-type>

    <enum-type type-name='inv_item_role_type' base-type='int16_t'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='HAULED'/>
        <enum-item name='GRASP'/>
        <enum-item name='WORN_STANDARD'/>
        <enum-item name='WORN_PIERCED'/>
        <enum-item name='WORN_STUFFED'/>
        <enum-item name='WORN_WRAPPED'/>
        <enum-item name='STUCKIN'/>
        <enum-item name='LATCH'/>
        <enum-item name='PET'/>
        <enum-item name='SEWN_IN'/>
        <enum-item name='WORN_STRAPPED'/>
    </enum-type>

    <struct-type type-name='invitemst'>
        <pointer name='it' type-name='item'/>
        <enum name='role' type-name='inv_item_role_type'/>
        <int16_t name='bp'/>
        <int32_t name='seed'/>
        <int32_t name='wound_id'/>
    </struct-type>

    <struct-type type-name='combat_listst'>
        <pointer name='target' type-name='unit'/>
        <int8_t name='strike'/>
        <int8_t name='wrestle'/>
        <stl-vector name='a_item_list' pointer-type='item'/>
        <stl-vector name='a_bp_list' type-name='int16_t'/>
        <stl-vector name='d_item_list' pointer-type='item'/>
        <stl-vector name='d_bp_list' type-name='int16_t'/>
        <stl-vector name='a_wrestle' pointer-type='unit_wrestlest'/>
        <stl-vector name='d_wrestle' pointer-type='unit_wrestlest'/>
        <stl-vector name='a_invitem' pointer-type='invitemst'/>
        <stl-vector name='d_invitem' pointer-type='invitemst'/>
        <stl-vector name='grapple_attack_a_bp' type-name='int16_t'/>
        <stl-vector name='grapple_attack_a_item' type-name='int16_t'/>
        <stl-vector name='grapple_attack_d_bp' type-name='int16_t'/>
        <stl-vector name='grapple_attack_d_item' type-name='int16_t'/>
        <stl-vector name='wrestle_attack_ind' type-name='int16_t'/>
        <stl-vector name='wrestle_attack_type' type-name='int16_t'/>
        <stl-vector name='wrestle_attack_bp' type-name='int16_t'/>
    </struct-type>

    <struct-type type-name='adventure_interface_attackst'>
        <bool name='open'/>
        <enum name='mode' type-name='adventure_interface_attack_mode_type'/>
        <bool name='always_do_something'/>
        <stl-vector name='unit_choice' pointer-type='unit'/>
        <int32_t name='scroll_position_unit_choice'/>
        <bool name='scrolling_unit_choice'/>
        <pointer name='confirm_unit' type-name='unit'/>
        <pointer name='attack_unit' type-name='unit'/>
        <compound name='special_combat' type-name='special_combatst'/>
        <stl-vector name='move_choice' type-name='attack_move_choice_type'/>
        <int32_t name='scroll_position_move_choice'/>
        <bool name='scrolling_move_choice'/>
        <int32_t name='scroll_position_aim_target'/>
        <bool name='scrolling_aim_target'/>
        <compound name='custom_combat' type-name='adventure_custom_combatst'/>
        <uint32_t name='aim_attack_flag'/>
        <int32_t name='aim_attack_charge_restrict'/>
        <int32_t name='scroll_position_aim_attack'/>
        <bool name='scrolling_aim_attack'/>
        <stl-vector name='wrestle' pointer-type='unit_wrestlest'/>
        <int32_t name='scroll_position_wrestle'/>
        <bool name='scrolling_wrestle'/>
        <int32_t name='selected_bp'/>
        <int32_t name='selected_item_id' ref-target='item'/>
        <stl-vector name='cl_type' type-name='int32_t' comment='bay12 type: DungeonWrestle'/>
        <stl-vector name='cl_index' type-name='int32_t'/>
        <compound name='combat_list' type-name='combat_listst'/>
        <int32_t name='scroll_position_cl'/>
        <bool name='scrolling_cl'/>
        <int32_t name='old_scroll_position_cl'/>
    </struct-type>

    <struct-type type-name='adventure_interface_movement_optionsst'>
        <bool name='open'/>
        <int32_t name='scroll_gait'/>
        <bool name='scrolling_gait'/>
        <pointer name='speed_sneak_un' type-name='unit'/>
        <enum name='gait' type-name='gait_type'/>
    </struct-type>

    <struct-type type-name='adventure_interface_travelst'>
        <int32_t name='hover_text_ax'/>
        <int32_t name='hover_text_ay'/>
        <compound type-name='markup_text_boxst' name='hover_text'/>
    </struct-type>

    <struct-type type-name='adventure_interface_combat_prefst'>
        <bool name='open'/>
    </struct-type>

    <struct-type type-name='adventure_interface_sleepst'>
        <bool name='open'/>
        <bool name='no_sky'/>
        <pointer name='dungeon_screen' type-name='viewscreen_dungeonmodest'/>
    </struct-type>

    <struct-type type-name='adventure_interface_barterst'>
        <bool name='open'/>

        <pointer name='merchant' type-name='unit'/>
        <pointer name='your_trader' type-name='unit'/>
        <pointer name='zone' type-name='building_civzonest'/>
        <pointer name='conv' type-name='activity_event_conversationst'/>
        <bool name='personal'/>
        <bool name='demand_only'/>
        <bool name='strong_affiliation_bonus'/>

        <static-array name='good' count='2'><stl-vector pointer-type='item'/></static-array>
        <static-array name='goodflag' count='2'><stl-vector type-name='uint8_t'/></static-array>
        <static-array name='good_amount' count='2'><stl-vector type-name='int32_t'/></static-array>
        <stl-vector name='your_currency' pointer-type='item'/>
        <stl-vector name='merchant_currency' pointer-type='item'/>

        <static-array name='i_height' count='2'><int32_t/></static-array>

        <static-array name='master_type_a_type' count='2'><stl-vector type-name='int32_t'/></static-array>
        <static-array name='master_type_a_subtype' count='2'><stl-vector type-name='int32_t'/></static-array>
        <static-array name='master_type_a_expanded' count='2'><stl-bit-vector/></static-array>

        <static-array name='current_type_a_type' count='2'><stl-vector type-name='int32_t'/></static-array>
        <static-array name='current_type_a_subtype' count='2'><stl-vector type-name='int32_t'/></static-array>
        <static-array name='current_type_a_expanded' count='2'><stl-bit-vector/></static-array>
        <static-array name='current_type_a_on' count='2'><stl-bit-vector/></static-array>
        <static-array name='current_type_a_flag' count='2'><stl-vector type-name='uint32_t'/></static-array>

        <static-array name='scroll_position_item' count='2'><int32_t/></static-array>
        <static-array name='scrolling_item' count='2'><bool/></static-array>
        <static-array name='item_filter' count='2'><stl-string/></static-array>
        <static-array name='entering_item_filter' count='2'><bool/></static-array>

        <int16_t name='talkline' comment='trade reply'/>
        <int8_t name='buildlists'/>

        <static-array name='max_currency' count='2'><int32_t/></static-array>
        <static-array name='currency_trade' count='2'><int32_t/></static-array>

        <int8_t name='entering_amount'/>
        <int8_t name='entering_ask_currency'/>
        <int8_t name='entering_offer_currency'/>
        <stl-string name='amount_str'/>
        <int32_t name='amount_side'/>
        <int32_t name='amount_index'/>

        <compound type-name='curses_text_boxst' name='big_announce'/>
        <int32_t name='scroll_position_big_announce'/>
        <bool name='scrolling_big_announce'/>
    </struct-type>

    <enum-type type-name='adventure_interface_abilities_context_type' base-type='int16_t'> bay12: AdventureInterfaceAbilitiesContext
        <enum-item name='NONE' value='-1'/>
        <enum-item name='NORMAL'/>
    </enum-type>

    <struct-type type-name='adventure_interface_abilitiesst'>
        <bool name='open'/>
        <enum name='context' type-name='adventure_interface_abilities_context_type'/>

        <bool name='targeting'/>
        <compound name='cursor' type-name='coord'/>
        <bool name='have_target_list'/>
        <bool name='target_scrolling'/>
        <int32_t name='target_scroll_position'/>
        <bool name='ctarget_scrolling'/>
        <int32_t name='ctarget_scroll_position'/>

        <stl-vector name='body_action' pointer-type='body_actionst'/>
        <stl-vector name='body_action_use_flag' type-name='uint32_t'/>
        <stl-vector name='body_action_interaction' type-name='int32_t'/>

        <stl-vector name='interaction_cdi' pointer-type='creature_interaction_effect_can_do_interactionst'/>
        <stl-vector name='interaction_cdi_use_flag' type-name='uint32_t'/>
        <stl-vector name='interaction_cdi_mat_effect_index' type-name='int32_t'/>

        <bool name='scrolling'/>
        +<int32_t name='scroll_position'/>
    </struct-type>

    <struct-type type-name='main_interface' original-name='main_interfacest'>
        <compound name='designation' since='v0.40.20'> bay12: designation_interfacest
            <bool name='marker_only'/>
            <bool name='show_priorities' comment='set to one if using +/-'/>
            <int32_t name='priority' init-value='4000' comment='*1000'/>
            <enum type-name='mine_mode_type' name='mine_mode'/>
            <bool name='show_advanced_options'/>
            <bool name='entering_traffic_high_str'/>
            <bool name='entering_traffic_normal_str'/>
            <bool name='entering_traffic_low_str'/>
            <bool name='entering_traffic_restricted_str'/>
            <stl-string name='traffic_high_str'/>
            <stl-string name='traffic_normal_str'/>
            <stl-string name='traffic_low_str'/>
            <stl-string name='traffic_restricted_str'/>
            <bool name='sliding_traffic_high'/>
            <bool name='sliding_traffic_normal'/>
            <bool name='sliding_traffic_low'/>
            <bool name='sliding_traffic_restricted'/>
        </compound>

        <compound name='building'> bay12: building_interfacest
            <stl-vector name='button' pointer-type='interface_button'/>
            <stl-vector name='press_button' pointer-type='interface_button'/>
            <stl-vector name='filtered_button' pointer-type='interface_button'/>

            <int32_t name='selected'/>
            <enum name='category' type-name='interface_category_building'/>

            <int16_t name='material' ref-target='material' aux-value='$$.mat_index'/>
            <int32_t name='matgloss'/>
            <bitfield name='job_item_flag' type-name='job_material_category'/>

            <stl-string name='current_custom_category_token' since='v0.42.01'/>
            <compound name='current_tool_tip' type-name='curses_text_boxst'/>
        </compound>

        <compound name='construction'> bay12: construction_interfacest
            <stl-vector name='button' pointer-type='interface_button'/>
            <stl-vector name='press_button' pointer-type='interface_button'/>

            <enum name='category' type-name='interface_category_construction'/>
            <int32_t name='selected'/>

            <stl-vector pointer-type='construction_interface_pagest' name='page'/>
            <int32_t name='max_height'/>
            <int32_t name='total_width'/>
            <bool name='must_update_buttons'/>
            <int32_t name='bb_placement_type'/>
            <int32_t name='bb_placement_subtype'/>
            <int32_t name='bb_placement_custom_building_id'/>
            <stl-string name='item_filter'/>
            <bool name='entering_item_filter'/>
            <bool name='scrolling_item'/>
            <int32_t name='scroll_position_item'/>
        </compound>

        <compound name='civzone'> bay12: civzone_interfacest
            <bool name='remove'/>
            <enum name='flow_shape' type-name='room_flow_shape_type'/>
            <bool name='doing_rectangle'/>
            <bool name='doing_multizone'/>
            <bool name='last_doing_multizone'/>
            <bool name='box_on_left'/>
            <bool name='erasing'/>
            <enum name='adding_new_type' type-name='civzone_type'/>
            <pointer name='cur_bld' type-name='building_civzonest'/>
            <stl-vector name='list' pointer-type='building_civzonest'/>
            <stl-vector name='zone_just_created' pointer-type='building_civzonest'/>
            <int32_t name='furniture_rejected_in_use'/>
            <int32_t name='furniture_rejected_not_enclosed'/>
            <bool name='repainting'/>
        </compound>

        <compound name='burrow'> bay12: burrow_interfacest
            <pointer name='painting_burrow' type-name='burrow'/>
            <bool name='doing_rectangle'/>
            <bool name='erasing'/>
            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>
            <bool name='entering_name'/>
            <int32_t name='entering_name_index'/>
        </compound>

        <compound name='view'> bay12: viewunit_interfacest
            <stl-vector name='inv' pointer-type='unit_inventory_item'/>
            <stl-vector name='contam' pointer-type='unit_spatter'/>
            <compound name='guest_text' type-name='curses_text_boxst' since='v0.42.01'/>

            <bool name='uniform_selection' since='v0.34.08'/>
            <int32_t name='selected_uniform' since='v0.34.08'/>
            <int32_t name='selected_squad' since='v0.34.08'/>

            <stl-vector name='squad_list_sq' since='v0.34.08' pointer-type='squad'/>
            <stl-vector name='squad_list_ep' since='v0.34.08' pointer-type='entity_position'/>
            <stl-vector name='squad_list_epp' since='v0.34.08' pointer-type='entity_position_assignment'/>
            <stl-bit-vector name='squad_list_has_subord_pos' since='v0.34.08'/>
            <stl-vector name='squad_list_add_index' type-name='int32_t' since='v0.34.08'/>

            <pointer name='create_ep' type-name='entity_position'/>
            <pointer name='create_epp' type-name='entity_position_assignment'/>
            <pointer name='create_sub_ep' type-name='entity_position'/>
            <bool name='can_remove_from_squad'/>
            <bool name='stuck_commander'/>
            <bool name='have_calced_info'/>
            <bool name='naming_squad'/>
            <pointer type-name='squad' name='name_squad'/>
            <stl-vector name='expel_total_list' pointer-type='unit'/>
            <stl-vector name='expel_outskirt_list' pointer-type='world_site' since='v0.44.11'/>
            <int32_t name='expel_outskirt_list_selected' since='v0.44.11'/>
            <int8_t name='expel_selecting_destination' since='v0.44.11'/>
            <enum name='expel_cannot_expel_reason' type-name='cannot_expel_reason_type' since='v0.44.11'/>
        </compound>

        <compound name='hospital' since='v0.44.11'> bay12: hospital_interfacest
            <int32_t name='cur_scroll'/>
            <int32_t name='bed_count'/>
            <int32_t name='table_count'/>
            <int32_t name='traction_bench_count'/>
            <int32_t name='box_count'/>
        </compound>

        <compound name='location_list'> bay12: location_list_interfacest
            <stl-vector name='valid_ab' pointer-type='abstract_building' since='v0.42.01'/>
            <int32_t name='selected_ab' since='v0.42.01'/>

            <stl-vector name='valid_religious_practice' type-name='religious_practice_type'/>
            <stl-vector name='valid_religious_practice_id' type-name='religious_practice_data'/>
            <int32_t name='selected_religious_practice'/>
            <bool name='choosing_location_type'/>
            <bool name='choosing_temple_religious_practice'/>
            <bool name='choosing_craft_guild'/>
            <stl-vector name='valid_craft_guild_type' type-name='profession' since='v0.47.01'/>
            <int32_t name='selected_craft_guild'/>
        </compound>

        <compound name='job_details' since='v0.42.06'> bay12: job_details_interfacest
            <bool name='open'/>
            <enum name='context' type-name='job_details_context_type'/>
            <pointer name='jb' type-name='job'/>
            <pointer name='wq' type-name='manager_order'/>
            <enum name='current_option' type-name='job_details_option_type'/>
            <int32_t name='current_option_index'/>

            <stl-vector name='option' type-name='job_details_option_type'/>
            <stl-vector name='option_index' type-name='int32_t'/>
            <int32_t name='scroll_position_option'/>
            <bool name='scrolling_option'/>
            <compound name='search' type-name='coord'/>
            <pointer name='bld' type-name='building'/>

            <stl-vector name='material' type-name='int16_t'/>
            <stl-vector name='matgloss' type-name='int32_t'/>
            <stl-vector name='material_count' type-name='int32_t'/>
            <stl-vector name='material_master' type-name='int16_t'/>
            <stl-vector name='matgloss_master' type-name='int32_t'/>
            <stl-vector name='material_count_master' type-name='int32_t'/>
            <int32_t name='scroll_position_material'/>
            <bool name='scrolling_material'/>
            <stl-string name='material_filter'/>
            <bool name='material_doing_filter'/>

            <stl-vector name='clothing_size_race_index' type-name='int32_t' comment='race id'/>
            <stl-vector name='clothing_size_race_index_master' type-name='int32_t' comment='race id'/>
            <int32_t name='scroll_position_race'/>
            <bool name='scrolling_race'/>
            <stl-string name='clothing_size_race_filter'/>
            <bool name='clothing_size_race_doing_filter'/>

            <stl-vector name='improvement_type' type-name='improvement_type'/>
            <int32_t name='scroll_position_improvement'/>
            <bool name='scrolling_improvement'/>
        </compound>

        <compound name='buildjob'> bay12: buildjob_interfacest
            <pointer name='display_furniture_bld' type-name='building_display_furniturest' since='v0.44.01'/>
            <int32_t name='display_furniture_selected_item' since='v0.44.01'/>
        </compound>

        <compound name='assign_trade'> bay12: assign_trade_interfacest
            <bool name='open'/>
            <pointer type-name='building_tradedepotst' name='trade_depot_bld'/>
            <stl-vector type-name='int16_t' name='type_list'/>
            <stl-vector type-name='int16_t' name='filtered_type_list'/>
            <enum type-name='item_type' name='current_type'/>
            <int32_t name='scroll_position_type'/>
            <int32_t name='scroll_position_item'/>
            <bool name='scrolling_type'/>
            <bool name='scrolling_item'/>
            <stl-string name='item_filter'/>
            <bool name='entering_item_filter'/>
            <stl-vector type-name='int32_t' name='storeamount'/>
            <stl-vector type-name='int32_t' name='badamount'/>
            <compound name='master_i_list' type-name='assign_trade_itemlistst'/>
            <compound name='master_a_list' type-name='abstractitemlistst'/>

            <int32_t name='i_height'/>
            <stl-vector name='current_type_tgi' pointer-type='tradegoodslistst'/>
            <stl-vector type-name='int32_t' name='current_type_a_subtype'/>
            <stl-vector type-name='int32_t' name='current_type_a_subcat1'/>
            <stl-vector type-name='int32_t' name='current_type_a_subcat2'/>
            <stl-vector type-name='int32_t' name='current_type_a_amount'/>
            <stl-bit-vector name='current_type_a_expanded'/>
            <stl-bit-vector name='current_type_a_on'/>
            <stl-vector type-name='uint32_t' name='current_type_a_flag'/>
            <bool name='sort_by_distance'/>
            <bool name='pending_on_top'/>
            <bool name='exclude_prohib'/>
        </compound>

        <compound name='trade'> bay12: trade_interfacest
            <bool name='open'/>

            <bool name='choosing_merchant'/>
            <stl-vector pointer-type='caravan_state' name='merlist'/>
            <int32_t name='scroll_position_merlist'/>
            <bool name='scrolling_merlist'/>

            <stl-string name='title'/>
            <stl-string name='talker'/>
            <stl-string name='fortname'/>
            <stl-string name='place'/>
            <pointer type-name='world_site' name='st'/>
            <pointer type-name='building_tradedepotst' name='bld'/>
            <pointer type-name='caravan_state' name='mer'/>
            <pointer type-name='historical_entity' name='civ'/>
            <int8_t name='stillunloading'/>
            <int8_t name='havetalker'/>
            <pointer type-name='unit' name='merchant_trader'/>
            <pointer type-name='unit' name='fortress_trader'/>

            <static-array name='good' count='2'><stl-vector pointer-type='item'/></static-array>
            <static-array name='goodflag' count='2'><stl-vector type-name='uint8_t'/></static-array>
            <static-array name='good_amount' count='2'><stl-vector type-name='int32_t'/></static-array>

            <static-array name='i_height' count='2'><int32_t/></static-array>

            <static-array name='master_type_a_type' count='2'><stl-vector type-name='int32_t'/></static-array>
            <static-array name='master_type_a_subtype' count='2'><stl-vector type-name='int32_t'/></static-array>
            <static-array name='master_type_a_expanded' count='2'><stl-bit-vector/></static-array>

            <static-array name='current_type_a_type' count='2'><stl-vector type-name='int32_t'/></static-array>
            <static-array name='current_type_a_subtype' count='2'><stl-vector type-name='int32_t'/></static-array>
            <static-array name='current_type_a_expanded' count='2'><stl-bit-vector/></static-array>
            <static-array name='current_type_a_on' count='2'><stl-bit-vector/></static-array>
            <static-array name='current_type_a_flag' count='2'><stl-vector type-name='uint32_t'/></static-array>

            <static-array name='scroll_position_item' count='2'><int32_t/></static-array>
            <static-array name='scrolling_item' count='2'><bool/></static-array>
            <static-array name='item_filter' count='2'><stl-string/></static-array>
            <static-array name='entering_item_filter' count='2'><bool/></static-array>

            <int16_t name='talkline' comment='trade reply'/>
            <int8_t name='buildlists'/>
            <int8_t name='handle_appraisal'/>

            <bool name='counter_offer'/>
            <stl-vector pointer-type='item' name='counter_offer_item'/>
            <int32_t name='scroll_position_counter_offer'/>
            <bool name='scrolling_counter_offer'/>

            <int8_t name='entering_amount'/>
            <stl-string name='amount_str'/>

            <compound name='big_announce' type-name='curses_text_boxst'/>
            <int32_t name='scroll_position_big_announce'/>
            <bool name='scrolling_big_announce'/>
        </compound>

        <compound name='diplomacy'> bay12: diplomacy_interfacest
            <bool name='open'/>

            <pointer type-name='dipscript_popup' name='mm'/>
            <pointer type-name='unit' name='actor'/>
            <pointer type-name='unit' name='target'/>

            <int32_t name='actor_unid' ref-target='unit'/>
            <int32_t name='target_unid' ref-target='unit'/>

            <bitfield name='flag' base-type='uint32_t'> bay12: DIPLOMACY_INTERFACE_FLAG_*
                <flag-bit name='in_the_middle_of_stuff'/>
            </bitfield>

            <compound type-name='markup_text_boxst' name='text'/>
            <bool name='selecting_land_holder_position'/>
            <bool name='taking_requests'/>

            <pointer type-name='historical_entity' name='land_holder_parent_civ'/>
            <pointer type-name='historical_entity' name='land_holder_child_civ'/>
            <stl-vector type-name='int32_t' name='land_holder_pos_id'/>
            <stl-vector type-name='int32_t' name='land_holder_assigned_hfid'/>
            <stl-vector type-name='int32_t' name='land_holder_avail_hfid'/>
            <int32_t name='scroll_position_land_holder_pos'/>
            <bool name='scrolling_land_holder_pos'/>
            <int32_t name='scroll_position_land_holder_hf'/>
            <bool name='scrolling_land_holder_hf'/>
            <int32_t name='land_holder_selected_pos'/>

            <stl-vector type-name='int16_t' name='taking_requests_tablist'/>
            <int32_t name='scroll_position_taking_requests_tab'/>
            <bool name='scrolling_taking_requests_tab'/>
            <int32_t name='scroll_position_taking_requests_tab_item'/>
            <bool name='scrolling_taking_requests_tab_item'/>
            <int32_t name='taking_requests_selected_tab'/>

            <int32_t name='scroll_position_text'/>
            <bool name='scrolling_text'/>

            <pointer type-name='meeting_diplomat_info' name='dipev'/>
            <pointer type-name='unit_parley' name='parley'/>
            <compound type-name='script_environmentst' name='environment'/>
        </compound>

        <compound name='petitions'> bay12: petitions_interfacest
            <bool name='open'/>
            <bool name='have_responsible_person'/>

            <stl-vector name='agreement_id' type-name='int32_t' ref-target='agreement'/>
            <int32_t name='selected_agreement_id'/>
            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>
        </compound>

        <compound name='stocks'> bay12: stocks_interfacest
            <bool name='open'/>

            <stl-vector type-name='int16_t' name='type_list'/>
            <stl-vector type-name='int16_t' name='filtered_type_list'/>
            <enum type-name='item_type' name='current_type'/>

            <int32_t name='scroll_position_type'/>
            <int32_t name='scroll_position_item'/>
            <bool name='scrolling_type'/>
            <bool name='scrolling_item'/>
            <stl-string name='item_filter'/>
            <bool name='entering_item_filter'/>

            <stl-vector type-name='int32_t' name='storeamount'/>
            <stl-vector type-name='int32_t' name='badamount'/>
            <compound name='master_i_list' type-name='itemlistst'/>
            <compound name='master_a_list' type-name='abstractitemlistst'/>

            <int32_t name='i_height'/>
            <stl-vector pointer-type='item' name='current_type_i_list'/>

            <stl-vector type-name='int32_t' name='current_type_a_subtype'/>
            <stl-vector type-name='int32_t' name='current_type_a_subcat1'/>
            <stl-vector type-name='int32_t' name='current_type_a_subcat2'/>
            <stl-vector type-name='int32_t' name='current_type_a_amount'/>
            <stl-bit-vector name='current_type_a_expanded'/>
            <stl-bit-vector name='current_type_a_on'/>
            <stl-vector type-name='uint32_t' name='current_type_a_flag'/>
        </compound>

        <compound type-name='announcements_interfacest' name='announcements'/>

        <compound name='assign_display_item'> bay12: assign_display_item_interfacest
            <bool name='open'/>

            <pointer type-name='building_display_furniturest' name='display_bld'/>
            <stl-vector type-name='int32_t' name='new_display_itid'/>

            <stl-vector type-name='int16_t' name='type_list'/>
            <stl-vector type-name='int16_t' name='filtered_type_list'/>
            <enum type-name='item_type' name='current_type'/>

            <int32_t name='scroll_position_type'/>
            <int32_t name='scroll_position_item'/>
            <bool name='scrolling_type'/>
            <bool name='scrolling_item'/>
            <stl-string name='item_filter'/>
            <bool name='entering_item_filter'/>

            <stl-vector type-name='int32_t' name='storeamount'/>
            <stl-vector type-name='int32_t' name='badamount'/>
            <compound name='master_i_list' type-name='itemlistst'/>
            <compound name='master_a_list' type-name='abstractitemlistst'/>

            <int32_t name='i_height'/>
            <stl-vector pointer-type='item' name='current_type_i_list'/>

            <stl-vector type-name='int32_t' name='current_type_a_subtype'/>
            <stl-vector type-name='int32_t' name='current_type_a_subcat1'/>
            <stl-vector type-name='int32_t' name='current_type_a_subcat2'/>
            <stl-vector type-name='int32_t' name='current_type_a_amount'/>
            <stl-bit-vector name='current_type_a_expanded'/>
            <stl-bit-vector name='current_type_a_on'/>
        </compound>

        <compound name='name_creator'> bay12: name_creator_interfacest
            <bool name='open'/>
            <enum name='context' type-name='name_creator_context_type'/>
            <pointer type-name='historical_entity' name='namer'/>
            <pointer type-name='language_name' name='name'/>
            <enum type-name='language_name_type' name='name_type'/>
            <int32_t name='cur_name_place'/>
            <int32_t name='cur_word_place'/>
            <compound type-name='language_word_table' name='word_sel'/>
            <stl-vector type-name='int32_t' name='word_index'/>
            <stl-vector type-name='part_of_speech' name='word_index_asp'/>
            <int32_t name='scroll_position_word'/>
            <bool name='scrolling_word'/>
            <bool name='entering_first_name'/>
            <bool name='entering_cull_str'/>
            <stl-string name='cull_str'/>
            <pointer type-name='item' name='name_item_ptr'/>
            <compound type-name='language_name' name='name_item_name'/>
            <pointer name='adv_naming_act' type-name='activityst'/>
            <pointer type-name='activity_event_conversationst' name='adv_naming_actev'/>
            <pointer type-name='talk_choice' name='adv_naming_cc'/>;
            <enum type-name='conversation_tact_type' name='adv_naming_conv_tact'/>
            <pointer type-name='unit' name='named_unit'/>
            <pointer type-name='historical_entity' name='named_entity'/>
        </compound>

        <compound name='image_creator'> bay12: image_creator_interfacest
            <bool name='open'/>

            <enum name='context' type-name='image_creator_context_type'/>

            <stl-string name='header'/>

            <enum name='current_option' type-name='image_creator_option_type'/>
            <bool name='scrolling_list'/>
            <int32_t name='scroll_position_list'/>
            <bool name='doing_filter'/>
            <stl-string name='filter'/>
            <bool name='entering_number'/>
            <stl-string name='number_str'/>

            <stl-vector type-name='pointer' name='st_master' comment='site ptr, native name, translated name'/>
            <stl-vector type-name='pointer' name='ent_master' comment='entity ptr, native name, translated name'/>
            <stl-vector type-name='pointer' name='plant_master' comment='plant id, name'/>
            <stl-vector type-name='pointer' name='tree_master' comment='plant id, name'/>
            <stl-vector type-name='pointer' name='shape_master' comment='shape id, shape adj, name'/>
            <stl-vector type-name='pointer' name='item_master' comment='item type, item subtype, name'/>
            <stl-vector type-name='pointer' name='artifact_master' comment='artifact ptr, native name, translated name'/>
            <stl-vector type-name='pointer' name='hf_master' comment='histfig ptr, native name, translated name'/>
            <stl-vector type-name='pointer' name='property_master' comment='art property type, bool transitive, name'/>

            <stl-vector pointer-type='historical_figure' name='hf'/>
            <stl-vector pointer-type='world_site' name='st'/>
            <stl-vector pointer-type='historical_entity' name='ent'/>
            <stl-vector pointer-type='history_event' name='hist_event'/>
            <stl-vector pointer-type='art_image' name='art_image'/>

            <compound type-name='art_image' name='new_image'/>
            <stl-vector type-name='int32_t' name='new_image_race'/>
            <stl-vector type-name='int32_t' name='new_image_caste'/>
            <stl-vector pointer-type='historical_figure' name='new_image_hf'/>
            <stl-vector type-name='int32_t' name='new_image_plant'/>
            <stl-vector type-name='int32_t' name='new_image_tree'/>
            <stl-vector type-name='int32_t' name='new_image_shape'/>
            <stl-vector type-name='int32_t' name='new_image_shape_adj'/>
            <stl-vector type-name='int32_t' name='new_image_item'/>
            <stl-vector type-name='int32_t' name='new_image_item_subtype'/>
            <stl-vector pointer-type='artifact_record' name='new_image_artifact'/>
            <stl-vector type-name='int32_t' name='new_image_property'/>
            <stl-bit-vector name='new_image_property_transitive'/>
            <stl-vector type-name='int32_t' name='new_image_property_actor_target'/>
            <int32_t name='new_image_active_property'/>
            <bool name='new_image_active_property_transitive'/>
            <int32_t name='new_image_active_property_actor_ind'/>
            <int32_t name='new_image_active_property_target_ind'/>

            <compound name='art_box' type-name='curses_text_boxst'/>
            <bool name='scrolling_art_box'/>
            <int32_t name='scroll_position_art_box'/>
            <int32_t name='last_art_box_width'/>

            <compound name='selected_box' type-name='curses_text_boxst'/>
            <int32_t name='last_selected_box_width'/>
            <int32_t name='last_selected_index'/>

            <bool name='back_out_warn'/>
            <bool name='image_back_out_warn'/>
            <bool name='must_do_image_back_out_warn'/>

            <compound name='ics'> bay12: image_creation_specifierst
                <pointer type-name='job' name='jb'/>
                <pointer type-name='manager_order' name='wq'/>
                <pointer type-name='location_detailst' name='location_detail'/>
                <pointer type-name='historical_entity' name='image_ent'/>
                <pointer type-name='art_image' name='art_image'/>
                <pointer type-name='adv_art_specifierst' name='adv_art_specifier'/>
                <pointer type-name='historical_figure' name='hf'/>
                <pointer name='exit_flag'>
                    <bitfield base-type='uint32_t'> bay12: ICS_EXIT_FLAG_*
                        <flag-bit name='did_not_specify'/>
                    </bitfield>
                </pointer>
                <bitfield name='flag' base-type='uint32_t'> bay12: ICS_FLAG_*
                    <flag-bit name='do_back_out_warning'/>
                </bitfield>
            </compound>
        </compound>

        <compound type-name='unit_selector_interfacest' name='unit_selector'/>

        <compound name='announcement_alert'> bay12: announcement_alert_interfacest
            <bool name='open'/>

            <pointer type-name='announcement_alertst' name='viewing_alert'/>
            <bool name='viewing_alert_button'/>
            <stl-bit-vector name='zoom_line_is_start'/>
            <stl-vector pointer-type='report' name='zoom_line_ann'/>
            <stl-vector pointer-type='unit' name='zoom_line_unit'/>
            <stl-vector type-name='unit_report_type' name='zoom_line_unit_uac'/>
            <compound name='alert_text' type-name='curses_text_boxst'/>
            <int32_t name='alert_width'/>
            <int32_t name='alert_list_size'/>
            <int32_t name='scroll_position_alert'/>
            <bool name='scrolling_alert'/>

            <pointer type-name='unit' name='viewing_unit'/>
            <enum name='viewing_unit_uac' type-name='unit_report_type'/>
            <stl-bit-vector name='uac_zoom_line_is_start'/>
            <stl-vector pointer-type='report' name='uac_zoom_line_ann'/>
            <compound name='uac_text' type-name='curses_text_boxst'/>
            <int32_t name='uac_width'/>
            <int32_t name='uac_list_size'/>
            <int32_t name='scroll_position_uac'/>
            <bool name='scrolling_uac'/>
        </compound>

        <compound name='custom_symbol'> bay12: custom_symbol_interfacest
            <bool name='open'/>
            <enum name='context' type-name='custom_symbol_context_type'/>
            <int32_t name='burrow_id'/>
            <int32_t name='work_detail_id'/>
            <int32_t name='squad_id'/>
            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>
            <bool name='doing_background_color'/>
            <static-array count='36' name='swatch_r'><static-array type-name='uint8_t' count='10'/></static-array>
            <static-array count='36' name='swatch_g'><static-array type-name='uint8_t' count='10'/></static-array>
            <static-array count='36' name='swatch_b'><static-array type-name='uint8_t' count='10'/></static-array>
        </compound>

        <compound name='patrol_routes'> bay12: patrol_routes_interfacest
            <bool name='open'/>

            <enum name='context' type-name='patrol_routes_context_type'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>

            <bool name='adding_new_route'/>
            <stl-string name='new_route_name'/>
            <bool name='entering_new_route_name'/>
            <compound type-name='coord_path' name='new_point'/>
            <stl-vector pointer-type='coord_path' name='route_line' comment='patrol_route_linest'/>
            <int32_t name='add_is_edit_of_route_id'/>
            <bool name='changed_points_on_edit'/>
        </compound>

        <compound name='squad_equipment'> bay12: squad_equipment_interfacest
            <bool name='open'/>

            <enum name='context' type-name='squad_equipment_context_type'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>

            <stl-vector type-name='int32_t' name='squad_id'/>
            <stl-vector type-name='int32_t' name='squad_pos'/>

            <ulong name='last_tick_update'/>

            <bool name='customizing_equipment'/>
            <int32_t name='customizing_squad_id'/>
            <int32_t name='customizing_squad_pos'/>
            <stl-string name='customizing_squad_uniform_nickname'/>
            <bool name='customizing_squad_entering_uniform_nickname'/>
            <int32_t name='scroll_position_cs'/>
            <bool name='scrolling_cs'/>
            <int32_t name='scroll_position_cssub'/>
            <bool name='scrolling_cssub'/>

            <stl-vector type-name='uniform_category' name='cs_cat'/>
            <stl-vector type-name='int32_t' name='cs_it_spec_item_id'/>
            <stl-vector type-name='int16_t' name='cs_it_type'/>
            <stl-vector type-name='int16_t' name='cs_it_subtype'/>
            <stl-vector type-name='entity_material_category' name='cs_civ_mat'/>
            <stl-vector type-name='int16_t' name='cs_spec_mat'/>
            <stl-vector type-name='int32_t' name='cs_spec_matg'/>
            <stl-vector type-name='int32_t' name='cs_color_pattern_index' comment='ColoredPattern'/>
            <stl-vector type-name='int32_t' name='cs_icp_flag'/>
            <stl-vector type-name='int32_t' name='cs_assigned_item_number'/>
            <stl-vector type-name='int32_t' name='cs_assigned_item_id'/>
            <uint32_t name='cs_uniform_flag'/>

            <enum name='cs_adding_new_entry_category' type-name='uniform_category'/>
            <stl-vector type-name='int16_t' name='cs_add_list_type'/>
            <stl-vector type-name='int16_t' name='cs_add_list_subtype'/>
            <stl-vector type-name='uint32_t' name='cs_add_list_flag'/>
            <stl-bit-vector name='cs_add_list_is_foreign'/>
            <bool name='cs_setting_material'/>
            <int32_t name='cs_setting_list_ind'/>
            <stl-vector type-name='entity_material_category' name='cs_setting_material_ent'/>
            <stl-vector type-name='int16_t' name='cs_setting_material_mat'/>
            <stl-vector type-name='int32_t' name='cs_setting_material_matg'/>
            <bool name='cs_setting_color_pattern'/>
            <stl-vector type-name='int32_t' name='cs_setting_color_pattern_index' comment='ColoredPattern'/>
            <stl-bit-vector name='cs_setting_color_pattern_is_dye'/>
            <bool name='cs_adding_specific_item'/>
            <stl-vector type-name='int32_t' name='cs_add_spec_id'/>
        </compound>

        <compound name='squad_schedule'> bay12: squad_schedule_interfacest
            <bool name='open'/>

            <enum name='context' type-name='squad_schedule_context_type'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>

            <int32_t name='scroll_position_month'/>
            <bool name='scrolling_month'/>

            <int32_t name='routine_page'/>

            <stl-vector type-name='int32_t' name='squad_id'/>
            <int32_t name='viewing_months_squad_id'/>

            <ulong name='last_tick_update'/>

            <bool name='editing_routines'/>
            <int32_t name='scroll_position_edit_routine'/>
            <bool name='scrolling_edit_routine'/>
            <stl-string name='routine_name_str'/>
            <bool name='entering_routine_name'/>
            <int32_t name='entering_routine_name_id'/>
            <int32_t name='deleting_routine_id'/>

            <int32_t name='copying_routine_id'/>
            <int32_t name='copying_squad_id'/>
            <int32_t name='copying_squad_month'/>
        </compound>

        <compound name='squad_selector'> bay12: squad_selector_interfacest
            <bool name='open'/>

            <enum name='context' type-name='squad_selector_context_type'/>

            <stl-vector type-name='int32_t' name='squad_id' ref-target='squad'/>
            <int32_t name='bld_id' ref-target='building'/>

            <int32_t name='scroll_position'/>
            <int8_t name='scrolling'/>
        </compound>

        <compound name='burrow_selector'> bay12: burrow_selector_interfacest
            <bool name='open'/>

            <enum name='context' type-name='burrow_selector_context_type'/>

            <stl-vector type-name='int32_t' name='burrow_id' ref-target='burrow'/>
            <stl-bit-vector name='selected'/>

            <int32_t name='scroll_position'/>
            <int8_t name='scrolling'/>
        </compound>

        <compound name='location_selector'> bay12: location_selector_interfacest
            <bool name='open'/>

            <enum name='context' type-name='location_selector_context_type'/>

            <stl-vector pointer-type='abstract_building' name='valid_ab'/>
            <int32_t name='scroll_position_location'/>
            <bool name='scrolling_location'/>

            <int32_t name='current_hover_index'/>

            <bool name='choosing_temple_religious_practice'/>
            <stl-vector type-name='religious_practice_type' name='valid_religious_practice'/>
            <int32_t name='scroll_position_deity'/>
            <bool name='scrolling_deity'/>

            <bool name='choosing_craft_guild'/>
            <stl-vector type-name='int32_t' name='valid_religious_practice_id'/>
            <stl-vector type-name='profession' name='valid_craft_guild_type'/>
            <int32_t name='scroll_position_guild'/>
            <bool name='scrolling_guild'/>
        </compound>

        <compound name='location_details'> bay12: location_details_interfacest
            <bool name='open'/>

            <enum name='context' type-name='location_details_context_type'/>

            <pointer type-name='abstract_building' name='selected_ab'/>
            <int32_t name='open_area_dx'/>
            <int32_t name='open_area_dy'/>
            <int32_t name='wc_count'/>

            <stl-vector pointer-type='occupation' name='loc_occupation'/>
            <stl-vector pointer-type='historical_entity' name='loc_ent'/>
            <stl-vector pointer-type='entity_position' name='loc_position'/>
            <stl-vector pointer-type='entity_position_assignment' name='loc_epp'/>
            <int32_t name='scroll_position_occupation'/>
            <bool name='scrolling_occupation'/>

            <stl-string name='desired_number_str'/>
            <pointer type-name='int32_t' name='entering_desired_number'/>
        </compound>

        <compound name='hauling_stop_conditions'> bay12: hauling_stop_conditions_interfacest
            <bool name='open'/>

            <enum name='context' type-name='hauling_stop_conditions_context_type'/>

            <int32_t name='route_id'/>
            <int32_t name='stop_id'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>
        </compound>

        <compound name='assign_vehicle'> bay12: assign_vehicle_interfacest
            <bool name='open'/>

            <enum name='context' type-name='assign_vehicle_context_type'/>

            <stl-vector pointer-type='vehicle' name='i_vehicle'/>

            <int32_t name='route_id'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>
        </compound>

        <compound name='stockpile'> bay12: stockpile_interfacest
            <bool name='doing_rectangle'/>
            <bool name='box_on_left'/>
            <bool name='erasing'/>
            <bool name='repainting'/>
            <pointer type-name='building_stockpilest' name='cur_bld'/>
        </compound>

        <compound name='stockpile_link'> bay12: stockpile_link_interfacest
            <bool name='open'/>

            <enum name='context' type-name='stockpile_link_context_type'/>

            <int32_t name='bld_id' ref-target='building'/>
            <int32_t name='hr_id'/>
            <int32_t name='hs_id'/>

            <int32_t name='scroll_position_link_list'/>
            <bool name='scrolling_link_list'/>

            <bool name='adding_new_link'/>
            <int32_t name='adding_new_link_type'/>
        </compound>

        <compound name='stockpile_tools'> bay12: stockpile_tools_interfacest
            <bool name='open'/>

            <enum name='context' type-name='stockpile_tools_context_type'/>

            <int32_t name='bld_id' ref-target='building'/>
            <bool name='entering_barrels'/>
            <bool name='entering_bins'/>
            <bool name='entering_wheelbarrows'/>
            <stl-string name='number_str'/>
        </compound>

        <compound name='custom_stockpile'> bay12: custom_stockpile_interfacest
            <bool name='open'/>

            <int32_t name='scroll_position_main'/>
            <int32_t name='scroll_position_sub'/>
            <int32_t name='scroll_position_spec'/>
            <bool name='scrolling_main'/>
            <bool name='scrolling_sub'/>
            <bool name='scrolling_spec'/>
            <stl-string name='spec_filter'/>
            <bool name='entering_spec_filter'/>

            <pointer type-name='building_stockpilest' name='abd'/>
            <pointer type-name='stockpile_settings' name='sp'/>

            <enum type-name='stockpile_list' name='cur_main_mode'/>
            <uint32_t name='cur_main_mode_flag'/>
            <enum type-name='stockpile_list' name='cur_sub_mode'/>

            <stl-vector type-name='stockpile_list' name='main_mode'/>
            <stl-vector type-name='uint32_t' name='main_mode_flag'/>

            <stl-vector type-name='stockpile_list' name='sub_mode'/>
            <stl-vector type-name='stock_pile_pointer_type' name='sub_mode_ptr_type'/>
            <stl-vector pointer-type='int8_t' name='sub_mode_ptr'/>

            <stl-vector name='spec_item'>
                <pointer> bay12: custom_stockpile_itemst
                    <stl-string name='name'/>
                    <stl-string name='simple_name'/>
                    <pointer type-name='int8_t' name='set_pointer'/>
                    <bool name='on'/>

                    <int32_t name='race'/>
                    <int32_t name='itype'/>
                    <int32_t name='istype'/>
                    <int32_t name='isc1'/>
                    <int32_t name='isc2'/>
                </pointer>
            </stl-vector>
            <int32_t name='cur_spec_item_sz'/>
            <int32_t name='counted_cur_spec_item_sz'/>
        </compound>

        <compound name='view_sheets'> bay12: view_sheets_interfacest
            <bool name='open'/>

            <enum name='context' type-name='view_sheets_context_type'/>

            <enum name='active_sheet' type-name='view_sheet_type'/>
            <int32_t name='active_id'/>
            <stl-vector type-name='int32_t' name='viewing_unid'/>
            <stl-vector type-name='int32_t' name='viewing_itid'/>
            <int32_t name='viewing_bldid'/>
            <int32_t name='viewing_x'/>
            <int32_t name='viewing_y'/>
            <int32_t name='viewing_z'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>

            <stl-vector type-name='view_sheet_type' name='tab'/>
            <stl-vector type-name='int32_t' name='tab_id'/>
            <int32_t name='active_sub_tab'/>

            <static-array type-name='view_sheet_trait_type' count='6' name='trait'/>
            <static-array type-name='int32_t' count='6' name='trait_id'/>
            <static-array type-name='int32_t' count='6' name='trait_magnitude'/>
            <int32_t name='trait_num'/>

            <ulong name='last_tick_update'/>
            <static-array type-name='int32_t' count='4' name='reqroom' comment='demands'/>
            <static-array type-name='int32_t' count='4' name='curroom' comment='demands'/>
            <static-array type-name='int32_t' count='149' index-enum='job_skill' name='labor_skill_ind'/>
            <static-array type-name='int32_t' count='149' index-enum='job_skill' name='labor_skill_val'/>
            <static-array type-name='int32_t' count='149' index-enum='job_skill' name='labor_skill_w_rust'/>
            <int32_t name='labor_skill_num'/>
            <static-array type-name='int32_t' count='149' index-enum='job_skill' name='combat_skill_ind'/>
            <static-array type-name='int32_t' count='149' index-enum='job_skill' name='combat_skill_val'/>
            <static-array type-name='int32_t' count='149' index-enum='job_skill' name='combat_skill_w_rust'/>
            <int32_t name='combat_skill_num'/>
            <static-array type-name='int32_t' count='149' index-enum='job_skill' name='other_skill_ind'/>
            <static-array type-name='int32_t' count='149' index-enum='job_skill' name='other_skill_val'/>
            <static-array type-name='int32_t' count='149' index-enum='job_skill' name='other_skill_w_rust'/>
            <int32_t name='other_skill_num'/>
            <stl-vector pointer-type='historical_entity' name='ent_vect'/>
            <stl-vector pointer-type='entity_position' name='ep_vect'/>
            <stl-bit-vector name='ep_vect_spouse'/>

            <static-array type-name='int32_t' count='30' index-enum='need_type' name='unmet_need_type'/>
            <static-array type-name='int32_t' count='30' index-enum='need_type' name='unmet_need_spec_id'/>
            <static-array type-name='int32_t' count='30' index-enum='need_type' name='unmet_need_se'/>
            <int32_t name='unmet_need_num'/>

            <stl-vector pointer-type='stl-string' name='raw_thought_str'/>
            <stl-vector pointer-type='color_text_boxst' name='thought_box'/>
            <int32_t name='thought_box_width'/>

            <int32_t name='scroll_position_inventory'/>
            <bool name='scrolling_inventory'/>

            <int32_t name='scroll_position_relations'/>
            <bool name='scrolling_relations'/>
            <stl-vector pointer-type='stl-string' name='rel_name'/>
            <stl-vector type-name='int16_t' name='relation'/>
            <stl-vector type-name='int16_t' name='relation_f'/>
            <stl-vector type-name='int32_t' name='rel_unid'/>
            <stl-vector pointer-type='historical_figure' name='rel_hf'/>
            <stl-vector name='rel_rphv' pointer-type='relationship_profile_hf_visualst'/>
            <stl-vector name='rel_rphh' pointer-type='relationship_profile_hf_historicalst'/>
            <stl-vector type-name='int32_t' name='rel_value'/>

            <bool name='unit_overview_customizing'/>
            <bool name='unit_overview_entering_nickname'/>
            <bool name='unit_overview_entering_profession_nickname'/>
            <stl-string name='unit_overview_entering_str'/>

            <bool name='unit_overview_expelling'/>
            <enum type-name='cannot_expel_reason_type' name='unit_overview_expel_cannot_expel_reason'/>
            <int32_t name='unit_overview_expel_selected_dest_stid'/>
            <stl-vector type-name='int32_t' name='unit_overview_expel_dest_stid'/>
            <stl-vector type-name='int32_t' name='unit_overview_expel_total_unid'/>
            <int32_t name='scroll_position_unit_overview_expel'/>
            <bool name='scrolling_unit_overview_expel'/>

            <compound name='guest_text' type-name='curses_text_boxst'/>

            <int32_t name='scroll_position_groups'/>
            <bool name='scrolling_groups'/>
            <stl-vector type-name='int32_t' name='unit_group_enid'/>
            <stl-vector type-name='int32_t' name='unit_group_hfel'/>
            <stl-vector type-name='int32_t' name='unit_group_epid'/>
            <stl-vector type-name='int32_t' name='unit_group_eppid'/>
            <stl-bit-vector name='unit_group_ep_is_spouse'/>
            <stl-vector type-name='int32_t' name='unit_group_rep'/>
            <stl-vector type-name='int32_t' name='unit_group_rep_level'/>

            <int32_t name='scroll_position_thoughts'/>
            <bool name='scrolling_thoughts'/>
            <int32_t name='thoughts_active_tab'/>
            <stl-vector pointer-type='stl-string' name='thoughts_raw_memory_str'/>
            <stl-vector pointer-type='color_text_boxst' name='thoughts_memory_box'/>
            <int32_t name='thoughts_memory_box_width'/>

            <int32_t name='scroll_position_personality'/>
            <bool name='scrolling_personality'/>
            <int32_t name='personality_active_tab'/>
            <stl-vector pointer-type='stl-string' name='personality_raw_str'/>
            <stl-vector pointer-type='color_text_boxst' name='personality_box'/>
            <int32_t name='personality_width'/>

            <int32_t name='unit_labor_active_tab'/>
            <int32_t name='scroll_position_unit_labor'/>
            <bool name='scrolling_unit_labor'/>
            <stl-vector type-name='int32_t' name='unit_workshop_id'/>
            <stl-vector type-name='int32_t' name='unit_labor_assigned_animal_unid'/>
            <stl-vector type-name='int32_t' name='unit_labor_assignable_animal_unid'/>

            <int32_t name='scroll_position_unit_skill'/>
            <bool name='scrolling_unit_skill'/>
            <int32_t name='scroll_position_skill_description'/>
            <bool name='scrolling_skill_description'/>
            <int32_t name='unit_skill_active_tab'/>
            <stl-vector type-name='job_skill' name='unit_skill'/>
            <stl-vector type-name='int32_t' name='unit_skill_val'/>
            <stl-vector type-name='int32_t' name='unit_skill_val_w_rust'/>
            <stl-vector type-name='view_sheet_unit_knowledge_type' name='unit_knowledge_type'/>
            <stl-vector type-name='int32_t' name='unit_knowledge_id'/>
            <stl-vector type-name='uint32_t' name='unit_knowledge_bits'/>
            <stl-vector pointer-type='stl-string' name='skill_description_raw_str'/>
            <stl-vector pointer-type='color_text_boxst' name='skill_description_box'/>
            <int32_t name='skill_description_width'/>

            <int32_t name='scroll_position_unit_room'/>
            <bool name='scrolling_unit_room'/>
            <stl-vector type-name='int32_t' name='unit_room_civzone_id'/>
            <stl-vector type-name='int32_t' name='unit_room_curval'/>

            <int32_t name='unit_military_active_tab'/>
            <int32_t name='scroll_position_unit_military_assigned'/>
            <bool name='scrolling_unit_military_assigned'/>

            <int32_t name='scroll_position_unit_military_kills'/>
            <bool name='scrolling_unit_military_kills'/>
            <stl-vector pointer-type='stl-string' name='kill_description_raw_str'/>
            <stl-vector pointer-type='color_text_boxst' name='kill_description_box'/>
            <int32_t name='kill_description_width'/>

            <int32_t name='unit_health_active_tab'/>
            <int32_t name='scroll_position_unit_health'/>
            <bool name='scrolling_unit_health'/>
            <stl-vector pointer-type='stl-string' name='unit_health_raw_str'/>
            <stl-vector pointer-type='color_text_boxst' name='unit_health_box'/>
            <int32_t name='unit_health_width'/>

            <stl-string name='raw_current_thought'/>
            <compound name='current_thought' type-name='curses_text_boxst'/>
            <int32_t name='current_thought_width'/>

            <int32_t name='scroll_position_item'/>
            <bool name='scrolling_item'/>
            <int32_t name='scroll_position_building_job'/>
            <bool name='scrolling_building_job'/>
            <stl-string name='building_job_filter_str'/>
            <bool name='entering_building_job_filter'/>
            <int32_t name='scroll_position_cage_occupants'/>
            <bool name='scrolling_cage_occupants'/>
            <int32_t name='scroll_position_displayed_items'/>
            <bool name='scrolling_displayed_items'/>
            <bool name='linking_lever'/>
            <bool name='need_accessible_mechanism_warning'/>
            <int32_t name='linking_lever_bld_id'/>
            <int32_t name='linking_lever_mech_lever_id'/>
            <int32_t name='linking_lever_mech_target_id'/>
            <bool name='show_linked_buildings'/>
            <int32_t name='scroll_position_linked_buildings'/>
            <bool name='scrolling_linked_buildings'/>
            <bool name='building_entering_nickname'/>
            <stl-string name='building_entering_str'/>

            <stl-vector type-name='int32_t' name='work_order_id'/>
            <int32_t name='scroll_position_work_orders'/>
            <bool name='scrolling_work_orders'/>
            <stl-string name='gen_work_order_num_str'/>
            <bool name='entering_gen_work_order_num'/>

            <bool name='entering_wq_number'/>
            <stl-string name='wq_number_str'/>
            <int32_t name='entering_wq_id'/>

            <stl-string name='engraving_title'/>
            <stl-string name='raw_description'/>
            <compound name='description' type-name='curses_text_boxst'/>
            <int32_t name='description_width'/>
            <int32_t name='scroll_position_description'/>
            <bool name='scrolling_description'/>
            <int32_t name='scroll_position_item_contents'/>
            <bool name='scrolling_item_contents'/>
            <stl-vector pointer-type='stl-string' name='item_use'/>
            <stl-vector type-name='int32_t' name='item_use_reaction_index'/>
        </compound>

        <compound type-name='info_interfacest' name='info'/>

        <compound name='squads'> bay12: squads_interfacest
            <bool name='open'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>

            <stl-vector type-name='int32_t' name='squad_id'/>
            <stl-bit-vector name='squad_selected'/>

            <int32_t name='viewing_squad_index'/>
            <stl-vector type-name='int32_t' name='squad_hfid_selected'/>
            <bool name='entering_squad_nickname'/>
            <stl-string name='squad_nickname_str'/>

            <bool name='giving_move_order'/>

            <bool name='giving_kill_order'/>
            <stl-vector type-name='int32_t' name='kill_unid'/>
            <bool name='kill_doing_rectangle'/>

            <bool name='giving_patrol_order'/>

            <bool name='giving_burrow_order'/>

            <int32_t name='editing_squad_schedule_id'/>
            <int32_t name='editing_squad_schedule_routine_index'/>
            <int32_t name='editing_squad_schedule_month'/>
            <bool name='editing_squad_schedule_whole_squad_selected'/>
            <stl-vector type-name='int32_t' name='editing_squad_schedule_pos_selected'/>
            <int32_t name='editing_squad_schedule_min_follow'/>
            <int32_t name='scroll_position_orderp'/>
            <bool name='scrolling_orderp'/>
            <stl-string name='cell_nickname_str'/>
            <bool name='entering_cell_nickname'/>
        </compound>

        <compound name='create_squad'> bay12: create_squad_interfacest
            <bool name='open'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>

            <stl-vector pointer-type='entity_position_assignment' name='cand_new_squad_appoint_epp'/>
            <stl-vector pointer-type='entity_position' name='cand_new_squad_appoint_epp_ep'/>
            <stl-vector pointer-type='entity_position_assignment' name='cand_new_squad_existing_epp'/>
            <stl-vector pointer-type='entity_position' name='cand_new_squad_existing_epp_ep'/>
            <stl-vector pointer-type='entity_position' name='cand_new_squad_new_epp_from_ep'/>
            <pointer type-name='entity_position_assignment' name='new_squad_appoint_epp'/>
            <pointer type-name='entity_position' name='new_squad_appoint_epp_ep'/>
            <pointer type-name='entity_position_assignment' name='new_squad_existing_epp'/>
            <pointer type-name='entity_position' name='new_squad_existing_epp_ep'/>
            <pointer type-name='entity_position' name='new_squad_new_epp_from_ep'/>
        </compound>

        <compound name='squad_supplies'> bay12: squad_supplies_interfacest
            <bool name='open'/>

            <int32_t name='squad_id'/>
        </compound>

        <compound name='assign_uniform'> bay12: assign_uniform_interfacest
            <bool name='open'/>

            <enum name='context' type-name='assign_uniform_context_type'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>

            <stl-vector pointer-type='entity_uniform' name='cand_uniform'/>
        </compound>

        <compound name='create_work_order'> bay12: create_work_order_interfacest
            <bool name='open'/>

            <int32_t name='forced_bld_id'/>
            <stl-vector pointer-type='manager_order_template' name='jminfo_master'/>

            <stl-vector pointer-type='cwo_buildingst' name='building'/>
            <int32_t name='scroll_position_building'/>
            <bool name='scrolling_building'/>
            <int32_t name='selected_building_index'/>

            <int32_t name='scroll_position_job'/>
            <bool name='scrolling_job'/>
            <stl-string name='job_filter'/>
            <bool name='entering_job_filter'/>
        </compound>

        <compound name='hotkey'> bay12: hotkeys_interfacest
            <bool name='open'/>

            <int32_t name='scroll_position'/>
            <bool name='scrolling'/>

            <int32_t name='entering_index'/>
            <bool name='entering_name'/>
        </compound>

        <compound name='options'> bay12: options_interfacest
            <bool name='open'/>

            <enum name='context' type-name='options_context_type'/>

            <stl-string name='header'/>
            <compound name='text' type-name='curses_text_boxst'/>

            <bool name='fort_retirement_confirm'/>
            <bool name='adv_retirement_confirm'/>
            <bool name='fort_abandon_confirm'/>
            <bool name='adv_abandon_confirm'/>
            <bool name='fort_quit_without_saving_confirm'/>
            <bool name='adv_quit_without_saving_confirm'/>
            <stl-vector type-name='main_menu_option_type' name='option'/>
            <stl-vector type-name='int32_t' name='option_index'/>
            <bool name='entering_manual_folder'/>
            <stl-string name='entering_manual_str'/>
            <bool name='confirm_manual_overwrite'/>
            <bool name='entering_timeline'/>
            <stl-string name='entering_timeline_str'/>
            <bool name='do_manual_save'/>
            <int32_t name='manual_save_timer'/>

            <stl-vector pointer-type='stl-string' name='overwrite_save_folder'/>

            <bool name='ended_game'/>

            <bool name='doing_help'/>
            <compound type-name='markup_text_boxst' name='doing_help_box'/>
            <stl-vector type-name='int32_t' name='guide_context'/>
            <int32_t name='scroll_position_guide'/>
            <bool name='scrolling_guide'/>
            <stl-vector type-name='int32_t' name='popup_context'/>
            <int32_t name='scroll_position_popup'/>
            <bool name='scrolling_popup'/>

            <compound type-name='file_compressorst' name='filecomp'/>
            <compound name='saver' type-name='saverst'/>
        </compound>

        <compound name='help'> bay12: help_interfacest
            <bool name='open'/>

            <bitfield name='flag' base-type='uint32_t'> bay12: HELP_INTERFACE_FLAG_*
                <flag-bit name='start_quick_tutorial'/>
                <flag-bit name='opened_guide'/>
                <flag-bit name='minimized'/>
            </bitfield>
            <uint32_t name='context_flag'/> bay12: HELP_INTERFACE_CONTEXT_FLAG_*, multiple overlapping

            <enum name='context' type-name='help_context_type'/>

            <stl-string name='header'/>
            <static-array count='20' type-name='markup_text_boxst' name='text' comment='tutorials'/>
            <int32_t name='floor_dug'/>
        </compound>

        <compound name='settings' type-name='main_interface_settings'/>

        <compound name='arena_unit'> bay12: create_creature_interfacest
            <bool name='open'/>
            <enum name='context' type-name='arena_context_type'/>
            <int16_t name='race'/>
            <int16_t name='caste'/>
            <int32_t name='team'/>
            <int32_t name='interaction'/>
            <bool name='tame'/>
            <bool name='editing_filter'/>
            <stl-string name='filter'/>
            <stl-vector name='races_filtered' type-name='int16_t'/>
            <stl-vector name='castes_filtered' type-name='int16_t'/>
            <stl-vector name='races_all' type-name='int16_t'/>
            <stl-vector name='castes_all' type-name='int16_t'/>
            <int32_t name='scroll_position_creature'/>
            <bool name='scrolling_creature'/>
            <int32_t name='scroll_position_skill'/>
            <bool name='scrolling_skill'/>
            <stl-vector name='skills'>
                <enum base-type='int16_t' type-name='job_skill'/>
            </stl-vector>
            <stl-vector name='skill_levels' type-name='int32_t'
                        index-refers-to='$$._parent.skills[$]'/>
            <int32_t name='scroll_position_equipment'/>
            <bool name='scrolling_equipment'/>
            <int32_t name='scroll_position_equipment_available_cat'/>
            <bool name='scrolling_equipment_available_cat'/>
            <int32_t name='scroll_position_equipment_available'/>
            <bool name='scrolling_equipment_available'/>
            <pointer name='etl' type-name='embark_item_choice'/>
            <stl-vector name='equipment_category' type-name='int32_t'/>
            <int32_t name='current_category'/>
            <stl-vector name='equipment_item_type' type-name='item_type'/>
            <stl-vector name='equipment_item_subtype' type-name='int16_t'/>
            <stl-vector name='equipment_mat_type' type-name='int16_t'/>
            <stl-vector name='equipment_mat_index' type-name='int32_t'/>
            <stl-vector name='equipment_quantity' type-name='int32_t'/>

            <stl-vector name='interactions' pointer-type='interaction_effect'/>
            <int32_t name='scroll_position_condition'/>
            <bool name='scrolling_condition'/>
        </compound>

        <compound name='arena_tree'> bay12: create_tree_interfacest
            <bool name='open'/>
            <int32_t name='age' comment='in years'/>
            <bool name='editing_age'/>
            <stl-string name='age_str' comment='string representation of age field'/>

            <bool name='editing_filter'/>
            <stl-string name='filter'/>
            <stl-vector name='tree_types_filtered' pointer-type='plant_raw'/>
            <stl-vector name='tree_types_all' pointer-type='plant_raw'/>
            <int32_t name='scroll_position_tree'/>
            <bool name='scrolling_tree'/>
            <pointer name='selected_tree' type-name='plant_raw'/>
        </compound>

        <compound name='arena_weather' comment='arena_weather_interfacest'>
            <bool name='open'/>
        </compound>

        <compound name='adventure' comment='bay12: adventure_interfacest'>
            <compound type-name='adventure_interface_option_listst' name='option_list'/>
            <compound type-name='adventure_interface_inventoryst' name='inventory'/>
            <compound type-name='adventure_interface_jumpst' name='jump'/>
            <compound type-name='adventure_interface_conversationst' name='conversation'/>
            <compound type-name='adventure_interface_performst' name='perform'/>
            <compound type-name='adventure_interface_attackst' name='attack'/>
            <compound type-name='adventure_interface_combat_prefst' name='combat_pref'/>
            <compound type-name='adventure_interface_aim_projectilest' name='aim_projectile'/>
            <compound type-name='adventure_interface_companionsst' name='companions'/>
            <compound type-name='adventure_interface_announcementsst' name='announcements'/>
            <compound type-name='adventure_interface_sleepst' name='sleep'/>
            <compound type-name='adventure_interface_movement_optionsst' name='movement_options'/>
            <compound type-name='adventure_interface_travelst' name='travel'/>
            <compound type-name='adventure_interface_barterst' name='barter'/>
            <compound type-name='adventure_interface_abilitiesst' name='abilities'/>
        </compound>

        <stl-vector type-name='int32_t' name='viewunit_list'/>

        <int8_t name='exporting_local'/>
        <int8_t name='mouse_zone'/>

    -- formerly unit_skills
        <stl-vector type-name='int32_t' name='skill_ind'/>
        <stl-vector type-name='int32_t' name='pract_type'/>
        <stl-vector type-name='int32_t' name='pract_ind'/>
        <bool name='skill_combat'/>
        <bool name='skill_labor'/>
        <bool name='skill_misc'/>

    -- formerly barracks
        <int32_t name='barracks_selected_squad_ind'/>
        <stl-vector pointer-type='squad' name='barracks_squad'/>
        <stl-vector type-name='int32_t' name='barracks_squad_flag'/>

        <bool name='entering_building_name'/>

        <bool name='assigning_position'/>
        <pointer type-name='squad' name='ap_squad'/>
        <int32_t name='ap_sel'/>

        <bool name='assigning_position_squad'/>
        <stl-vector pointer-type='squad' name='ap_squad_list'/>
        <int32_t name='ap_squad_sel'/>

        <stl-vector pointer-type='occupation' name='pref_occupation'/>
        <int32_t name='selected_pref_occupation'/>

        <enum name='main_designation_selected' type-name='main_designation_type'/>
        <bool name='main_designation_doing_rectangles'/>

        <enum name='bottom_mode_selected' type-name='main_bottom_mode_type'/>

        <bool name='hover_instructions_on'/>
        <int32_t name='hover_instructions_last_hover_tick'/>
        <enum name='current_hover' type-name='main_hover_instruction'/>
        <int32_t name='current_hover_id1' comment='union with current_hover_building_type'/>
        <int32_t name='current_hover_id2' comment='union with current_hover_building_subtype'/>
        <int32_t name='current_hover_id3' comment='union with current_hover_building_custom_id'/>
        <enum type-name='interface_key' name='current_hover_key'/>
        <pointer type-name='announcement_alertst' name='current_hover_alert'/>
        <bool name='current_hover_replace_minimap'/>
        <int32_t name='current_hover_left_x'/>
        <int32_t name='current_hover_bot_y'/>

        <static-array count='569' name='hover_instruction' type-name='curses_text_boxst'/>
        <int32_t name='last_displayed_hover_inst'/>
        <int32_t name='last_displayed_hover_id1'/>
        <int32_t name='last_displayed_hover_id2'/>
        <int32_t name='last_displayed_hover_id3'/>

        <pointer type-name='announcement_alertst' name='hover_announcement_alert'/>
        <compound name='hover_announcement_alert_text' type-name='curses_text_boxst'/>
        <stl-vector type-name='int8_t' name='hover_announcement_alert_color'/>
        <stl-vector type-name='int8_t' name='hover_announcement_alert_bright'/>
        <int32_t name='hover_announcement_alert_width'/>

        <compound name='hover_announcement_alert_button_text' type-name='curses_text_boxst'/>
        <stl-vector type-name='int8_t' name='hover_announcement_alert_button_color'/>
        <stl-vector type-name='int8_t' name='hover_announcement_alert_button_bright'/>
        <int32_t name='hover_announcement_alert_button_width'/>

        <int32_t name='current_compass_stid'/>
        <int32_t name='hover_compass_stid'/>
        <compound type-name='curses_text_boxst' name='hover_compass_text'/>
        <int32_t name='hover_compass_width'/>

        <uint32_t name='last_hover_click_update'/>
        <compound type-name='coord' name='last_hover_m'/>

        <compound type-name='coord' name='recenter_indicator_m'/>
        <bool name='mouse_scrolling_map'/>
        <int32_t name='mouse_anchor_mx'/>
        <int32_t name='mouse_anchor_my'/>
        <int32_t name='mouse_anchor_pmx'/>
        <int32_t name='mouse_anchor_pmy'/>

        <compound type-name='coord_path' name='track_path'/>
        <compound type-name='coord_path' name='keyboard_track_path'/>
        <compound type-name='coord' name='last_track_s'/>
        <compound type-name='coord' name='last_track_g'/>
        <compound type-name='coord' name='keyboard_last_track_s'/>
        <compound type-name='coord' name='keyboard_last_track_g'/>
    </struct-type>

    <enum-type type-name='minimap_tile'>
        <enum-item name='BUILTUP3'/>
        <enum-item name='BUILTUP2'/>
        <enum-item name='BUILTUP1'/>
        <enum-item name='WALL4'/>
        <enum-item name='WALL3'/>
        <enum-item name='WALL2'/>
        <enum-item name='WALL1'/>
        <enum-item name='WATER'/>
        <enum-item name='LAVA'/>
        <enum-item name='TREES'/>
        <enum-item name='SHRUB'/>
        <enum-item name='PLAIN'/>
        <enum-item name='ICE'/>
        <enum-item name='SKY'/>
        <enum-item name='SUB_CLEAR'/>
    </enum-type>

    <struct-type type-name='gamest'>
        <compound name='command_line'> bay12: command_linest
            <stl-string name='original'/>
            <stl-vector name='arg_vect' pointer-type='stl-string'/>

            <long name='gen_id'/>
            <ulong name='world_seed'/>
            <int8_t name='use_seed'/>

            <stl-string name='world_param'/>
            <int8_t name='use_param'/>
        </compound>

        <compound name='main_interface' type-name='main_interface'/>
        <compound name='minimap'> bay12: minimapst
            -- Abstract representation of contents; updated by need_scan
            <static-array name='minimap' count='24'>
                <static-array count='15' type-name='minimap_tile'/> bay12: minimap_squarest
            </static-array>

            <int8_t name='update'/>
            <int8_t name='mustmake'/>
            <int16_t name='printed_z'/>

            -- Cached actual tiles from the screen; updated by need_render
            <static-array name='buffer_symbol' count='24'>
                <static-array count='15' type-name='uint8_t'/>
            </static-array>
            <static-array name='buffer_f' count='24'>
                <static-array count='15' type-name='int16_t'/>
            </static-array>
            <static-array name='buffer_b' count='24'>
                <static-array count='15' type-name='int16_t'/>
            </static-array>
            <static-array name='buffer_br' count='24'>
                <static-array count='15' type-name='int16_t'/>
            </static-array>
            <int32_t name='texpos'/>
        </compound>

        <compound name='mod_manager'> bay12: mod_managerst
            <stl-vector pointer-type='mod_headerst' name='mod_header'/>
            -- Begin Steam-only stuff
            -- These fields exist in other versions but aren't actually used
            <pointer name='subscribed_file_id'/>
            <bool name='doing_mod_upload'/>
            <stl-vector pointer-type='mod_headerst' name='mod_upload_header'/>
            <bool name='mod_upload_completed'/>
            <int32_t name='uploading_mod_index'/>

            <pointer name='CreateItemResult'>
                <compound> CCallResult{mod_managerst, CreateItemResult_t}
                    <pointer name='vftable'/>
                    <uint8_t name='m_nCallbackFlags'/>
                    <int32_t name='m_iCallback'/>
                    <uint64_t name='m_hAPICall'/>
                    <pointer name='m_pObj' comment='mod_managerst'/>
                    <pointer name='m_Func'/>
                </compound>
            </pointer>
            <pointer name='SubmitItemUpdateResult'>
                <compound> CCallResult{mod_managerst, SubmitItemUpdateResult_t}
                    <pointer name='vftable'/>
                    <uint8_t name='m_nCallbackFlags'/>
                    <int32_t name='m_iCallback'/>
                    <uint64_t name='m_hAPICall'/>
                    <pointer name='m_pObj' comment='mod_managerst'/>
                    <pointer name='m_Func'/>
                </compound>
            </pointer>
            -- End Steam-only stuff
        </compound>

        fields below here are not actually part of this compound
        <compound name='hash_rng' type-name='hash_rngst'/>
        <compound name='play_rng' type-name='hash_rngst'/>
        <uint32_t name='start_tick_count'/>
        <int32_t name='autosave_cycle'/>
        <bool name='want_to_quit_to_title'/>
        <static-array count='11' name='flash_11_by_3'><static-array count='3'><static-array count='2' type-name='int32_t'/></static-array></static-array>
        <static-array count='7' name='flash_7_by_3'><static-array count='3'><static-array count='2' type-name='int32_t'/></static-array></static-array>
        <static-array count='4' name='flash_4_by_3'><static-array count='3'><static-array count='2' type-name='int32_t'/></static-array></static-array>
        <bitfield name='external_flag' base-type='uint32_t'> bay12: EXTERNAL_FLAG_*
            <flag-bit name='automatic_professions_disabled'/>
        </bitfield>
    </struct-type>

    <struct-type type-name='main_interface_settings' original-name='settings_interfacest'>
        needs to be a separate type so that widget_tabs can forward-declare this type as a friend

        <bool name='open'/>

        <enum name='context' type-name='settings_context_type'/>

        <stl-vector type-name='settings_tab_type' name='tab'/>
        <enum name='current_mode' type-name='settings_tab_type'/>

        <compound type-name='widget_container' name='container_widget'/>
        <int32_t name='scroll_position_params'/>
        <bool name='scrolling_params'/>
        <bool name='entering_value_str'/>
        <int32_t name='entering_value_index'/>
        <stl-string name='value_str'/>
        <stl-vector pointer-type='world_gen_param_basest' name='member'/>

        <bool name='fullscreen_resolution_open'/>
        <stl-vector type-name='int32_t' name='permitted_fullscreen_w'/>
        <stl-vector type-name='int32_t' name='permitted_fullscreen_h'/>
        <int32_t name='scroll_position_permitted_fullscreen'/>
        <bool name='scrolling_permitted_fullscreen'/>

        <stl-vector type-name='int32_t' name='keybinding_category'/>
        <int32_t name='keybinding_selected_category'/>
        <int32_t name='keybinding_scroll_position_cat'/>
        <bool name='keybinding_scrolling_cat'/>

        <static-array count='4' name='keybinding_name'><stl-vector pointer-type='stl-string'/></static-array>
        <static-array count='4' name='keybinding_key'><stl-vector type-name='interface_key'/></static-array>
        <static-array count='4' name='keybinding_binding'><stl-vector type-name='pointer' comment='EventMatch from g_src'/></static-array>
        <static-array count='4' name='keybinding_binding_name'><stl-vector pointer-type='stl-string'/></static-array>
        <static-array count='4' name='keybinding_flag'><stl-vector type-name='uint32_t'/></static-array>
        <int32_t name='keybinding_scroll_position_key'/>
        <bool name='keybinding_scrolling_key'/>
        <int32_t name='keybinding_registering_index'/>
        <bool name='keybinding_registering_adding_new'/>
        <stl-vector pointer-type='stl-string' name='macro_list'/>

        <compound type-name='difficultyst' name='difficulty'/>
        <bool name='doing_custom_settings'/>
    </struct-type>

    <struct-type type-name='hash_rngst'>
        <uint64_t name='splitmix64_state'/>
        <static-array name='s' count='2' type-name='uint64_t'/>
    </struct-type>

    <enum-type type-name='setting_difficulty_enemies_type' base-type='int32_t'> bay12: SettingDifficultyEnemiesType
        <enum-item name='None' value='-1'/>
        <enum-item name='Off'/>
        <enum-item name='Normal'/>
        <enum-item name='Hard'/>
        <enum-item name='Custom'/>
    </enum-type>

    <enum-type type-name='setting_difficulty_economy_type' base-type='int32_t'> bay12: SettingDifficultyEconomyType
        <enum-item name='None' value='-1'/>
        <enum-item name='Normal'/>
        <enum-item name='Hard'/>
        <enum-item name='Custom'/>
    </enum-type>

    <struct-type type-name='difficultyst'>
        <enum name='difficulty_enemies' type-name='setting_difficulty_enemies_type'/>
        <enum name='difficulty_economy' type-name='setting_difficulty_economy_type'/>
        <static-array type-name='int32_t' count='5' name='enemy_pop_trigger'/>
        <static-array type-name='int32_t' count='5' name='enemy_prod_trigger'/>
        <static-array type-name='int32_t' count='5' name='enemy_trade_trigger'/>
        <int32_t name='megabeast_interval'/>
        <int32_t name='forgotten_sens'/>
        <int32_t name='forgotten_irritate_min'/>
        <int32_t name='forgotten_wealth_div'/>
        <int32_t name='wild_sens'/>
        <int32_t name='wild_irritate_min'/>
        <int32_t name='wild_irritate_decay'/>
        <int32_t name='werebeast_interval'/>
        <int32_t name='vampire_fraction'/>
        <static-array type-name='int32_t' count='3' name='invasion_cap_regular'/>
        <static-array type-name='int32_t' count='3' name='invasion_cap_monsters'/>
        <int32_t name='min_raids_before_siege'/>
        <int32_t name='min_raids_between_sieges'/>
        <int32_t name='siege_frequency'/>
        <int32_t name='cavern_dweller_scale'/>
        <int32_t name='cavern_dweller_max_attackers'/>
        <int32_t name='tree_fell_count_savage'/>
        <int32_t name='tree_fell_count'/>
        <bitfield name='flags'> bay12: DIFFICULTY_ENEMY_FLAG_*
            <flag-bit name='sieges'/>
            <flag-bit name='megabeasts'/>
            <flag-bit name='werebeasts'/>
            <flag-bit name='curiousbeasts'/>
        </bitfield>
        <static-array type-name='int32_t' count='5' name='economy_pop_trigger'/>
        <static-array type-name='int32_t' count='5' name='economy_prod_trigger'/>
        <static-array type-name='int32_t' count='5' name='economy_trade_trigger'/>
        <static-array type-name='int32_t' count='10' name='land_holder_pop_trigger'/>
        <static-array type-name='int32_t' count='10' name='land_holder_prod_trigger'/>
        <static-array type-name='int32_t' count='10' name='land_holder_trade_trigger'/>
        <int32_t name='temple_value'/>
        <int32_t name='temple_complex_value'/>
        <int32_t name='priesthood_unit_count'/>
        <int32_t name='high_priesthood_unit_count'/>
        <int32_t name='guildhall_value'/>
        <int32_t name='grand_guildhall_value'/>
        <int32_t name='guild_unit_count'/>
        <int32_t name='grand_guild_unit_count'/>
        <int32_t name='mandate_period'/>
        <int32_t name='demand_period'/>
    </struct-type>

    <struct-type type-name='markup_text_wordst'>
        <stl-string name='str'/>
        <uint8_t name='red' init-value='255'/>
        <uint8_t name='green' init-value='255'/>
        <uint8_t name='blue' init-value='255'/>
        <int32_t name='link_index' init-value='-1' comment="refers to this text box's link vector, makes clickable link in legends mode"/>
        <int32_t name='px' init-value='-1' comment='offset from left of text box in characters'/>
        <int32_t name='py' init-value='-1' comment='offset from top of text box (positive is downwards)'/>
        <bitfield name='flags'> bay12: MARKUP_TEXT_WORD_FLAG_*
            <flag-bit name='NEW_LINE'/>
            <flag-bit name='BLANK_LINE'/>
            <flag-bit name='INDENT'/>
        </bitfield>
    </struct-type>

    <enum-type type-name='markup_text_link_type' base-type='int32_t'> bay12: MarkupTextLinkType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='HIST_FIG'/>
        <enum-item name='SITE'/>
        <enum-item name='ARTIFACT'/>
        <enum-item name='BOOK'/>
        <enum-item name='SUBREGION'/>
        <enum-item name='FEATURE_LAYER'/>
        <enum-item name='ENTITY'/>
        <enum-item name='ABSTRACT_BUILDING'/>
        <enum-item name='ENTITY_POPULATION'/>
        <enum-item name='ART_IMAGE'/>
        <enum-item name='ERA'/>
        <enum-item name='HEC'/>
    </enum-type>

    <struct-type type-name='markup_text_linkst'>
        <enum type-name='markup_text_link_type' name='type'/>
        <int32_t name='id' init-value='-1'/>
        <int32_t name='subid' init-value='-1' comment='only used for type ABSTRACT_BUILDING and ART_IMAGE'/>
    </struct-type>

    <struct-type type-name='script_environmentst'>
        <pointer type-name='meeting_diplomat_info' name='dipev'/>
        <pointer type-name='dipscript_popup' name='mm'/>
        <pointer name='activeplot'/>
        <pointer name='conv'/>
    </struct-type>

    <struct-type type-name='curses_text_boxst'>
        <stl-vector pointer-type='stl-string' name='text'/>
    </struct-type>

    <struct-type type-name='markup_text_boxst'>
        <stl-vector pointer-type='markup_text_wordst' name='word'/>
        <stl-vector pointer-type='markup_text_linkst' name='link'/>
        <int32_t name='current_width' init-value='-1'/>
        <int32_t name='max_y' init-value='0'/>
        <pointer type-name='script_environmentst' name='environment' comment='not saved'/>
    </struct-type>

    <struct-type type-name='color_text_linest'>
        <static-string name='text' size='769'/>
        <static-string name='color' size='769'/>
    </struct-type>

    <struct-type type-name='color_text_boxst'>
        <stl-vector pointer-type='color_text_linest' name='line'/>
        <int32_t name='width' init-value='76'/>
    </struct-type>

    <struct-type type-name='wqc_item_traitst'>
        <uint32_t name='flg'/>
        <int32_t name='flgn'/>
        <stl-string name='reaction_class'/>
        <stl-string name='reaction_product_class'/>
        <int32_t name='metal_ore'/>
        <int32_t name='contains_reaction_index'/>
        <int32_t name='contains_reagent_index'/>
        <enum name='tool_use' type-name='tool_uses'/>

        <stl-string name='display_string'/>

        <bool name='on'/>
    </struct-type>

    <struct-type type-name='cwo_buildingst'>
        <int32_t name='type'/>
        <int32_t name='subtype'/>
        <int32_t name='custom_id'/>
        <stl-vector pointer-type='manager_order_template' name='jminfo'/>
        <stl-string name='name'/>
    </struct-type>

    <struct-type type-name='cri_unitst'>
        <pointer type-name='unit' name='un'/>
        <pointer type-name='item' name='it'/>
        <pointer type-name='job' name='jb'/>
        <int32_t name='profession_list_order1'/>
        <int32_t name='profession_list_order2'/>
        <int32_t name='stress'/>
        <bitfield name='flag' base-type='uint32_t'> bay12: CRI_UNIT_FLAG_*
            <flag-bit name='being_traded'/>
        </bitfield>
        <stl-string name='sort_name'/>
        <stl-string name='job_sort_name'/>

        <pointer type-name='unit' name='owner_un'/>
    </struct-type>

    <struct-type type-name='actor_entryst'>
        <pointer type-name='historical_figure' name='hf'/>
        <pointer type-name='identity' name='iden'/>
        <pointer type-name='language_name' name='name_ptr'/>

        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>

        <int32_t name='visual_hfid'/>
        <int32_t name='historical_hfid'/>
        <int32_t name='identity_id'/>

        <stl-vector type-name='int32_t' name='alias_identity_id'/>

        <pointer type-name='organization_entryst' name='principle_org'/>
        <stl-vector type-name='organization_entryst' name='associated_org'/>
        <stl-vector pointer-type='plot_entryst' name='associated_plot'/>

        <bitfield name='flag' base-type='uint32_t'> bay12: ACTOR_ENTRY_FLAG_*
            <flag-bit name='used_in_current_org'/>
            <flag-bit name='expander_node'/>
        </bitfield>
    </struct-type>

    <struct-type type-name='organization_entry_nodest'>
        <pointer type-name='actor_entryst' name='actor_entry'/>
        <pointer type-name='organization_entry_nodest' name='master'/>
        <int32_t name='sort_id'/>
        <int32_t name='tier'/>
        <int32_t name='x'/>
        <int32_t name='descendant_sum'/>
        <stl-string name='label'/>
        <int16_t name='fcol'/>
        <int16_t name='bcol'/>
        <int8_t name='br'/>
        <stl-string name='name'/>
        <stl-string name='status'/>
    </struct-type>

    <struct-type type-name='organization_entryst'>
        <stl-vector pointer-type='organization_entry_nodest' name='node'/>

        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>

        <stl-string name='p_list_name'/>
        <compound name='main_text_box' type-name='curses_text_boxst'/>

        <pointer type-name='actor_entryst' name='principle_actor_entry'/>

        <bitfield name='flag' base-type='uint32_t'> bay12: ORGANIZATION_ENTRY_FLAG_*
            <flag-bit name='did_chart_coords'/>
        </bitfield>
    </struct-type>

    <struct-type type-name='plot_entryst'>
        <stl-string name='list_name'/>
        <stl-string name='simple_list_name'/>
        <stl-string name='p_list_name'/>

        <pointer type-name='agreement' name='agreement'/>
        <int32_t name='master_hfid'/>
        <stl-string name='organization_name'/>
    </struct-type>

    <struct-type type-name='mod_headerst'>
        <stl-string name='zip_filename'/>
        <stl-string name='unzipped_folder'/>
        <stl-string name='id'/>
        <int32_t name='numeric_version'/>
        <stl-string name='displayed_version'/>
        <int32_t name='earliest_compatible_numeric_version'/>
        <stl-string name='earliest_compatible_displayed_version'/>
        <stl-string name='author'/>
        <stl-string name='name'/>
        <stl-string name='description'/>
        <stl-vector pointer-type='stl-string' name='dependencies'/>
        <stl-vector name='dependency_type'>
            <bitfield base-type='uint32_t'> bay12: MOD_HEADER_REQUIRED_ID_FLAG_*
                <flag-bit name='id_must_be_before'/>
                <flag-bit name='id_must_be_after'/>
            </bitfield>
        </stl-vector>
        <stl-vector pointer-type='stl-string' name='conflicts'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: MOD_HEADER_FLAG_*
            <flag-bit name='currently_installed'/>
            <flag-bit name='have_other_version'/>
            <flag-bit name='vanilla'/>
        </bitfield>
        <stl-string name='src_dir'/>
        <uint64_t name='steam_file_id'/>
        <stl-string name='steam_title'/>
        <stl-string name='steam_description'/>
        <stl-vector pointer-type='stl-string' name='steam_tag'/>
        <stl-vector pointer-type='stl-string' name='steam_key_tag'/>
        <stl-vector pointer-type='stl-string' name='steam_value_tag'/>
        <stl-string name='steam_metadata'/>
        <stl-string name='steam_changelog'/>

        -- Steam-specific
        <stl-string name='steam_upload_message'/>
        <bool name='steam_upload_success'/>
        <uint64_t name='mod_upload_handle'/>
    </struct-type>

    <struct-type type-name='lookinfost'>
        <enum base-type='int32_t' name='type'> bay12: LookInfoType
            <enum-item name='Item'/>
            <enum-item name='Floor'/>
            <enum-item name='Unit'/>
            <enum-item name='Building'/>
            <enum-item name='Vermin'/>
            <enum-item name='Flow'/>
            <enum-item name='Campfire'/>
            <enum-item name='Spatter'/>
            <enum-item name='BuildingItem'/>
            <enum-item name='Fire'/>
            <enum-item name='Water'/>
            <enum-item name='Magma'/>
            <enum-item name='Spoor'/>
        </enum>
        <compound is-union='true' name='data'>
            <compound name='item'> bay12: lookinfo_itemst
                <int32_t name='item_id' ref-target='item'/>
            </compound>
            <compound name='floor'> bay12: lookinfo_mapsquarest
                <int32_t name='empty'/>
            </compound>
            <compound name='unit'> bay12: lookinfo_unitst
                <int32_t name='unit_id' ref-target='unit'/>
            </compound>
            <compound name='building'> bay12: lookinfo_buildingst
                <int32_t name='bld_id' ref-target='building'/>
            </compound>
            <compound name='vermin'> bay12: lookinfo_verminst
                <int16_t name='race' ref-target='creature_raw'/>
                <int32_t name='caste'/>
                <int32_t name='item_id' ref-target='item'/>
                <uint32_t name='flag'/>
                <int32_t name='number'/>
            </compound>
            <compound name='flow'> bay12: lookinfo_flowst
                <int16_t name='type'/>
                <int16_t name='subtype'/>
                <int32_t name='sstype'/>
                <int32_t name='guide_id'/>
                <bitfield name='flag' base-type='uint32_t'> bay12: LOOKINFO_FLOW_FLAG_*
                    <flag-bit name='subterranean'/>
                </bitfield>
            </compound>
            <compound name='campfire'> bay12: lookinfo_campfirest
                <int32_t name='empty'/>
            </compound>
            <compound name='spatter'> bay12: lookinfo_spatterst
                <enum base-type='int32_t' name='i_type' type-name='item_type'/>
                <int32_t name='i_subtype' refers-to='(item-subtype-target $$.i_type $)'/>
                <int32_t name='mat' ref-target='material' aux-value='$$.matg'/>
                <int32_t name='matg'/>
                <enum type-name='matter_state' base-type='int32_t' name='matstate'/>
                <int16_t name='extend'/>
            </compound>
            <compound name='building_item_adv'> bay12: lookinfo_building_item_advst
                <int32_t name='item_id' ref-target='item'/>
            </compound>
            <compound name='fire'> bay12: lookinfo_firest
                <int32_t name='empty'/>
            </compound>
            <compound name='liquid_water'> bay12: lookinfo_liquid_waterst
                <bitfield name='flag' base-type='uint32_t'> bay12: LOOKINFO_LIQUID_WATER_FLAG_*
                    <flag-bit name='stagnant'/>
                    <flag-bit name='salt'/>
                </bitfield>
                <int16_t name='amount'/>
            </compound>
            <compound name='liquid_magma'> bay12: lookinfo_liquid_magmast
                <bitfield name='flag' base-type='uint32_t'> bay12: LOOKINFO_LIQUID_MAGMA_FLAG_*
                    <flag-bit name='subterranean'/>
                </bitfield>
                <int16_t name='amount'/>
            </compound>
            <compound name='spoor'> bay12: lookinfo_spoorst
                <bitfield name='flag' type-name='spoor_flag'/>
                <enum name='type' type-name='spoor_type'/>
                <int32_t name='id1'/>
                <int32_t name='id2'/>
                <int32_t name='id3'/>
            </compound>
        </compound>
        <compound type-name='coord' name='pos'/>
        <stl-string name='display_str'/>
        <int16_t name='cf'/>
        <int16_t name='cb'/>
        <int16_t name='cbr'/>
    </struct-type>

    <struct-type type-name='ui_unit_view_mode'>
        <enum name='value'> bay12: UnitViewModes
            <enum-item name='None' value='-1'/>
            <enum-item name='General'/>
            <enum-item name='Inventory'/>
            <enum-item name='Preferences'/>
            <enum-item name='Wounds'/>
            <enum-item name='PrefLabor'/>
            <enum-item name='PrefDogs'/>
            <enum-item name='PrefOccupation'/>
            <enum-item name='PrefExpel'/>
        </enum>
    </struct-type>

    <enum-type type-name='main_hover_instruction' base-type='int32_t'> bay12: HoverInstructionType
        <comment>generated by devel/dump-tooltip-ids</comment>
        <enum-attr name='caption'/>

        0
        <enum-item>
            <item-attr name='caption' value='Set digging orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish setting dig orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dig a regular hallway or room. Assign a miner to the work detail if necessary. The miner requires a pick.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Designate constructed walls, floors, and other constructed tiles to be removed by miners. This also designates all stairwells and ramps.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dig a stairwell on this level, going up or down. Your selection must span multiple elevations. Click on a tile, change elevations, and click again.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dig a ramp on this level, going up.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dig a channel, making a ramp on the level below.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hold left button to draw.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Left click to choose corners of a rectangle.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dig every tile selected.'/>
        </enum-item>
        10
        <enum-item>
            <item-attr name='caption' value='Dig only ore and gems selected, and automine any ore and gems of the same type which are uncovered.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dig only ore and gems selected.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dig only gems selected.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are very high priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are high priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are high-medium priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are medium priority. [DEFAULT]'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are medium-low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are very low priority.'/>
        </enum-item>
        20
        <enum-item>
            <item-attr name='caption' value='Change to standard dig mode.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change to blueprint-only mode.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change blueprints to standard selections.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change standard selections to blueprints.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Show advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hide advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set tree chopping orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set tree chopping orders. Select the base of the tree so that the woodcutter can reach it. Assign a woodcutter to the work detail if necessary. The woodcutter requires an axe.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish setting tree chopping orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hold left button to draw.'/>
        </enum-item>
        30
        <enum-item>
            <item-attr name='caption' value='Left click to choose corners of a rectangle.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are very high priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are high priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are high-medium priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are medium priority. [DEFAULT]'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are medium-low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are very low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change to standard chop mode.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change to blueprint-only mode.'/>
        </enum-item>
        40
        <enum-item>
            <item-attr name='caption' value='Change blueprints to standard selections.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change standard selections to blueprints.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Show advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hide advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set plant gathering orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set plant gathering orders. Some plants require fruit or other growths to be present.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish setting plant gathering orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hold left button to draw.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Left click to choose corners of a rectangle.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are very high priority.'/>
        </enum-item>
        50
        <enum-item>
            <item-attr name='caption' value='Selected tiles are high priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are high-medium priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are medium priority. [DEFAULT]'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are medium-low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are very low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change to standard gather mode.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change to blueprint-only mode.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change blueprints to standard selections.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change standard selections to blueprints.'/>
        </enum-item>
        60
        <enum-item>
            <item-attr name='caption' value='Show advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hide advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set wall smoothing, engraving, track carving, and fortification orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Smooth a rough wall to make it more pleasing to your citizens. This also prepares the wall for engraving or fortification.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Engrave artwork into a smooth wall.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Carve a track in a stone floor. Tracks are used by minecarts with routes set in the hauling menu.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Carve a gap in a smooth wall to allow your archers to fire upon invaders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish setting wall orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hold left button to draw.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Left click to choose corners of a rectangle.'/>
        </enum-item>
        70
        <enum-item>
            <item-attr name='caption' value='Selected tiles are very high priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are high priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are high-medium priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are medium priority. [DEFAULT]'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are medium-low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Selected tiles are very low priority.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change to standard orders mode.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change to blueprint-only mode.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change blueprints to standard selections.'/>
        </enum-item>
        80
        <enum-item>
            <item-attr name='caption' value='Change standard selections to blueprints.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Show advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hide advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Designate items for dumping and melting, claim forbidden items and buildings, and set item visibility.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish setting item/building designations.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Claim a forbidden item or building so it will be used by your citizens.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Forbid your citizens from using an item or building.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Designate an item for dumping in a dumping zone.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove dumping designations.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Designate an item for melting at any smelter.'/>
        </enum-item>
        90
        <enum-item>
            <item-attr name='caption' value='Remove melting designations.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove hidden designations.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hide an item or building from your view. Citizens will still use it.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hold left button to draw.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Left click to choose corners of a rectangle.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set high and low traffic areas.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish setting traffic areas.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set a high traffic area. Use this in wide central passages.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set a normal traffic area, the default state.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set a low traffic area. Citizens will look for better routes.'/>
        </enum-item>
        100
        <enum-item>
            <item-attr name='caption' value='Set a restricted traffic area. Citizens will look hard for better routes. They will still use the area if other routes do not exist or are too long.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hold left button to draw.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Left click to choose corners of a rectangle.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set the exact weight in steps of a traffic type.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Show advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hide advanced options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove mining, woodcutting, plant gathering, and smoothing orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish removing mining etc. orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Place structures and work areas that require construction materials.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish placing structures.'/>
        </enum-item>
        110
        <enum-item>
            <item-attr name='caption' value='Place stockpiles for item storage.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish placing stockpiles.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Start painting a new stockpile. Once the tiles are chosen, you&apos;ll be able to set the details.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Left click to choose corners of a rectangle.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hold left button to draw.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove the stockpile being painted permanently. Also removes existing zones!'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Repaint this stockpile.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Erase a portion of this stockpile.'/>
        </enum-item>
        <enum-item name='StockpileRemove'>
            <item-attr name='caption' value='Remove this stockpile permanently.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether the stockpile can take items from anywhere or only from specific workshops and stockpiles.'/>
        </enum-item>
        120
        <enum-item>
            <item-attr name='caption' value='Set from which workshops and stockpiles this stockpile gives and takes items.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set how many barrerls, bins, and wheelbarrows this stockpile can use.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Place zones to establish meeting areas, pastures, and more.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish placing zones.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Start painting a new zone. Once the tiles are chosen, you&apos;ll be able to set the details.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Go to the previous zone overlapping the tile you clicked.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Go to the next zone overlapping the tile you clicked.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Repaint this zone.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Erase a portion of this zone.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Suspend activities in this zone. Does not remove the zone.'/>
        </enum-item>
        130
        <enum-item name='ZoneRemove'>
            <item-attr name='caption' value='Remove this zone permanently.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Gather fruit in trees in and just above this zone. Requires a stepladder.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Gather fruit and vegetables from shrubs in this zone.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Gather fallen fruit in this zone.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Select animals to be placed in this pasture zone. They will stay after being led here.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Designate this zone as the top of a pit. Citizens will not fill the pit below with water.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Designate this zone as the top of a pond. Citizens will bring buckets of water if the pond below isn&apos;t filled.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Select animals to be dropped into the pit or pond below this zone. Animals will not feel obligated to stay if they can find a way out.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Assign a new or existing location to this zone. Locations are groups of zones and rooms with a larger purpose, like a tavern, a temple, a library, or a craft guildhall.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set details for the assigned location.'/>
        </enum-item>
        140
        <enum-item>
            <item-attr name='caption' value='Select this option and any unassigned deceased citizens will be buried here automatically.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Select this option and any unassigned deceased pets will be buried here automatically.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Choose which squads will use this barracks.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Left click to choose corners of a rectangle.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hold left button to draw.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove the zone being painted permanently. Also removes existing zones!'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Your citizens will drink at a water source zone or gather water using buckets for various tasks. This is useful if you don&apos;t have a functioning well and you want to control exactly where the tasks take place.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Citizens assigned to the fishing work detail will fish in this zone if it exists. Otherwise, they will fish everywhere.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Plant gathering zones are used in locations where plants will be gathered frequently. Use the gather designation otherwise.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Items designated for dumping will be tossed into open air spaces included in this zone. If no open air tiles are included, they will dump the items on the floor.'/>
        </enum-item>
        150
        <enum-item>
            <item-attr name='caption' value='Certain livestock need to graze on grass. Assign these animals to a pasture zone. No fencing is needed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Animals assigned to pit/pond zones are dumped in the pit, but will leave the zone afterward if possible. If the pit is designated as a pond, your citizens will attempt to fill it with water using buckets.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Your citizens will fill sand bags at this zone if a sandy floor or sandy wall is included. This task is initiated manually at the glass furnace.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Your citizens will collect clay at this zone if a clay floor or clay wall is included. This task is initiated manually at the kiln.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This important zone is where your citizens will gather to socialize. Crucially, the meeting area is where locations such as taverns, temples, hospitals, and the like are established.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Animals that are capable of being trained receive their training at this zone once they have been assigned a trainer from the Pets/Livestock menu. Generally, a piece of meat is required.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Your citizens will sleep in bedrooms. It should include a bed! Try to enclose it with walls and/or doors. Do not overlap with other rooms.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Your citizens will eat at this zone. When not assigned to a particular citizen, citizens without their own dining hall will eat here. Tables and adjacent chairs should be included.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='An office or study is required for certain official tasks, such as approving work orders and bookkeeping. A chair or throne is required for these functions.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Your archers can train in this zone if there is an archery target included.'/>
        </enum-item>
        160
        <enum-item>
            <item-attr name='caption' value='Squads should be assigned to a barracks. The squad can be set to train, sleep, and store equipment there.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dormitories should include multiple beds and will not belong to a particular citizen.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Prisoners convicted in the Justice menu can be incarcerated at a chain or metal cage in the dungeon zone.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Deceased citizens and pets can be laid to rest in a tomb. It should include a coffin, casket, or sarcophagus.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Establish burrows to organize work and living spaces in larger fortresses.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish establishing burrows.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Left click to choose corners of a rectangle.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hold left button to draw.'/>
        </enum-item>
        <enum-item name='BurrowRemovePaint'>
            <item-attr name='caption' value='Remove the burrow being painted permanently. Also removes existing burrows!'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Repaint this burrow.'/>
        </enum-item>
        170
        <enum-item>
            <item-attr name='caption' value='Erase a portion of this burrow.'/>
        </enum-item>
        <enum-item name='BurrowRemove'>
            <item-attr name='caption' value='Remove this burrow permanently.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on this burrow.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether workshops can source materials from outside the burrow.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Suspend this burrow. Assigned citizens will not respect burrow restrictions while a burrow is suspended, but all tasks within the burrow will still function.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set hauling routes for minecarts.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Finish setting hauling routes.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Add a stop to this route. Minecarts will move between stops when conditions are satisfied.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Assign a minecart to this route. Only one vehicle can operate on each route.'/>
        </enum-item>
        <enum-item name='RouteName'>
            <item-attr name='caption' value='Name this route.'/>
        </enum-item>
        180
        <enum-item name='RouteRemove'>
            <item-attr name='caption' value='Remove this route.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set the items desired by the minecart at this stop. Items must be in a linked stockpile.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Link a stockpile to this stop. Citizens will haul items to and from the minecart as you specify. Items for the minecart must be specified using the desired items button to the left.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set conditions for the minecart to move on to the next stop.'/>
        </enum-item>
        <enum-item name='StopName'>
            <item-attr name='caption' value='Name this stop.'/>
        </enum-item>
        <enum-item name='StopRemove'>
            <item-attr name='caption' value='Remove this stop.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The assigned vehicle is at this stop.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The assigned vehicle is moving toward this stop.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The assigned vehicle wants to be at this stop but is not currently there. A worker may be bringing it, or it may be stranded.'/>
        </enum-item>
        <enum-item name='InfoUnits'>
            <item-attr name='caption' value='Open the citizen information menu.'/>
        </enum-item>
        190
        <enum-item name='InfoJobs'>
            <item-attr name='caption' value='Open the task information menu.'/>
        </enum-item>
        <enum-item name='InfoPlaces'>
            <item-attr name='caption' value='Open the place information menu.'/>
        </enum-item>
        <enum-item name='InfoLabors'>
            <item-attr name='caption' value='Open the labor menu.'/>
        </enum-item>
        <enum-item name='InfoWorkOrders'>
            <item-attr name='caption' value='Open the work orders menu.'/>
        </enum-item>
        <enum-item name='InfoNobles'>
            <item-attr name='caption' value='Open the nobles and administrators menu.'/>
        </enum-item>
        <enum-item name='InfoObjects'>
            <item-attr name='caption' value='Open the objects menu.'/>
        </enum-item>
        <enum-item name='Squads'>
            <item-attr name='caption' value='Open the squad sidebar.'/>
        </enum-item>
        <enum-item name='World'>
            <item-attr name='caption' value='Open the world screen.'/>
        </enum-item>
        <enum-item name='InfoJustice'>
            <item-attr name='caption' value='Open the justice menu.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether the stockpile allows plant and animal-based objects, regardless of other settings.'/>
        </enum-item>
        200
        <enum-item>
            <item-attr name='caption' value='Toggle whether the stockpile allows non-plant-and-animal-ba sed objects, regardless of other settings.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether goods banned by export mandates are listed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Sort by distance from the depot.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Sort by value.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Leave menu and recenter the view on the time.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Leave menu and open the item&apos;s sheet.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle the forbidden status of the item. Citizens will not use forbidden items or buildings.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle the dump status of the item. Items are dumped in dumping zones.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle the melt status of the item. Items are melted at any smelter.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle the visibility of the item. Hidden items cannot be seen but citizens will still use them.'/>
        </enum-item>
        210
        <enum-item>
            <item-attr name='caption' value='Create a new work order. Work orders are like workshop jobs but they are assigned to shops automatically and can be activated with various conditions.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This work order is active.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This work order is waiting for its next scheduled check.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This work order is checking its conditions for activation.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This work order is ready to activate.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set the maximum number of workshops that can be used by the work order.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This work order has been validated by the manager.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This work order has not been validated by the manager. A manager can be employed in the nobles and administrators menu, and they must have an assigned office where they will work to validate orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change the number of times the task will be performed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change the work order priority. Work orders at the top of the list will use workshops first.'/>
        </enum-item>
        220
        <enum-item>
            <item-attr name='caption' value='Set the conditions for work order activation. This can involve needed materials, the current stock of products, or the completion of other work orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set the material used or other details of the task.'/>
        </enum-item>
        <enum-item name='ManagerOrderRemove'>
            <item-attr name='caption' value='Remove this work order.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change the frequency that the conditions are checked.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Add a condition to the work order that checks the amount of some item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make the activation of the work order depend on the status of another work order.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change the amount of the item being checked.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change the inequality of the condition.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change the type of the item being checked.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change the material of the item being checked.'/>
        </enum-item>
        230
        <enum-item>
            <item-attr name='caption' value='Change the properties of the item being checked. Many of these are obscure and rely on specific tasks, but certain properties like &apos;empty&apos; can be used in many conditions.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change whether the work order must be activated or completed to satisfy this condition.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove this condition.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Leave this menu and recenter on this creature.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Leave this menu and view this creature&apos;s sheet.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Leave this menu and recenter on this object.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Leave this menu and view this object&apos;s sheet.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Leave this menu and recenter on this place.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Leave this menu and view this place&apos;s sheet or menu.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Leave this menu and recenter on the task&apos;s building.'/>
        </enum-item>
        240
        <enum-item>
            <item-attr name='caption' value='Set the details of this task, such as the material used.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View a detailed description of this activity.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether the task will be repeated indefinitely.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove the current worker from the task.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Suspend this task. This removes the worker. The task can be unsuspended.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cancel this task.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Assign a trainer to this creature.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Assign this creature as a work animal for a specific citizen or resident.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether this creature will receive war training. War animals have more lethal attacks.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether this creature will receive hunting training. Hunting animals can move stealthfully during hunts.'/>
        </enum-item>
        250
        <enum-item>
            <item-attr name='caption' value='Toggle whether this creature is available as a pet for any interested citizen or resident.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is ecstatic right now.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is happy right now.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is pleased right now.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is content right now.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is displeased right now.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is unhappy right now.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is miserable right now.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This worker is specialized and will only do tasks that match their workshop assignments, work details, and occupations. Click to toggle.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This worker is not specialized and will do any free tasks that become available. Click to toggle.'/>
        </enum-item>
        260
        <enum-item>
            <item-attr name='caption' value='This creature is a tavern keeper.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is a performer.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is a scholar.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is a scribe.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is a mercenary.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is a monster slayer.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is a doctor.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is assigned to a specific workshop.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This creature is assigned to a work detail.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether this creature will be slaughtered at a butcher&apos;s shop when the opportunity arises.'/>
        </enum-item>
        270
        <enum-item>
            <item-attr name='caption' value='Toggle whether this creature will be gelded at a farmer&apos;s workshop when the opportunity arises.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This type is not relevant to brewing.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This type is restricted from brewing.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This type is allowed to be brewed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This type is not relevant to cooking.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This type is restricted from cooking.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This type is allowed to be cooked.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Open the announcements screen.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Rename this location.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This option allows visitors from outside the fortress to enter this location.'/>
        </enum-item>
        280
        <enum-item>
            <item-attr name='caption' value='This option allows long-term residents of the fortress to enter this location.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This option indicates that the location is only open to fortress citizens.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This option indicates that the location is only open to members.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove this worker from this occupation.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set the camera to follow this item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This item is tagged by a task and will not be used by other tasks.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Customize this creature&apos;s nickname and profession nickname.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='See this creature&apos;s combat history.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set the camera to follow this creature.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Send this creature to a linked site, or expel this creature entirely.'/>
        </enum-item>
        290
        <enum-item>
            <item-attr name='caption' value='This item is part of the assigned squad equipment.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This item is a tool assigned by a work detail.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This item is a symbol of a noble or administrator.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This item is part of the creature&apos;s regular clothing.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View this item&apos;s sheet.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View this creature&apos;s sheet.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View details about this knowledge.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on this creature.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View this creature&apos;s sheet.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on this item.'/>
        </enum-item>
        300
        <enum-item name='BuildingName'>
            <item-attr name='caption' value='Name this building.'/>
        </enum-item>
        <enum-item name='BuildingRemove'>
            <item-attr name='caption' value='Remove this building.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This task has been assigned and is active.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This task came from a work order.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This task is set to repeat indefinitely.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Click to set this task to repeat indefinitely.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This task is highest priority among all tasks everywhere.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Click to set this task as highest priority among all tasks everywhere.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Increase the priority of the task in this workshop.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set details for this task, such as the material to be used.'/>
        </enum-item>
        310
        <enum-item>
            <item-attr name='caption' value='This task has been suspended.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Click to suspend the task. Assigned workers are removed from suspended tasks.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cancel this task.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Create a new work order for this workshop. Work orders are tasks that can repeat specified numbers of times and which can be given start conditions. This is useful for automation.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on the linked building.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Add stockpile links for this workshop.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This item is a permanent part of the building. Forbid and visibility tags set here affect the whole building.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This item is being traded.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This is a small creature within the trap.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This item is bait.'/>
        </enum-item>
        320
        <enum-item>
            <item-attr name='caption' value='This item has been loaded.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This item is resting within the building.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This item is a semi-permanent part of the building, like an item on display.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View this item&apos;s sheet.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle the forbidden status of the item. Citizens will not use forbidden items or buildings. If a permanent building item is forbidden, citizens will not perform tasks there!'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle the dump status of the item. Items are dumped in dumping zones.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle the melt status of the item. Items are melted at any smelter.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle the visibility of the item. Hidden items cannot be seen but citizens will still use them. If a permanent building item is invisible, the building will be too!'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The soldiers can either keep their equipment on at all times, or only when an order is active.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The soldiers can be allowed to sleep in their rooms whenever they way, or in the barracks either when they want or only when they must.'/>
        </enum-item>
        330
        <enum-item>
            <item-attr name='caption' value='Cancel this scheduled order.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cancel this position&apos;s scheduled orders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Change the squad&apos;s symbol.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View the leader&apos;s sheet.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The squad leader is traveling or otherwise occupied off-site.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View the positions in this squad.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Customize the squad&apos;s name.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Assign a station order. The soldiers will stand near the point selected and engage any hostile creatures that come near.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Assign a kill order. The soldiers will attempt to kill a targeted creature.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Assign a patrol order. The soldiers will walk a specified route repeatedly.'/>
        </enum-item>
        340
        <enum-item>
            <item-attr name='caption' value='Assign a burrow defense order. The soldiers will patrol the burrow and attack any hostile creatures.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Assign a training order. The squad must be assigned to a barracks zone with the training option set.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cancel an order. Does not affect scheduled orders.'/>
        </enum-item>
        <enum-item name='SquadDisband'>
            <item-attr name='caption' value='Disband the squad.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Inspect the route.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on the announcement&apos;s location.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on the creature (at the time of the announcement.)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on the item (at the time of the announcement.)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether the squad will sleep here.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether the squad will train here.'/>
        </enum-item>
        350
        <enum-item>
            <item-attr name='caption' value='Toggle whether the soldiers will store their individually assigned weapons and armor here.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle whether the squad will store squad-level equipment here, such as ammunition.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Choose a stockpile to which the track stop&apos;s vehicle will give items.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Choose a stockpile from which the track stop&apos;s vehicle will take items.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Choose a stockpile with which the track stop&apos;s vehicle will exchange items. The vehicle will take desired items and offload any others.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Choose a stockpile to which the workshop will give items.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Choose a stockpile from which the workshop will take items.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Choose a stockpile to which the selected stockpile will give items.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Choose a stockpile from which the selected stockpile will take items.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The track stop&apos;s vehicle will exchange items with this stockpile. The vehicle will take desired items and offload any others.'/>
        </enum-item>
        360
        <enum-item>
            <item-attr name='caption' value='The track stop&apos;s vehicle will take items from this stockpile.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The track stop&apos;s vehicle will give items to this stockpile.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The selected workshop will take items from here.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The selected workshop will give items to here.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The selected stockpile will take items from here.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The selected stockpile will give items to here.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The creature is chained.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The creature is caged.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The creature is set to be chained.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The creature is set to be caged.'/>
        </enum-item>
        370
        <enum-item>
            <item-attr name='caption' value='The creature is assigned to a pasture.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The creature is assigned to a pond.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The creature is assigned to a pit.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Edit the recenter hotkey locations.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on the surface at this location.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on the deepest discovered area at this location.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on this location.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set this entry to recenter on the current view.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Clear this recenter hotkey location.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Delete this recenter location.'/>
        </enum-item>
        380
        <enum-item>
            <item-attr name='caption' value='Display water and magma depth numerically (1 to 7.)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Show up and down arrows over ramps at the current elevation.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Zoom in on the play area.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Zoom out from the play area.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Open the stocks window, where you can see all of your fortress&apos;s items.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View all alerts.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value=''/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Most tasks in the fortress are started and completed at workshops. Tasks generally require raw materials and most workshops are constructed from boulders, blocks, or wood.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Furnaces are used for smelting, glassmaking, pottery, ashmaking, or to make fuel from wood or raw coal. Furnaces require fuel to function, or they can be set above magma.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='These workshops are used in the clothesmaking process, whether dyeing and weaving or using tanned hides.'/>
        </enum-item>
        390
        <enum-item>
            <item-attr name='caption' value='A wide variety of food-and-drink-related workshops can be found in this category.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Use options in this category to place furniture that has already been constructed in a workshop.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Place doors and hatches here after you have constructed them in an appropriate workshop.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Most terrain-altering constructions can be found here, from walls and floors to bridges, ramps, stairs, and more.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='More complicated buildings from wells to powered machine components to levers and floodgates are found here.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cages, ropes, and animal traps are found here. Cages can be used in cage traps or to transport large animals. Metal cages and chains are also used by the justice system.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Various mechanical traps can be found here. The pressure plate is also found here, which has applications beyond traps.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Archery targets, siege weapons, and some ornamental display items can be found in this category.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This crucial building is where all trading will be done. Pack animals from distant civilizations will need to access this building from the edge of the map. Later, wagons will need a clear 3-wide path to the depot.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Used to make lye, potash, and milk of lime. Construction requires blocks, barrel, and a bucket.'/>
        </enum-item>
        400
        <enum-item>
            <item-attr name='caption' value='Make crossbows here from wood or bone. The metalsmith&apos;s forge can be used for metal crossbows and metal bolts, and the crafts workshop is used to make other bolts.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make beds and various furniture here, as well as bins, barrels, and more.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make crafts for trade and your own citizens here, as well as a variety of tools, armor, and bolts.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cut rough gems here to increase their value, and improve the value of other objects by encrusting them with cut gems.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Forge weapons and armor here, as well as most other metal objects from furniture to trap components. Magma below the forge will power tasks. You are responsible for placing the forge above the magma, but no other fuel is required.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make mechanisms here which are used to make levers, pressure plates, and gears. You can also use mechanisms to link levers and pressure plates to other machinery.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Forge weapons and armor here, as well as most other metal objects from furniture to trap components. These tasks require fuel.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Here you can make parts for ballistae and catapults. This workshop is also the place where ballista ammo is assembled.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make stone furniture here, as well as blocks which are used in constructions.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value=''/>
        </enum-item>
        410
        <enum-item>
            <item-attr name='caption' value='Use leather tanned at the tanner&apos;s shop here to make clothing and tools, such as bags and waterskins.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Here you can turn thread into cloth, whether it is thread from the farmer&apos;s workshop or spider silk gathered underground.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make cloth into clothing and tools here, such as bags and ropes.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Use dyes here to color thread and cloth. Requires a barrel and bucket for construction.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Brew alcohol from plants, fruit, or honey.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Slaughter livestock here in order to obtain meat, hides, bones, and other animal products.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make leather from animal hides here. You can also make parchment using milk of lime and a hide.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Process raw fish into edible food here. Raw fish will not be eaten.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cook meals here. You can also render fat into tallow.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Process plants and work with livestock here. Milk and shear animals, make cheese, and spin thread.'/>
        </enum-item>
        420
        <enum-item>
            <item-attr name='caption' value='Make sugar, flour, and various useful slurries here. Tasks are completed very slowly compared to the powered millstone.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Capture and train small animals here. Requires animal traps.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make sugar, flour, and various useful slurries here. Powered version of the quern. Must be hooked to a windmill or water wheel to function.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You can make a variety of objects using three different types of glass. You can also collect sand in bags from a task originating here, if you have a sand collection zone. Glassmaking requires fuel.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Bake clay objects here, as well as a few other useful materials. Clay can also be collected here if you have a clay collection zone. All tasks require fuel aside from clay collection.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You can make a variety of objects using three different types of glass. You can also collect sand in bags from a task originating here, if you have a sand collection zone. Magma below the furnace will power tasks. You are responsible for placing the furnace above the magma, but no other fuel is required.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Bake clay objects here, as well as a few other useful materials. Clay can also be collected here if you have a clay collection zone. Magma below the kiln will power tasks. You are responsible for placing the kiln above the magma, but no other fuel is required.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make metal bars from ore here. Can also refine coal into usable fuel or make alloys. Magma below the smelter will power tasks. You are responsible for placing the smelter above the magma, but no other fuel is required.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make metal bars from ore here. Can also refine coal into usable fuel or make alloys. All tasks require fuel.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Make charcoal and ash from wood here. Does not require fuel.'/>
        </enum-item>
        430
        <enum-item>
            <item-attr name='caption' value=''/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Plant crops at the farmplot. You will need seeds or spawn and must select crops by season. Crops can be fertilized with potash. Soil is richer deeper underground.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='When placed, a female bird will claim the box and start laying eggs, if one is available.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Keep a colony of insects at your hives. A wild colony must be collected after the hive is placed, or a colony can be split from an existing hive colony.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Your citizens need a comfortable place to sleep. A bed object must be made at the carpenter&apos;s shop before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Chairs are required for offices to function, and a chair next to a table is the preferred dining arrangement. A chair/throne object must be made before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Tables are required for dining. A chair should be placed adjacent to the table. A table object must be made before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Chests and coffers are used in personal bedrooms for storing non-clothing objects. They are also used in some zone-based locations like taverns, hospitals, and libraries for storing useful materials. A box object must be made before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cabinets are used in personal bedrooms for storing clothing objects. A cabinet object must be made before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='The dead are buried in coffins. Coffins must be placed in their own tomb zone in order to work. A coffin object must be made before it can be placed.'/>
        </enum-item>
        440
        <enum-item>
            <item-attr name='caption' value='Citizens that cannot be buried properly can still be memorialized on slabs. Slabs are created and engraved at the stoneworker&apos;s shop.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Statues can be used to decorate your fortress and add value to your rooms. A statue object must be made at an appropriate workshop first.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Certain injuries such as overlapping fractures require advanced medical contraptions like the traction bench for treatment. A traction bench object must be made before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Codices and scrolls in your library can be stored in bookcases. A bookcase object must be made before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Your most valuable objects can be placed for display in rooms to increase their value and to entertain passing citizens. A pedestal or display case must be made before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='These ornamental objects increase the value of rooms in which they are placed. An offering place object must be made before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Large instruments must be placed in taverns or temples before they will be used. These instruments must be assembled at a workshop first.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Doors can be used along with walls to enclose rooms, which is especially important when placing multiple zones at once. Doors can also be forbidden or attached to levers to control movement in the fort.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Hatches can be placed at the tops of stairwells or above ramps to control movement in the fort when they are forbidden or attached to levers.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Bridges can be used to span open spaces or placed above water or magma. Bridges can be connected to levers and raised to block access.'/>
        </enum-item>
        450
        <enum-item>
            <item-attr name='caption' value='Paved roads use less materials than constructed floors and can be used to stop plants from growing over wagon trails.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dirt roads do not require materials, but the dirt road may quickly be overgrown by plants.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Blocks creatures but allows the passage of fluids and items. Can be built on any floor. Grates unlike bars have a quality and enhance the value of rooms. Grates can be connected to levers.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Blocks creatures but allows the passage of fluids and items. Can be built over empty spaces, stairs, ramps, or above liquids. Grates unlike bars have a quality and enhance the value of rooms. Grates can be connected to levers.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Blocks creatures but allows the passage of fluids and items. Can be built on any floor. Bars unlike grates do not have a quality and so do not enhance the value of rooms significantly. Bars can be connected to levers.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Blocks creatures but allows the passage of fluids and items. Can be built over empty spaces, stairs, ramps, or above liquids. Bars unlike grates do not have a quality and so do not enhance the value of rooms significantly. Bars can be connected to levers.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This ornamental construction can enhance the value of rooms. A window object must be made at a glass furnace before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This ornamental construction can enhance the value of rooms. Three cut gem objects must be made at a jeweler&apos;s shop before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Supports will stop cave-ins in the rare event you completely detach a piece of your fortress. Otherwise, they are ornamental.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You can build walls aboveground, in caverns, or in spaces you have mined out in order to block the passage of creatures, objects, and fluids. Requires boulder, block, or wood.'/>
        </enum-item>
        460
        <enum-item>
            <item-attr name='caption' value='You can place floors for functional reasons or to enhance the appearance of the fortress. Requires boulder, block, or wood.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You can build a ramp next to a wall to provide access to the floor above. The space above the ramp must also be empty. Requires boulder, block, or wood.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You can build staircases to connect different elevations. Staircases must span at least two elevations. Requires boulder, block, or wood.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Fortifications block creature movement but allow projectiles through. Soldiers near fortifications are reasonably safe from incoming projectiles. Requires boulder, block, or wood.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Use minecart tracks in conjunction with the hauling menu.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Place the well in an open space above water to provide a relatively safe area for your citizens to draw water. Requires mechanisms, blocks, a chain or rope, and a bucket.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Use floodgates to control the flow of fluids between spaces in your fortress. Must be attached to a lever or pressure plate to function. Requires a floodgate object to be built before it can be placed.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Use a screw pump to move liquids upward from the elevation below the pump to the same elevation as the pump.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Place the water wheel above flowing water to generate power for machines, such as the millstone or screw pump.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Place the windmill aboveground to generate power for machines, such as the millstone or screw pump. Not all areas have strong winds.'/>
        </enum-item>
        470
        <enum-item>
            <item-attr name='caption' value='Use the gear assembly to connect axles and machinery together. Gear assemblies can be disengaged temporarily by linking them to levers.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Horizontal axles transfer power on the same elevation. Horizontal axles can be east-west or north-south.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Vertical axles transfer power between two adjacent elevations.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Rollers move minecarts on tracks without the need for a citizen to push or guide the minecart.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='A chain can be placed for use in the justice system or for the restraint of an animal.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cages can be used to contain an animal, and metal cages can be used by the justice system. Glass cages can be filled with water and used as aquariums.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Animal traps can be placed in the wild and baited with meat, plants, or gems, in order to catch small creatures.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Track stops are used in conjunction with the hauling menu. They can also be used to add friction to minecart tracks.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Levers are used with machines, doors, floodgates, bridges, cages, and other structures to change their state.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Pressure plates, like levers, are used with machines, doors, floodgates, bridges, cages, and other structures to change their state. The trigger for pressure plates can be set by creature weight, fluid, or minecart passage.'/>
        </enum-item>
        480
        <enum-item>
            <item-attr name='caption' value='Stone-fall traps drop a stone on intruders. Must be loaded with boulders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Weapon traps use a weapon or trap component to strike intruders. Can be used with ranged weapons and loaded with ammo. Can use multiple weapons at once.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Cage traps capture intruders in cages. Must be loaded with a cage.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Upright weapons are a nasty place for intruders to fall upon. Can also be linked to levers or pressure plates to raise them into intruders.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Archery targets are used in archery range zones for training archers.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Ornamental. Demanded by some nobles.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Ornamental. Demanded by some nobles.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='A ballista fires a ballista arrow in one of the four cardinal directions. The operator can adjust the aim slightly.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='A catapult fires a boulder in one of the four cardinal directions. The operator can adjust the aim slightly.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Create a creature to place in the arena.'/>
        </enum-item>
        490
        <enum-item name='ArenaFluids'>
            <item-attr name='caption' value='Add or remove fluids.'/>
        </enum-item>
        <enum-item name='ArenaWater'>
            <item-attr name='caption' value='Add water to the arena.'/>
        </enum-item>
        <enum-item name='ArenaMagma'>
            <item-attr name='caption' value='Add magma to the arena.'/>
        </enum-item>
        <enum-item name='ArenaSnow'>
            <item-attr name='caption' value='Add snow to the arena.'/>
        </enum-item>
        <enum-item name='ArenaMud'>
            <item-attr name='caption' value='Add mud to the arena.'/>
        </enum-item>
        <enum-item name='ArenaRemoveFluids'>
            <item-attr name='caption' value='Remove fluids and spatter from the arena.'/>
        </enum-item>
        <enum-item name='ArenaTree'>
            <item-attr name='caption' value='Create a tree to place in the arena.'/>
        </enum-item>
        <enum-item name='ArenaWeatherTemperatureTime'>
            <item-attr name='caption' value='Change the weather, temperature, and time.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Default attack is a strike without charging or wrestling.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Default attack is a charging strike.'/>
        </enum-item>
        500
        <enum-item>
            <item-attr name='caption' value='Default attack is a wrestling move.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Choose default attack according to opponent.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Freely move between tiles when dodging if necessary'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Do not move from current tile when dodging even if it means being struck.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Dodge away from charging opponents to avoid being knocked over.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Attempt to stop charging opponents, standing your ground.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Handle charging attacks according to the opponent.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View all announcements.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Recenter on yourself.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Move upward.'/>
        </enum-item>
        510
        <enum-item>
            <item-attr name='caption' value='Move downward.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Travel.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Sleep or wait a while.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Build. (coming soon)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View your status.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View your log. (coming soon)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Open your inventory.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set movement options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Set combat options.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Interact with nearby objects.'/>
        </enum-item>
        520
        <enum-item>
            <item-attr name='caption' value='Search for bugs.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Climb or hold terrain.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Jump where.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Talk to somebody.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Start a performance. This can take several turns to complete.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Craft or butcher. (coming soon)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Use ability. (coming soon)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Strike or wrestle somebody adjacent with a melee attack.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Continue active wrestling. (coming soon - use regular combat to continue wrestling)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Shoot. Requires a ranged weapon and ammunition.'/>
        </enum-item>
        530
        <enum-item>
            <item-attr name='caption' value='Tactical mode is on. You control everybody manually. Click to control only this character (others will follow you.)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Tactical mode is off. Companions are following you. Click to control everybody.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View your companions and tactical settings, or switch party members.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You are currently yielded. Click to stop yielding.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You are not yielded. Click to yield to opponents.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You have a weapon drawn. Click to strap it.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You have a weapon available to draw. Click to draw it.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You do not have a weapon.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You are a projectile.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You are a rider.'/>
        </enum-item>
        540
        <enum-item>
            <item-attr name='caption' value='You are prone. Click to stand.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='You are not prone. Click to go prone.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Close the map.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Go upward.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Go downward.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View your log. (coming soon)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='End travel.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle sneaking.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View the map.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Sleep or wait a while.'/>
        </enum-item>
        550
        <enum-item>
            <item-attr name='caption' value='Toggle cloud view.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Toggle track view. (coming soon)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Drop an item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Wear an item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove an item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Put an item into a container.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Eat or drink an item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Interact with an item in a different way.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='View this item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Drop this item.'/>
        </enum-item>
        560
        <enum-item>
            <item-attr name='caption' value='Wear this item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Remove this item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Put this item into a container.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Eat or drink this item.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Interact with this item in a different way (opens menu.)'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This party member is currently automated in tactical mode.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='This party member is manually controlled in tactical mode.'/>
        </enum-item>
        <enum-item>
            <item-attr name='caption' value='Assume control of this party member.'/>
        </enum-item>
        <enum-item name='Generic'>
            <item-attr name='caption' value=''/>
        </enum-item>
    </enum-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
