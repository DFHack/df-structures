<data-definition>
    -- Unknown enum
    <enum-type type-name='building_extents_type' base-type='int8_t'> bay12: ???
        <enum-item name='None' value='0'/>
        <enum-item name='Stockpile'/>
        <enum-item name='Wall'/>
        <enum-item name='Interior'/>
        <enum-item name='DistanceBoundary'/>
    </enum-type>

    <enum-type type-name='stockpile_list' base-type='int32_t'> bay12: StockPileViewMode
        <enum-attr name='is_category' type-name='bool'/>

        <enum-item name='Animals'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='Food'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='FoodMeat'/>
        <enum-item name='FoodFish'/>
        <enum-item name='FoodUnpreparedFish'/>
        <enum-item name='FoodEgg'/>
        <enum-item name='FoodPlants'/>
        <enum-item name='FoodDrinkPlant'/>
        <enum-item name='FoodDrinkAnimal'/>
        <enum-item name='FoodCheesePlant'/>
        <enum-item name='FoodCheeseAnimal'/>
        <enum-item name='FoodSeeds'/>
        <enum-item name='FoodLeaves'/>
        <enum-item name='FoodMilledPlant'/>
        <enum-item name='FoodBoneMeal'/>
        <enum-item name='FoodFat'/>
        <enum-item name='FoodPaste'/>
        <enum-item name='FoodPressedMaterial'/>
        <enum-item name='FoodExtractPlant'/>
        <enum-item name='FoodExtractAnimal'/>
        <enum-item name='FoodMiscLiquid'/>
        <enum-item name='Furniture'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='FurnitureType'/>
        <enum-item name='FurnitureStoneClay'/>
        <enum-item name='FurnitureMetal'/>
        <enum-item name='FurnitureOtherMaterials'/>
        <enum-item name='FurnitureCoreQuality'/>
        <enum-item name='FurnitureTotalQuality'/>
        <enum-item name='Corpses'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='Refuse'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='RefuseItems'/>
        <enum-item name='RefuseCorpses'/>
        <enum-item name='RefuseParts'/>
        <enum-item name='RefuseSkulls'/>
        <enum-item name='RefuseBones'/>
        <enum-item name='RefuseShells'/>
        <enum-item name='RefuseTeeth'/>
        <enum-item name='RefuseHorns'/>
        <enum-item name='RefuseHair'/>
        <enum-item name='Stone'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='StoneOres'/>
        <enum-item name='StoneEconomic'/>
        <enum-item name='StoneOther'/>
        <enum-item name='StoneClay'/>
        <enum-item name='Ammo'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='AmmoType'/>
        <enum-item name='AmmoOther'/>
        <enum-item name='AmmoMetal'/>
        <enum-item name='AmmoCoreQuality'/>
        <enum-item name='AmmoTotalQuality'/>
        <enum-item name='Coins'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='BarsBlocks'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='BarsMetal'/>
        <enum-item name='BarsOther'/>
        <enum-item name='BlocksStone'/>
        <enum-item name='BlocksMetal'/>
        <enum-item name='BlocksOther'/>
        <enum-item name='Gems'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='RoughGlass'/>
        <enum-item name='CutGlass'/>
        <enum-item name='RoughGem'/>
        <enum-item name='CutGem'/>
        <enum-item name='CutStone'/>
        <enum-item name='Goods'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='GoodsType'/>
        <enum-item name='GoodsStone'/>
        <enum-item name='GoodsMetal'/>
        <enum-item name='GoodsGem'/>
        <enum-item name='GoodsOther'/>
        <enum-item name='GoodsCoreQuality'/>
        <enum-item name='GoodsTotalQuality'/>
        <enum-item name='Leather'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='Cloth'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='ThreadSilk'/>
        <enum-item name='ThreadPlant'/>
        <enum-item name='ThreadYarn'/>
        <enum-item name='ThreadMetal'/>
        <enum-item name='ClothSilk'/>
        <enum-item name='ClothPlant'/>
        <enum-item name='ClothYarn'/>
        <enum-item name='ClothMetal'/>
        <enum-item name='Wood'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='Weapons'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='WeaponsType'/>
        <enum-item name='WeaponsTrapcomp'/>
        <enum-item name='WeaponsMetal'/>
        <enum-item name='WeaponsStone'/>
        <enum-item name='WeaponsOther'/>
        <enum-item name='WeaponsCoreQuality'/>
        <enum-item name='WeaponsTotalQuality'/>
        <enum-item name='Armor'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='ArmorBody'/>
        <enum-item name='ArmorHead'/>
        <enum-item name='ArmorFeet'/>
        <enum-item name='ArmorHands'/>
        <enum-item name='ArmorLegs'/>
        <enum-item name='ArmorShield'/>
        <enum-item name='ArmorMetal'/>
        <enum-item name='ArmorOther'/>
        <enum-item name='ArmorCoreQuality'/>
        <enum-item name='ArmorTotalQuality'/>
        <enum-item name='Sheet'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
        <enum-item name='SheetPaper'/>
        <enum-item name='SheetParchment'/>
        <enum-item name='AdditionalOptions'>
            <item-attr name='is_category' value='true'/>
        </enum-item>
    </enum-type>

    <enum-type type-name='building_use_type' base-type='int16_t'> bay12: BuildingUseType
        <enum-item name="NONE" value='-1'/>
        <enum-item name="SitForEat"/>
        <enum-item name="PlaceFoodForEat"/>
        <enum-item name="Sleep"/>
        <enum-item name="Rest"/>
        <enum-item name="BedCarry"/>
        <enum-item name="Surgery"/>
        <enum-item name="RestInTraction"/>
        <enum-item name="SitForRead"/>
        <enum-item name="SitForWrite"/>
        <enum-item name="PlaceWritingMaterials"/>
    </enum-type>

    <struct-type type-name='building_users' original-name='building_use_infost'>
        <stl-vector name='unit' type-name='int32_t' ref-target='unit'/>
        <stl-vector name='mode' type-name='building_use_type'/>
    </struct-type>

    <struct-type type-name='building_activity_infost'>
        <int32_t name='activity_id' ref-target='activity_entry'/>
        <int32_t name='event_id' ref-target='activity_event' aux-value='$$.activity_id'/>
    </struct-type>

    <struct-type type-name='building_squad_infost'>
        <int32_t name='squad_id' comment='or global id, inside a union'/>
        <bitfield name='mode' type-name='squad_use_flags' base-type='uint32_t'/>
    </struct-type>

    <struct-type type-name='power_info' original-name='machine_power_profilest'>
        <int32_t name='produced'/>
        <int32_t name='consumed'/>
    </struct-type>

    <struct-type type-name='building_drawbuffer' original-name='building_printinfost'>
        <static-array name='signpost_texpos' type-name='int32_t' count='31'/>
        <static-array name='building_one_texpos' count='31'>
            <static-array count='31' type-name='int32_t'/>
        </static-array>
        <static-array name='item_texpos' count='31'>
            <static-array count='31' type-name='int32_t'/>
        </static-array>
        <static-array name='building_two_texpos' count='31'>
            <static-array count='31' type-name='int32_t'/>
        </static-array>
        <static-array name='tile' count='31'>
            <static-array count='31' type-name='uint8_t'/>
        </static-array>
        <static-array name='fore' count='31'>
            <static-array count='31' type-name='int8_t'/>
        </static-array>
        <static-array name='back' count='31'>
            <static-array count='31' type-name='int8_t'/>
        </static-array>
        <static-array name='bright' count='31'>
            <static-array count='31' type-name='int8_t'/>
        </static-array>

        <int16_t name='x1'/>
        <int16_t name='x2'/>
        <int16_t name='y1'/>
        <int16_t name='y2'/>
    </struct-type>

    <bitfield-type type-name='machine_conn_modes' base-type='uint8_t'> bay12: BUILDING_MACHINE_HOOKUP_DIR_*
        <flag-bit name='up'/>
        <flag-bit name='down'/>
        <flag-bit name='right'/>
        <flag-bit name='left'/>
        <flag-bit name='z_up'/>
        <flag-bit name='z_down'/>
    </bitfield-type>

    <struct-type type-name='machine_tile_set' original-name='building_machine_hookup_listst'>
        <compound name='tiles' type-name='coord_path'/>
        <stl-vector name='can_connect' type-name='machine_conn_modes'/>
    </struct-type>

    <bitfield-type type-name='building_machine_info_flag' base-type='uint32_t'> bay12: BUILDING_MACHINE_INFO_FLAG_*
        <flag-bit name='frozen'/>
    </bitfield-type>

    <struct-type type-name='machine_info' original-name='building_machine_informationst'>
        <int32_t name="machine_id" ref-target='machine'/>
        <bitfield name='flags' base-type='uint32_t' type-name='building_machine_info_flag'/>
    </struct-type>

    <bitfield-type type-name='building_archflag' base-type='uint32_t'> bay12: BUILDING_ARCHFLAG_*
        <flag-bit name='rough' comment='rough gabbro road'/>
        <flag-bit name='built'/>
    </bitfield-type>

    <struct-type type-name='building_design' original-name='building_archinfost'>
        <int32_t name='worker' ref-target='historical_figure'/>
        <int32_t name='worker_create_event' ref-target='history_event'/>
        <int16_t name='build_skill'/>
        <int16_t name='build_timer1' comment='+1 per 10 frames while building'/>
        <int32_t name='curworker' ref-target='historical_figure'/>
        <int16_t name='build_timer2'/>
        <enum base-type='int16_t' name='quality1' type-name='item_quality'/>
        <bitfield name='flags' base-type='uint32_t' type-name='building_archflag'/>
        <int32_t name='hitpoints'/>
        <int32_t name='max_hitpoints'/>
    </struct-type>

    <bitfield-type type-name='building_flags'> bay12: BUILDINGFLAG_*
        <flag-bit name='exists' comment='actually built, not just ordered'/>
        <flag-bit name='site_blocked' comment='items on ground on site'/>
        <flag-bit name='room_collision' comment='major intersection with another room?'/>
        <flag-bit name='mastering_pile'/>
        <flag-bit name='almost_deleted' comment='when requesting delete while in_update'/>
        <flag-bit name='in_update' comment='skip_finalize_blast'/>
        <flag-bit name='from_worldgen' comment='do_not_retain_in_creation_zone'/>
        <flag-bit name='did_location_value'/>
    </bitfield-type>

    <struct-type type-name='job_restrictionst'>
        <pointer name='unit' type-name='unit'/>
        <int32_t name='timer'/>
    </struct-type>

    <struct-type type-name='stockpile_links' original-name='stockpile_link_infost'>
        <stl-vector name='give_to_pile' pointer-type='building_stockpilest'/>
        <stl-vector name='take_from_pile' pointer-type='building_stockpilest'/>
        <stl-vector name='give_to_workshop' pointer-type='building'/>
        <stl-vector name='take_from_workshop' pointer-type='building'/>
    </struct-type>

    <bitfield-type type-name='workshop_profile_flag' base-type='uint32_t'> bay12: WORKSHOP_PROFILE_FLAG_*
        <flag-bit name='block_general_orders'/>
    </bitfield-type>

    <struct-type type-name='workshop_profile' original-name='workshop_profilest'>
        <stl-vector name='permitted_workers' type-name='int32_t' ref-target='unit'/>
        <int32_t name='min_level'/>
        <int32_t name='max_level' init-value='3000'/>
        <compound name='links' type-name='stockpile_links'/>
        <int32_t name='max_general_orders'/>
        <bitfield name='flags' base-type='uint32_t' type-name='workshop_profile_flag'/>
        <static-array name='blocked_labors' type-name='bool' count='94' index-enum='unit_labor'/>
    </struct-type>

    <class-type type-name='building' original-name='buildingst'
                instance-vector='$global.world.buildings.all' key-field='id'>

        <int32_t name='x1' comment='top left'/>
        <int32_t name='y1'/>
        <int32_t name='centerx' comment='work location'/>
        <int32_t name='x2' comment='bottom right'/>
        <int32_t name='y2'/>
        <int32_t name='centery'/>
        <int32_t name='z'/>

        <bitfield name='flags' type-name='building_flags'/>

        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index' init-value='-1'/>

        <compound name='room'> not a compound
            <pointer name='extents' is-array='true'>
                <enum type-name='building_extents_type'/>
            </pointer>
            <int32_t name='x'/>
            <int32_t name='y'/>
            <int32_t name='width'/>
            <int32_t name='height'/>
        </compound>

        <int32_t name='age'/>
        <int16_t name='race' ref-target='creature_raw'/>
        <int32_t name='id' init-value='-1'/>

        <stl-vector name='jobs' pointer-type='job'/>
        <stl-vector name='specific_refs' pointer-type='specific_ref'/>
        <stl-vector name='general_refs' pointer-type='general_ref'/>

        <stl-vector name='relations' pointer-type='building_civzonest' comment='zone(s) this building is in; **not sorted**'/>

        <stl-vector name='job_claim_suppress' pointer-type='job_restrictionst'/>
        <stl-string name='name'/>

        <stl-vector name='activities' pointer-type='building_activity_infost'/>

        <int32_t name='world_data_id' ref-target='world_object_data' since='v0.34.01' comment='creation_zone_id'/>
        <int32_t name='world_data_subid' init-value='-1' since='v0.34.01' comment='creation_zone_alt_id'/>
        <int32_t name='creation_bld_num' init-value='-1' since='v0.40.01'/>
        <int32_t name='site_id' ref-target='world_site' since='v0.42.01'/>
        <int32_t name='location_id' ref-target='abstract_building' aux-value='$$.site_id' since='v0.42.01'/>

        <virtual-methods>
            <vmethod ret-type='int32_t' name='getCustomType'/>
            <vmethod name='setCustomType'> <int32_t name='type'/> </vmethod>
            <vmethod name='countHospitalSupplies'>
                <pointer name='supplies' type-name='abstract_building_contents'/>
            </vmethod>
            <vmethod name='getStockpileLinks'>
                <ret-type><pointer type-name='stockpile_links'/></ret-type>
            </vmethod>
            <vmethod name='detachWorldData' comment='remove_as_creation_zone_alteration'/>
            <vmethod ret-type='bool' name='canLinkToStockpile'
                     comment='used by the give to building ui of stockpile'/>
            <vmethod name='getUsers'>
                <ret-type><pointer type-name='building_users'/></ret-type>
            </vmethod>
            <vmethod name='moveBuilding'>
                <int16_t name='delta_x'/>
                <int16_t name='delta_y'/>
                <int16_t name='delta_z'/>
            </vmethod>

            <vmethod name='initOccupancy'>
                <int32_t name='abs_x'/> <int32_t name='abs_y'/>
            </vmethod>
            <vmethod name='setFillTimer'>
                <enum base-type='int32_t' type-name='job_type'/>
                <int16_t name='newoff'/>
            </vmethod>
            <vmethod ret-type='bool' name='isOnFire'/>
            <vmethod ret-type='bool' name='isUnpowered' comment='from magma OR machine power'/>
            <vmethod ret-type='bool' name='canCollapse' comment='safe_on_unfreeze_floor'/>

            -- 14

            <vmethod ret-type='tile_building_occ' name='getPassableOccupancy'/>
            <vmethod ret-type='tile_building_occ' name='getImpassableOccupancy'/>
            <vmethod ret-type='bool' name='isPowerSource' comment='check_down_for_frozen_machine_rect'/>
            <vmethod name='updateFromWeather'/>
            <vmethod name='updateTemperature'/>

            <vmethod name='updateItems'/>
            <vmethod name='updateTempFromTile'><uint16_t name='temp'/><bool name='main_turn'/><int32_t name='amp'/></vmethod>
            <vmethod ret-type='bool' name='isNormalFurniture' comment='bay12: item_determines_building_pic'/>
            <vmethod ret-type='bool' name='isFarmPlot' comment='destroy_not_topple'/>
            <vmethod name='getWorkshopProfile'>
                <ret-type><pointer type-name='workshop_profile'/></ret-type>
            </vmethod>

            -- 24

            <vmethod name='getMachineInfo'>
                <ret-type><pointer type-name='machine_info'/></ret-type>
            </vmethod>
            <vmethod name='getPowerInfo'>
                <pointer name='power_info' type-name='power_info'/>
            </vmethod>
            <vmethod ret-type='bool' name='canConnectToMachine'>
                <pointer type-name='machine_tile_set'/>
            </vmethod>
            <vmethod ret-type='building_type' name='getType'/>
            <vmethod ret-type='int16_t' name='getSubtype'/>

            <vmethod name='setSubtype'> <int16_t name='subtype'/> </vmethod>
            <vmethod ret-type='bool' name='isActual'/>
            <vmethod ret-type='bool' name='keepsOwnerAfterDeath'/>
            <vmethod name='updateAction'/>
            <vmethod ret-type='bool' name='isStatueOrRestraint' comment='owned_party_spot'/>

            -- 34

            <vmethod name='setMaterialAmount'> <int32_t name='amt'/> </vmethod>
            <vmethod name='setBuildStage'> <int16_t name='stage'/> </vmethod>
            <vmethod ret-type='int32_t' name='getBuildStage'/>
            <vmethod ret-type='int32_t' name='getMaxBuildStage'/>
            <vmethod ret-type='int32_t' name='getBuildDuration'/>
            <vmethod ret-type='bool' name='isSettingOccupancy'/>
            <vmethod ret-type='bool' name='trampleOnBuild'/>
            <vmethod ret-type='bool' name='isExtentShaped'/>
            <vmethod name='updateOccupancy'>
                <int32_t name='abs_x'/> <int32_t name='abs_y'/>
            </vmethod>

            -- 44

            <vmethod ret-type='int32_t' name='getPersonalValue'> <pointer type-name='unit'/> </vmethod>
            <vmethod ret-type='bool' name='canBeRoom'/>
            <vmethod ret-type='int32_t' name='getDestroyDuration'/>
            <vmethod name='queueDestroy' comment='same as querying and pressing X'/>
            <vmethod ret-type='bool' name='isImpassableTile'>
                <int32_t name='rel_x'/> <int32_t name='rel_y'/>
            </vmethod>

            <vmethod ret-type='int32_t' name='getFreeCapacity'>
                <bool name='subtract_pending_jobs'/>
            </vmethod>
            <vmethod ret-type='bool' name='canStoreItem'>
                <pointer type-name='item'/> <bool name='subtract_pending_jobs'/>
            </vmethod>
            <vmethod name='getName'> <pointer type-name='stl-string' name='name'/> </vmethod>
            <vmethod name='getNameColor'/>
            <vmethod name='initFarmSeasons'/>

            -- 54

            <vmethod ret-type='int32_t' name='getClutterLevel' comment='1..10'/>
            <vmethod ret-type='bool' name='needsDesign'/>

            <vmethod ret-type='bool' name='canUseForMood'>
                <enum base-type='int16_t' type-name='job_type'/>
            </vmethod>
            <vmethod ret-type='bool' name='canBeRoomSubset'/>
            <vmethod ret-type='bool' name='isCoffin' comment='bay12: uniqueownablebuilding, cannot have more than one room'/>
            <vmethod ret-type='bool' name='canUseSpouseRoom'/>
            <vmethod ret-type='bool' name='canMakeRoom' comment='false if already, or cannot be'/>
            <vmethod ret-type='bool' name='isAssigned' comment='building is assigned to a unit (if a zone) or is in a zone that is assigned to a unit'/>

            -- 64

            <vmethod ret-type='bool' name='isJusticeRestraint'/>
            <vmethod name='detachRestrainedUnit'> <pointer type-name='unit'/> </vmethod>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod ret-type='bool' name='isImpassableAtCreation'
                     comment='bay12: perimdestroyer; the true set looks like things where the unit should stand aside'/>

            <vmethod name='categorize' comment='Add to world.buildings.other.*'> <bool name='in_play'/> </vmethod>
            <vmethod name='uncategorize' comment='Remove from world.buildings.other.*'/>
            <vmethod ret-type='int32_t' name='getArchValue'/>
            <vmethod name='setTriggerState'> <int32_t name='new_state' comment='0 = active/open, 1 = inactive/closed'/> </vmethod>

            -- 74

            <vmethod ret-type='bool' name='needsMagma'/>
            <vmethod name='removeUses'> <bool name='noscatter'/> <bool name='lost'/> </vmethod>
            <vmethod name='deconstructItems'> <bool name='noscatter'/> <bool name='lost'/> <bool name='from_damage'/> </vmethod>

            <vmethod name='cleanupMap'/>
            <vmethod ret-type='bool' name='isFireSafe' comment='checks contained_items[0] for FIREIMMUNE'><int8_t name='fire_type'/></vmethod>
            <vmethod name='fillSidebarMenu'/>
            <vmethod ret-type='bool' name='isForbidden'/>
            <vmethod ret-type='bool' name='isInvisibleToPlayer'/>
            <vmethod ret-type='bool' name='isHidden'/>

            -- 85

            <vmethod ret-type='bool' name='isVisibleInUI'
                     comment='not hidden, or hide/unhide UI mode'/>
            <vmethod ret-type='bool' name='isVisibleInViewport' comment='checks coordinates, calls isVisibleInUI and checks window_xy'>
                <pointer name='viewport' type-name='map_viewport'/>
            </vmethod>
            <vmethod name='getDrawExtents'>
                <pointer name='buffer' type-name='building_drawbuffer'/>
            </vmethod>
            <vmethod name='drawBuilding'>
                <uint32_t name='curtick'/>
                <pointer name='buffer' type-name='building_drawbuffer'/>
                <int16_t name='z_offset' comment='building_wellst only'/>
            </vmethod>
            <vmethod name='isValidSquadAssignment' ret-type='bool'>
                <int32_t name='squad_id'/>
                <uint32_t name='force_flag'/>
            </vmethod>

            <vmethod name='getSpecificSquad' ret-type='int32_t'/>
            <vmethod name='getSpecificPosition' ret-type='int32_t'/>
            <vmethod name='setSpecificSquadPos'><int32_t name='squad_id'/><int32_t name='squad_pos'/></vmethod>
            <vmethod name='clearSpecificSquad'/>
            <vmethod name='removeLocationInfo' since='v0.42.01' comment='related to tavern beds'/>

            -- 95

            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <enum-type type-name='stockpile_category' base-type='int16_t'> bay12: DefaultStockPiles
        <enum-item name='Remove' value='-1'/>
        <enum-item name='Animals'/>
        <enum-item name='Food'/>
        <enum-item name='Furniture'/>
        <enum-item name='Corpses'/>
        <enum-item name='Refuse'/>
        <enum-item name='Stone'/>
        <enum-item name='Ore'/>
        <enum-item name='Ammo'/>
        <enum-item name='Coins'/>
        <enum-item name='Bars'/>
        <enum-item name='Gems'/>
        <enum-item name='Goods'/>
        <enum-item name='Leather'/>
        <enum-item name='Cloth'/>
        <enum-item name='Wood'/>
        <enum-item name='Weapons'/>
        <enum-item name='Armor'/>
        <enum-item name='Sheets'/>
        <enum-item name='Custom'/>
    </enum-type>

    <bitfield-type type-name='stockpile_group_set' base-type='uint32_t'> bay12: STOCKPILE_FLAG_*
        <flag-bit name='animals'/>
        <flag-bit name='food'/>
        <flag-bit name='furniture'/>
        <flag-bit name='corpses'/>
        <flag-bit name='refuse'/>
        <flag-bit name='stone'/>
        <flag-bit name='ammo'/>
        <flag-bit name='coins'/>

        <flag-bit name='bars_blocks'/>
        <flag-bit name='gems'/>
        <flag-bit name='finished_goods'/>
        <flag-bit name='leather'/>
        <flag-bit name='cloth'/>
        <flag-bit name='wood'/>
        <flag-bit name='weapons'/>
        <flag-bit name='armor'/>

        <flag-bit name='sheet'/>
    </bitfield-type>

    <struct-type type-name='stockpile_parameter_animalst'>
        <bool name='empty_cages'/>
        <bool name='empty_traps'/>
        <stl-vector type-name='bool' name='enabled'
                    index-refers-to='(find-creature $)'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_foodst'>
        <stl-vector type-name='bool' name='meat'
                    index-refers-to='(food-mat-by-idx $Meat $)'/>
        <stl-vector type-name='bool' name='fish'
                    index-refers-to='(food-mat-by-idx $Fish $)'/>
        <stl-vector type-name='bool' name='unprepared_fish'
                    index-refers-to='(food-mat-by-idx $UnpreparedFish $)'/>
        <stl-vector type-name='bool' name='egg'
                    index-refers-to='(food-mat-by-idx $Eggs $)'/>
        <stl-vector type-name='bool' name='plants'
                    index-refers-to='(food-mat-by-idx $Plants $)'/>
        <stl-vector type-name='bool' name='drink_plant'
                    index-refers-to='(food-mat-by-idx $PlantDrink $)'/>
        <stl-vector type-name='bool' name='drink_animal'
                    index-refers-to='(food-mat-by-idx $CreatureDrink $)'/>
        <stl-vector type-name='bool' name='cheese_plant'
                    index-refers-to='(food-mat-by-idx $PlantCheese $)'/>
        <stl-vector type-name='bool' name='cheese_animal'
                    index-refers-to='(food-mat-by-idx $CreatureCheese $)'/>
        <stl-vector type-name='bool' name='seeds'
                    index-refers-to='(food-mat-by-idx $Seed $)'/>
        <stl-vector type-name='bool' name='leaves'
                    index-refers-to='(food-mat-by-idx $PlantGrowth $)'/>
        <stl-vector type-name='bool' name='powder_plant'
                    index-refers-to='(food-mat-by-idx $PlantPowder $)'/>
        <stl-vector type-name='bool' name='powder_creature'
                    index-refers-to='(food-mat-by-idx $CreaturePowder $)'/>
        <stl-vector type-name='bool' name='glob'
                    index-refers-to='(food-mat-by-idx $Glob $)'/>
        <stl-vector type-name='bool' name='glob_paste'
                    index-refers-to='(food-mat-by-idx $Paste $)'/>
        <stl-vector type-name='bool' name='glob_pressed'
                    index-refers-to='(food-mat-by-idx $Pressed $)'/>
        <stl-vector type-name='bool' name='liquid_plant'
                    index-refers-to='(food-mat-by-idx $PlantLiquid $)'/>
        <stl-vector type-name='bool' name='liquid_animal'
                    index-refers-to='(food-mat-by-idx $CreatureLiquid $)'/>
        <stl-vector type-name='bool' name='liquid_misc'
                    index-refers-to='(food-mat-by-idx $MiscLiquid $)'/>
        <bool name='prepared_meals'/>
    </struct-type>

    <enum-type type-name='stockpile_furniture_mat' base-type='int16_t'> bay12: StockpileFurnitureStorageType
        <enum-item name='None' value='-1'/>
        <enum-item name='Wood'/>
        <enum-item name='Plant'/>
        <enum-item name='Bone'/>
        <enum-item name='Tooth'/>
        <enum-item name='Horn'/>
        <enum-item name='Pearl'/>
        <enum-item name='Shell'/>
        <enum-item name='Leather'/>
        <enum-item name='Silk'/>
        <enum-item name='Amber'/>
        <enum-item name='Coral'/>
        <enum-item name='GlassGreen'/>
        <enum-item name='GlassClear'/>
        <enum-item name='GlassCrystal'/>
        <enum-item name='Yarn'/>
    </enum-type>

    <enum-type type-name='furniture_type' base-type='int32_t'> bay12: StockpileFurnitureItemType
        <enum-item name='NONE' value='-1'/>
        subset of item_type
        <enum-item name='FLOODGATE'/>
        <enum-item name='HATCH_COVER'/>
        <enum-item name='GRATE'/>
        <enum-item name='DOOR'/>
        <enum-item name='CATAPULTPARTS'/>
        <enum-item name='BALLISTAPARTS'/>
        <enum-item name='TRAPPARTS'/>
        <enum-item name='BED'/>
        <enum-item name='TRACTION_BENCH'/>
        <enum-item name='WINDOW'/>
        <enum-item name='CHAIR'/>
        <enum-item name='TABLE'/>
        <enum-item name='COFFIN'/>
        <enum-item name='STATUE'/>
        <enum-item name='SLAB'/>
        <enum-item name='QUERN'/>
        <enum-item name='MILLSTONE'/>
        <enum-item name='ARMORSTAND'/>
        <enum-item name='WEAPONRACK'/>
        <enum-item name='CABINET'/>
        <enum-item name='ANVIL'/>
        <enum-item name='BUCKET'/>
        <enum-item name='BIN'/>
        <enum-item name='BOX'/>
        <enum-item name='BAG'/>
        <enum-item name='SIEGEAMMO'/>
        <enum-item name='BARREL'/>
        <enum-item name='BALLISTAARROWHEAD'/>
        <enum-item name='PIPE_SECTION'/>

        tool types
        <enum-item name='FOOD_STORAGE'/>
        <enum-item name='MINECART'/>
        <enum-item name='WHEELBARROW'/>
        <enum-item name='OTHER_LARGE_TOOLS'/>

        <enum-item name='SAND_BAG'/>
    </enum-type>

    <struct-type type-name='stockpile_parameter_furniturest'>
        <stl-vector type-name='bool' name='type' index-enum='furniture_type'/>
        <stl-vector type-name='bool' name='other_mats' index-enum='stockpile_furniture_mat'/>
        <stl-vector type-name='bool' name='mats' index-refers-to='(material-by-id 0 $)'/>
        <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
        <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_graveyardst'>
        <stl-vector type-name='bool' name='corpses' index-refers-to='(find-creature $)'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_refusest'>
        <stl-vector type-name='bool' name='type' index-enum='item_type'/>
        <stl-vector type-name='bool' name='corpses'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='body_parts'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='skulls'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='bones'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='hair'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='shells'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='teeth'
                    index-refers-to='(find-creature $)'/>
        <stl-vector type-name='bool' name='horns'
                    index-refers-to='(find-creature $)'/>
        <bool name='fresh_raw_hide'/>
        <bool name='rotten_raw_hide'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_stonest'>
        <stl-vector type-name='bool' name='mats'
                    index-refers-to='(material-by-id 0 $)'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_orest'>
        <stl-vector type-name='bool' name='mats' comment='unused'/>
    </struct-type>

    <enum-type type-name='stockpile_ammo_mat' base-type='int16_t'> bay12: StockpileAmmoStorageType
        <enum-item name='None' value='-1'/>
        <enum-item name='Wood'/>
        <enum-item name='Bone'/>
    </enum-type>

    <struct-type type-name='stockpile_parameter_ammost'>
        <stl-vector type-name='bool' name='type'
                    index-refers-to='$global.world.raws.itemdefs.ammo[$]'/>
        <stl-vector type-name='bool' name='other_mats' index-enum='stockpile_ammo_mat'/>
        <stl-vector type-name='bool' name='mats'
                    index-refers-to='(material-by-id 0 $)'/>
        <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
        <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_miscst'>
        <bool name='allow_organic' init-value='true'/>
        <bool name='allow_inorganic' init-value='true'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_coinsst'>
        <stl-vector type-name='bool' name='mats'
                    index-refers-to='(material-by-id 0 $)'/>
    </struct-type>

    <enum-type type-name='stockpile_bar_mat' base-type='int16_t'> bay12: StockpileBarStorageType
        <enum-item name='None' value='-1'/>
        <enum-item name='Coal'/>
        <enum-item name='Potash'/>
        <enum-item name='Ash'/>
        <enum-item name='Pearlash'/>
        <enum-item name='Soap'/>
    </enum-type>

    <enum-type type-name='stockpile_block_mat' base-type='int16_t'> bay12: StockpileBlockStorageType
        <enum-item name='None' value='-1'/>
        <enum-item name='GlassGreen'/>
        <enum-item name='GlassClear'/>
        <enum-item name='GlassCrystal'/>
        <enum-item name='Wood'/>
    </enum-type>

    <struct-type type-name='stockpile_parameter_barblockst'>
        <stl-vector type-name='bool' name='bars_other_mats' index-enum='stockpile_bar_mat'/>
        <stl-vector type-name='bool' name='blocks_other_mats' index-enum='stockpile_block_mat'/>
        <stl-vector type-name='bool' name='bars_mats'
                    index-refers-to='(material-by-id 0 $)'/>
        <stl-vector type-name='bool' name='blocks_mats'
                    index-refers-to='(material-by-id 0 $)'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_gemst'>
        <stl-vector type-name='bool' name='rough_other_mats'
                    index-refers-to='(material-by-id $ -1)'/>
        <stl-vector type-name='bool' name='cut_other_mats'
                    index-refers-to='(material-by-id $ -1)'/>
        <stl-vector type-name='bool' name='rough_mats'
                    index-refers-to='(material-by-id 0 $)'/>
        <stl-vector type-name='bool' name='cut_mats'
                    index-refers-to='(material-by-id 0 $)'/>
    </struct-type>

    <enum-type type-name='stockpile_finished_mat' base-type='int16_t'> bay12: StockpileFinishedStorageType
        <enum-item name='None' value='-1'/>
        <enum-item name='Wood'/>
        <enum-item name='Plant'/>
        <enum-item name='Bone'/>
        <enum-item name='Tooth'/>
        <enum-item name='Horn'/>
        <enum-item name='Pearl'/>
        <enum-item name='Shell'/>
        <enum-item name='Leather'/>
        <enum-item name='Silk'/>
        <enum-item name='Amber'/>
        <enum-item name='Coral'/>
        <enum-item name='GlassGreen'/>
        <enum-item name='GlassClear'/>
        <enum-item name='GlassCrystal'/>
        <enum-item name='Yarn'/>
        <enum-item name='Wax'/>
    </enum-type>

    <struct-type type-name='stockpile_parameter_finishedst'>
        <stl-vector type-name='bool' name='type' index-enum='item_type'/>
        <stl-vector type-name='bool' name='other_mats' index-enum='stockpile_finished_mat'/>
        <stl-vector type-name='bool' name='mats'
                    index-refers-to='(material-by-id 0 $)'/>
        <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
        <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_leatherst'>
        <stl-vector type-name='bool' name='mats'
                    index-refers-to='(food-mat-by-idx $Leather $)'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_clothst'>
        <stl-vector type-name='bool' name='thread_silk'
                    index-refers-to='(food-mat-by-idx $Silk $)'/>
        <stl-vector type-name='bool' name='thread_plant'
                    index-refers-to='(food-mat-by-idx $PlantFiber $)'/>
        <stl-vector type-name='bool' name='thread_yarn'
                    index-refers-to='(food-mat-by-idx $Yarn $)'/>
        <stl-vector type-name='bool' name='thread_metal'
                    index-refers-to='(food-mat-by-idx $MetalThread $)'/>
        <stl-vector type-name='bool' name='cloth_silk'
                    index-refers-to='(food-mat-by-idx $Silk $)'/>
        <stl-vector type-name='bool' name='cloth_plant'
                    index-refers-to='(food-mat-by-idx $PlantFiber $)'/>
        <stl-vector type-name='bool' name='cloth_yarn'
                    index-refers-to='(food-mat-by-idx $Yarn $)'/>
        <stl-vector type-name='bool' name='cloth_metal'
                    index-refers-to='(food-mat-by-idx $MetalThread $)'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_sheetst'>
        <stl-vector type-name='bool' name='paper'/>
        <stl-vector type-name='bool' name='parchment'/>
    </struct-type>

    <struct-type type-name='stockpile_parameter_woodst'>
        <stl-vector type-name='bool' name='mats'
                    index-refers-to='(find-plant-raw $)'/>
    </struct-type>

    <enum-type type-name='stockpile_weapon_mat' base-type='int16_t'> bay12: StockpileWeaponStorageType
        <enum-item name='None' value='-1'/>
        <enum-item name='Wood'/>
        <enum-item name='Plant'/>
        <enum-item name='Bone'/>
        <enum-item name='Shell'/>
        <enum-item name='Leather'/>
        <enum-item name='Silk'/>
        <enum-item name='GlassGreen'/>
        <enum-item name='GlassClear'/>
        <enum-item name='GlassCrystal'/>
        <enum-item name='Yarn'/>
    </enum-type>

    <struct-type type-name='stockpile_parameter_weaponst'>
        <stl-vector type-name='bool' name='weapon_type'
                    index-refers-to='$global.world.raws.itemdefs.weapons[$]'/>
        <stl-vector type-name='bool' name='trapcomp_type'
                    index-refers-to='$global.world.raws.itemdefs.trapcomps[$]'/>
        <stl-vector type-name='bool' name='other_mats' index-enum='stockpile_weapon_mat'/>
        <stl-vector type-name='bool' name='mats'
                    index-refers-to='(material-by-id 0 $)'/>
        <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
        <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
        <bool name='usable'/>
        <bool name='unusable'/>
    </struct-type>

    <enum-type type-name='stockpile_armor_mat' base-type='int16_t'> bay12: StockpileArmorStorageType
        <enum-item name='None' value='-1'/>
        <enum-item name='Wood'/>
        <enum-item name='Plant'/>
        <enum-item name='Bone'/>
        <enum-item name='Shell'/>
        <enum-item name='Leather'/>
        <enum-item name='Silk'/>
        <enum-item name='GlassGreen'/>
        <enum-item name='GlassClear'/>
        <enum-item name='GlassCrystal'/>
        <enum-item name='Yarn'/>
    </enum-type>

    <struct-type type-name='stockpile_parameter_armorst'>
        <stl-vector type-name='bool' name='body'
                    index-refers-to='$global.world.raws.itemdefs.armor[$]'/>
        <stl-vector type-name='bool' name='head'
                    index-refers-to='$global.world.raws.itemdefs.helms[$]'/>
        <stl-vector type-name='bool' name='feet'
                    index-refers-to='$global.world.raws.itemdefs.shoes[$]'/>
        <stl-vector type-name='bool' name='hands'
                    index-refers-to='$global.world.raws.itemdefs.gloves[$]'/>
        <stl-vector type-name='bool' name='legs'
                    index-refers-to='$global.world.raws.itemdefs.pants[$]'/>
        <stl-vector type-name='bool' name='shield'
                    index-refers-to='$global.world.raws.itemdefs.shields[$]'/>
        <stl-vector type-name='bool' name='other_mats' index-enum='stockpile_armor_mat'/>
        <stl-vector type-name='bool' name='mats'
                    index-refers-to='(material-by-id 0 $)'/>
        <static-array type-name='bool' name='quality_core' count='7' index-enum='item_quality'/>
        <static-array type-name='bool' name='quality_total' count='7' index-enum='item_quality'/>
        <bool name='usable'/>
        <bool name='unusable'/>
    </struct-type>

    <struct-type type-name='stockpile_settings' original-name='stockpile_parameterst'>
        <bitfield name='flags' type-name='stockpile_group_set' base-type='uint32_t'/>
        <compound name='animals' type-name='stockpile_parameter_animalst'/>
        <compound name='food' type-name='stockpile_parameter_foodst'/>
        <compound name='furniture' type-name='stockpile_parameter_furniturest'/>
        <compound name='corpses' type-name='stockpile_parameter_graveyardst'/>
        <compound name='refuse' type-name='stockpile_parameter_refusest'/>
        <compound name='stone' type-name='stockpile_parameter_stonest'/>
        <compound name='ore' type-name='stockpile_parameter_orest'/>
        <compound name='ammo' type-name='stockpile_parameter_ammost'/>
        <compound name='coins' type-name='stockpile_parameter_coinsst'/>
        <compound name='bars_blocks' type-name='stockpile_parameter_barblockst'/>
        <compound name='gems' type-name='stockpile_parameter_gemst'/>
        <compound name='finished_goods' type-name='stockpile_parameter_finishedst'/>
        <compound name='leather' type-name='stockpile_parameter_leatherst'/>
        <compound name='cloth' type-name='stockpile_parameter_clothst'/>
        <compound name='wood' type-name='stockpile_parameter_woodst'/>
        <compound name='weapons' type-name='stockpile_parameter_weaponst'/>
        <compound name='armor' type-name='stockpile_parameter_armorst'/>
        <compound name='sheet' type-name='stockpile_parameter_sheetst'/>
        <compound name='misc' type-name='stockpile_parameter_miscst'/>
    </struct-type>

    <struct-type type-name='stockpile_storage_infost'>
        <int16_t name='max_barrels'/>
        <int16_t name='max_bins'/>
        <int16_t name='max_wheelbarrows'/>

        <stl-vector name='container_type'>
            <enum base-type='int16_t' type-name='item_type'/>
        </stl-vector>
        <stl-vector name='container_item_id' type-name='int32_t' ref-target='item'/>
        <stl-vector name='container_x' type-name='int16_t'/>
        <stl-vector name='container_y' type-name='int16_t'/>
    </struct-type>

    <bitfield-type type-name='building_stockpile_flag' base-type='uint32_t'> bay12: BUILDINGFLAG_STOCKPILE_FLAG_*
        <flag-bit name='use_links_only'/>
    </bitfield-type>

    <class-type type-name='building_stockpilest' inherits-from='building'>
        <compound type-name='stockpile_settings' name='settings'/>
        <compound name='storage' type-name='stockpile_storage_infost'/>
        <compound name='links' type-name='stockpile_links'/>

        <bitfield name='stockpile_flag' base-type='uint32_t' type-name='building_stockpile_flag'/>
        <int32_t name='stockpile_number' init-value='-1'/>

        <stl-vector name='linked_stops' pointer-type='hauling_stop'/>
    </class-type>

    <bitfield-type type-name='civzone_pen_flag' base-type='uint32_t'> bay12: CIVZONE_PEN_FLAG_*
        <flag-bit name='check_occupants'/>
    </bitfield-type>

    <struct-type type-name='civzone_penst'>
        <bitfield name='flags' base-type='uint32_t' type-name='civzone_pen_flag'/>
    </struct-type>

    <bitfield-type type-name='civzone_pond_flag' base-type='uint32_t'> bay12: CIVZONE_POND_FLAG_*
        <flag-bit name='keep_filled'/>
        <flag-bit name='check_occupants'/>
    </bitfield-type>

    <struct-type type-name='civzone_pondst'>
        <bitfield name='flag' base-type='uint32_t' type-name='civzone_pond_flag'/>
        <int16_t name='fill_timer'/>
    </struct-type>

    <bitfield-type type-name='civzone_tomb_flag' base-type='uint32_t'> bay12: CIVZONE_TOMB_FLAG_*
        <flag-bit name='no_pets'/>
        <flag-bit name='no_citizens'/>
    </bitfield-type>

    <struct-type type-name='civzone_tombst'>
        <bitfield name='flags' base-type='uint32_t' type-name='civzone_tomb_flag'/>
    </struct-type>

    <bitfield-type type-name='civzone_gather_flag' base-type='uint32_t'> bay12: CIVZONE_GATHER_FLAG_*
        <flag-bit name='pick_trees'/>
        <flag-bit name='pick_shrubs'/>
        <flag-bit name='gather_fallen'/>
    </bitfield-type>

    <struct-type type-name='civzone_gatherst'>
        <bitfield name='flags' base-type='uint32_t' type-name='civzone_gather_flag'/>
        <int32_t name='timer'/>
    </struct-type>

    <struct-type type-name='civzone_archery_rangest'>
        <int32_t name='dir_x'/>
        <int32_t name='dir_y'/>
    </struct-type>

    <bitfield-type type-name='civzone_activity_flag' base-type='uint32_t'> bay12: CIVZONE_ACTIVITY_FLAG_*
        <flag-bit name='unused_01'/>
        <flag-bit name='unused_02'/>
        <flag-bit name='unused_03'/>
        <flag-bit name='active'/>
        <flag-bit name='unused_05'/>
        <flag-bit name='unused_06'/>
        <flag-bit name='unused_07'/>
        <flag-bit name='unused_08'/>
        <flag-bit name='unused_09'/>
        <flag-bit name='unused_10'/>
        <flag-bit name='unused_11'/>
        <flag-bit name='unused_12'/>
    </bitfield-type>

    <class-type type-name='building_civzonest' inherits-from='building'>
        <stl-vector name='assigned_units' type-name='int32_t' ref-target='unit'/>
        <stl-vector name='assigned_items' type-name='int32_t' ref-target='item'/>
        <enum name="type" type-name='civzone_type' comment='only saved as int16'/>
        <bitfield name='spec_sub_flag' base-type='uint32_t' type-name='civzone_activity_flag'/>
        <int32_t name='site_realization_building_id'/>
        <int32_t name='site_realization_sul_id'/>
        <int32_t name='zone_num'/>
        <compound name='zone_settings' is-union='true'>
            <compound name='whole'>
                <int32_t name='i1'/>
                <int32_t name='i2'/>
            </compound>
            <compound name='pen' type-name='civzone_penst'/>
            <compound name='pond' type-name='civzone_pondst'/>
            <compound name='gather' type-name='civzone_gatherst'/>
            <compound name='archery' type-name='civzone_archery_rangest'/>
            <compound name='tomb' type-name='civzone_tombst'/>
        </compound>

        <stl-vector name='home_general_hf' type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name='contained_buildings' pointer-type='building' comment='includes eg workshops and beds; **not sorted**'/>
        <int32_t name='assigned_unit_id' ref-target='unit' init-value='-1' comment='bay12: owner_unid'/>
        <int32_t name='owner_unit_cached_index' init-value='-1'/>
        <stl-vector name='squad_room_info' pointer-type='building_squad_infost'/>
        <int32_t name='retained_owner' ref-target='unit' comment='only used during save'/>
    </class-type>

    <enum-type type-name='building_item_role_type' base-type='int16_t'> bay12: BuildingItemRoles, no base type
        <enum-item name='TEMP'/>
        <enum-item name='TEMP_PRINTHIDDEN'/>
        <enum-item name='PERM'/>
    </enum-type>

    <struct-type type-name='buildingitemst'>
        <pointer name='item' type-name='item'/>
        <enum name='use_mode' type-name='building_item_role_type' comment='bay12: role'/>
    </struct-type>

    <class-type type-name='building_actual' inherits-from='building'
                original-name='building_actualst'>
        <int16_t name='construction_stage'
                 comment='0 not started, then 1 or 3 max depending on type'/>

        <stl-vector name='contained_items' pointer-type='buildingitemst'/>

        <pointer name='design' type-name='building_design'/>

        <virtual-methods>
            <vmethod ret-type='bool' name='isDestroyedByItemRemoval'/>
            <vmethod ret-type='bool' name='scatter_items_on_load'/>
            <vmethod ret-type='bool' name='converts_to_dungeon_container'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='building_boxst' inherits-from='building_actual'>
        <uint16_t name='box_flag' comment='unused'/>
        <int32_t name='specific_squad' ref-target='squad'/>
        <int32_t name='specific_position' init-value='-1'/>
    </class-type>

    <class-type type-name='building_cabinetst' inherits-from='building_actual'>
        <uint16_t name='cabinet_flag'/>
        <int32_t name='specific_squad' ref-target='squad'/>
        <int32_t name='specific_position' init-value='-1'/>
    </class-type>

    <class-type type-name='building_weaponrackst' inherits-from='building_actual'>
        <int16_t name='rack_flags'/>
        <int32_t name='specific_squad' ref-target='squad'/>
    </class-type>

    <class-type type-name='building_armorstandst' inherits-from='building_actual'>
        <uint16_t name='stand_flag' comment='unused'/>

        <int32_t name='specific_squad' ref-target='squad'/>
        <int32_t name='specific_position' init-value='-1'/>
    </class-type>

    <bitfield-type type-name='building_door_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_DOOR_*
        <flag-bit name='forbidden'/>
        <flag-bit name='unused_02'/>
        <flag-bit name='taken_by_invaders'/>
        <flag-bit name='used_by_intruder'/>
        <flag-bit name='closed'/>
        <flag-bit name='operated_by_mechanisms'/>
    </bitfield-type>

    <class-type type-name='building_doorst' inherits-from='building_actual'>
        <bitfield name='door_flags' type-name='building_door_flag' init-value='0x10'/>
        <int16_t name='close_timer'/>
    </class-type>

    <bitfield-type type-name='building_hatch_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_HATCH_*
        <flag-bit name='forbidden'/>
        <flag-bit name='unused_02'/>
        <flag-bit name='taken_by_invaders'/>
        <flag-bit name='used_by_intruder'/>
        <flag-bit name='closed'/>
        <flag-bit name='operated_by_mechanisms'/>
    </bitfield-type>

    <class-type type-name='building_hatchst' inherits-from='building_actual'>
        <bitfield name='door_flags' type-name='building_hatch_flag' init-value='0x50'/>
        <int16_t name='close_timer'/>
    </class-type>

    <bitfield-type type-name='building_bridge_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_BRIDGE_*
        <flag-bit name='raised'/>
        <flag-bit name='raising'/>
        <flag-bit name='lowering'/>
        <flag-bit name='collapsing'/>
        <flag-bit name='has_support'/>
    </bitfield-type>

    <class-type type-name='building_bridgest' inherits-from='building_actual'>
        <bitfield name='gate_flags' type-name='building_bridge_flag' init-value='1'/>
        <int8_t name='timer'/>
        <enum name='direction' base-type='int8_t'>
            <enum-item name='Retracting' value='-1'/>
            <enum-item name='Left'/>
            <enum-item name='Right'/>
            <enum-item name='Up'/>
            <enum-item name='Down'/>
        </enum>
        <int32_t name='material_amount'/>
    </class-type>

    <bitfield-type type-name='building_floodgate_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_FLOODGATE_*
        <flag-bit name='closed'/>
        <flag-bit name='closing'/>
        <flag-bit name='opening'/>
    </bitfield-type>

    <class-type type-name='building_floodgatest' inherits-from='building_actual'>
        <bitfield name='gate_flags' type-name='building_floodgate_flag' init-value='1'/>
        <int8_t name='timer'/>
    </class-type>

    <bitfield-type type-name='building_grate_wall_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_GRATE_WALL_*
        <flag-bit name='closed'/>
        <flag-bit name='closing'/>
        <flag-bit name='opening'/>
    </bitfield-type>

    <class-type type-name='building_grate_wallst' inherits-from='building_actual'>
        <bitfield name='gate_flags' type-name='building_grate_wall_flag' init-value='1'/>
        <int8_t name='timer'/>
    </class-type>

    <bitfield-type type-name='building_grate_floor_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_GRATE_FLOOR_*
        <flag-bit name='closed'/>
        <flag-bit name='closing'/>
        <flag-bit name='opening'/>
    </bitfield-type>

    <class-type type-name='building_grate_floorst' inherits-from='building_actual'>
        <bitfield name='gate_flags' type-name='building_grate_floor_flag' init-value='1'/>
        <int8_t name='timer'/>
    </class-type>

    <bitfield-type type-name='building_bars_vertical_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_BARS_VERTICAL_*
        <flag-bit name='closed'/>
        <flag-bit name='closing'/>
        <flag-bit name='opening'/>
    </bitfield-type>

    <class-type type-name='building_bars_verticalst' inherits-from='building_actual'>
        <bitfield name='gate_flags' type-name='building_bars_vertical_flag' init-value='1'/>
        <int8_t name='timer'/>
    </class-type>

    <bitfield-type type-name='building_bars_floor_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_BARS_FLOOR_*
        <flag-bit name='closed'/>
        <flag-bit name='closing'/>
        <flag-bit name='opening'/>
    </bitfield-type>

    <class-type type-name='building_bars_floorst' inherits-from='building_actual'>
        <bitfield name='gate_flags' type-name='building_bars_floor_flag' init-value='1'/>
        <int8_t name='timer'/>
    </class-type>

    <bitfield-type type-name='building_trap_trigger_flag' base-type='uint32_t'> bay12: BUILDINGFLAG_TRAP_TRIGGER_*
        <flag-bit name='units'/>
        <flag-bit name='water'/>
        <flag-bit name='magma'/>
        <flag-bit name='citizens'/>
        <flag-bit name='resets'/>
        <flag-bit name='track'/>
    </bitfield-type>

    <struct-type type-name='pressure_plate_info' original-name='trigger_profilest'>
        <int32_t name='unit_min' init-value='50000'/>
        <int32_t name='unit_max' init-value='200000'/>
        <int8_t name='water_min' init-value='1'/>
        <int8_t name='water_max' init-value='7'/>
        <int8_t name='magma_min' init-value='1'/>
        <int8_t name='magma_max' init-value='7'/>
        <int32_t name='track_min' init-value='1' since='v0.34.08'/>
        <int32_t name='track_max' init-value='2000' since='v0.34.08'/>

        <bitfield name='flags' base-type='uint32_t' type-name='building_trap_trigger_flag' init-value='0x10'/>
    </struct-type>

    <bitfield-type type-name='track_stop_profile_flag' base-type='uint32_t'> bay12: TRACK_STOP_PROFILE_FLAG_*
        <flag-bit name='use_dump'/>
    </bitfield-type>

    <struct-type type-name='track_stop_profilest'>
        <int32_t name='friction' init-value='50000' since='v0.34.08'/>
        <bitfield name='track_flags' base-type='uint32_t' type-name='track_stop_profile_flag'/>
        <int32_t name='dump_x_shift' since='v0.34.08'/>
        <int32_t name='dump_y_shift' since='v0.34.08'/>
    </struct-type>

    <enum-type type-name='trap_type' base-type='int16_t'> bay12: BuildingTrapType
        <enum-item name="NONE" value='-1'/>
        <enum-item name="Lever"/>
        <enum-item name="PressurePlate"/>
        <enum-item name="CageTrap"/>
        <enum-item name="StoneFallTrap"/>
        <enum-item name="WeaponTrap"/>
        <enum-item name="TrackStop"/>
    </enum-type>

    <bitfield-type type-name='building_trap_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_TRAP_*
        <flag-bit name='disabled'/>
        <flag-bit name='disabling'/>
        <flag-bit name='enabling'/>
    </bitfield-type>

    <class-type type-name='building_trapst' inherits-from='building_actual'>
        <enum base-type='int16_t' name='trap_type' type-name='trap_type'/>
        <int8_t name='state' comment='!=0 = pulled, tripped/needs reloading'/>
        <int16_t name='ready_timeout' comment='plate not active if > 0'/>
        <int16_t name='fill_timer'/>
        <bitfield base-type='uint16_t' name='stop_flags' type-name='building_trap_flag'/>
        <stl-vector name='linked_mechanisms' pointer-type='item'/>
        <stl-vector name='observed_by_civs' type-name='int32_t' ref-target='historical_entity'/>

        <compound name='profile' type-name='workshop_profile'/>

        <compound name='plate_info' type-name='pressure_plate_info'/>

        <compound name='track_stop_info' type-name='track_stop_profilest'/>
        <int8_t name='stop_trigger_timer' since='v0.34.08'/>
    </class-type>

    <bitfield-type type-name='building_gear_assembly_flag' base-type='uint32_t'> bay12: BUILDINGFLAG_GEAR_ASSEMBLY_*
        <flag-bit name='disengaged'/>
    </bitfield-type>

    <class-type type-name='building_gear_assemblyst' inherits-from='building_actual'>
        <compound name='machine' type-name='machine_info'/>
        <bitfield name='gear_flags' base-type='uint32_t' type-name='building_gear_assembly_flag'/>
    </class-type>

    <class-type type-name='building_rollersst' inherits-from='building_actual'>
        <compound name='machine' type-name='machine_info'/>
        <enum name='direction' base-type='int32_t' type-name='screw_pump_direction'/>
        <int32_t name='speed' init-value='50000'/>
    </class-type>

    <class-type type-name='building_axle_horizontalst' inherits-from='building_actual'>
        <compound name='machine' type-name='machine_info'/>
        <bool name='is_vertical'/>
    </class-type>

    <class-type type-name='building_axle_verticalst' inherits-from='building_actual'>
        <compound name='machine' type-name='machine_info'/>
    </class-type>

    <bitfield-type type-name='building_support_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_SUPPORT_*
        <flag-bit name='triggered'/>
    </bitfield-type>

    <class-type type-name='building_supportst' inherits-from='building_actual'>
        <bitfield base-type='uint16_t' name='support_flags' type-name='building_support_flag'/>
    </class-type>

    <bitfield-type type-name='building_weapon_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_WEAPON_*
        <flag-bit name='retracted'/>
        <flag-bit name='retracting'/>
        <flag-bit name='unretracting'/>
    </bitfield-type>

    <class-type type-name='building_weaponst' inherits-from='building_actual'>
        <bitfield name='gate_flags' type-name='building_weapon_flag' init-value='1'/>
        <int8_t name='timer'/>
    </class-type>

    <class-type type-name='building_instrumentst' inherits-from='building_actual'>
        <uint32_t name='instrument_flag' comment='unused'/>
    </class-type>

    <class-type type-name='building_archerytargetst' inherits-from='building_actual'/>

    <enum-type type-name='screw_pump_direction'> bay12: BUILDING_SCREW_PUMP_DIR_*
        <enum-item name='FromNorth'/>
        <enum-item name='FromEast'/>
        <enum-item name='FromSouth'/>
        <enum-item name='FromWest'/>
    </enum-type>

    <class-type type-name='building_screw_pumpst' inherits-from='building_actual'>
        <compound name='machine' type-name='machine_info'/>

        <int8_t name='pump_energy' comment='decreases by 1 every frame. powering or manually pumping maintains near 100'/>

        <enum name='direction' base-type='int8_t' type-name='screw_pump_direction'/>

        <bool name='pump_manually'/>
    </class-type>

    <class-type type-name='building_water_wheelst' inherits-from='building_actual'>
        <compound name='machine' type-name='machine_info'/>
        <bool name='is_vertical'/>
        <bool name='gives_power'/>
    </class-type>

    <class-type type-name='building_windmillst' inherits-from='building_actual'>
        <compound name='machine' type-name='machine_info'/>

        <int16_t name="orient_x" init-value='-1'/>
        <int16_t name="orient_y"/>

        <int16_t name="is_working"/>
        <int8_t name="rotation"/>
        <int16_t name="rotate_timer"/>

        <int16_t name="orient_timer"/>
    </class-type>

    <bitfield-type type-name='building_chain_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_CHAIN_*
        <flag-bit name='triggered'/>
    </bitfield-type>

    <class-type type-name='building_chainst' inherits-from='building_actual'>
        <pointer name='assigned' type-name='unit'/>
        <pointer name='chained' type-name='unit'/>
        <bitfield base-type='uint16_t' name='chain_flags' type-name='building_chain_flag'/>
    </class-type>

    <bitfield-type type-name='building_cage_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_CAGE_*
        <flag-bit name='triggered'/>
        <flag-bit name='aquarium'/>
        <flag-bit name='check_occupants'/>
    </bitfield-type>

    <class-type type-name='building_cagest' inherits-from='building_actual'>
        <stl-vector name='assigned_units' type-name='int32_t' ref-target='unit'/>
        <stl-vector name='assigned_items' type-name='int32_t' ref-target='item'/>
        <bitfield base-type='uint16_t' name='cage_flags' type-name='building_cage_flag'/>
        <int16_t name='fill_timer'/>
    </class-type>

    <enum-type type-name='siegeengine_type' base-type='int16_t'> bay12: BuildingSiegeEngineType, no base type
        <enum-item name="Catapult"/>
        <enum-item name="Ballista"/>
    </enum-type>

    <class-type type-name='building_siegeenginest' inherits-from='building_actual'>
        <enum base-type='int16_t' name="type" type-name='siegeengine_type'/>
        <enum name='facing' base-type='int8_t'>
            <enum-item name='Left'/>
            <enum-item name='Up'/>
            <enum-item name='Right'/>
            <enum-item name='Down'/>
        </enum>
        <enum name='action' base-type='int8_t'>
            <enum-item name='NotInUse'/>
            <enum-item name='PrepareToFire'/>
            <enum-item name='FireAtWill'/>
        </enum>
        <int8_t name='fire_timer'/>
        <int16_t name='fill_timer'/>
    </class-type>

    <class-type type-name='building_traction_benchst' inherits-from='building_actual'>
        <uint16_t name='traction_flag' comment='unused'/>
        <compound name='users' type-name='building_users'/>
    </class-type>

    <class-type type-name='building_bedst' inherits-from='building_actual'>
        <int32_t name='specific_squad' ref-target='squad'/>
        <int32_t name='specific_position' init-value='-1'/>
        <compound name='users' type-name='building_users'/>
    </class-type>

    <bitfield-type type-name='building_table_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_TABLE_*
        <flag-bit name='meeting_hall'/>
    </bitfield-type>

    <class-type type-name='building_tablest' inherits-from='building_actual'>
        <bitfield name='table_flags' base-type='uint16_t' type-name='building_table_flag'/>
        <compound name='users' type-name='building_users'/>
    </class-type>

    <class-type type-name='building_chairst' inherits-from='building_actual'>
        <uint16_t name='chair_flag' comment='unused'/>
        <compound name='users' type-name='building_users'/>
    </class-type>

    <bitfield-type type-name='building_shop_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_SHOP_*
        <flag-bit name='for_sale'/>
    </bitfield-type>

    <enum-type type-name='shop_type' base-type='int16_t'> bay12: BuildingShopType
        <enum-item name="GeneralStore"/>
        <enum-item name="CraftsMarket"/>
        <enum-item name="ClothingShop"/>
        <enum-item name="ExoticClothingShop"/>
    </enum-type>

    <class-type type-name='building_shopst' inherits-from='building_actual'>
        <pointer type-name='unit' name='owner'/>
        <int32_t name='timer' comment='increments until reaching 200,000,000'/>
        <bitfield name='shop_flags' base-type='uint16_t' type-name='building_shop_flag' init-value='1'/>
        <enum base-type='int16_t' name="type" type-name='shop_type'/>
    </class-type>

    <class-type type-name='building_coffinst' inherits-from='building_actual'/>

    <bitfield-type type-name='well_tag' base-type='uint8_t'> bay12: WELLTAG_*
        <flag-bit name='north'/>
        <flag-bit name='south'/>
        <flag-bit name='east'/>
        <flag-bit name='west'/>
        <flag-bit name='northeast'/>
        <flag-bit name='northwest'/>
        <flag-bit name='southeast'/>
        <flag-bit name='southwest'/>
    </bitfield-type>

    <bitfield-type type-name='building_well_flag' base-type='uint16_t'> bay12: BUILDINGFLAG_WELL_*
        <flag-bit name='lowering'/>
        <flag-bit name='just_raised'/>
    </bitfield-type>

    <class-type type-name='building_wellst' inherits-from='building_actual'>
        <bitfield name='well_flags' base-type='uint16_t' type-name='building_well_flag'/>
        <bitfield name='well_tag' base-type='uint8_t' type-name='well_tag'/>
        <int16_t name='bucket_z'/>
        <int8_t name='bucket_timer' comment='0-9; counts up when raising, down when lowering'/>
        <int16_t name='check_water_timer' comment='bay12: useless_timer'/>
    </class-type>

    <class-type type-name='building_statuest' inherits-from='building_actual'>
        <uint16_t name='statue_flag' comment='unused'/>
    </class-type>

    <class-type type-name='building_slabst' inherits-from='building_actual'>
        <uint16_t name='slab_flag' comment='unused'/>
    </class-type>

    <class-type type-name='building_windowst' inherits-from='building_actual'>
        <uint16_t name='window_flag' comment='unused'/>
    </class-type>

    <class-type type-name='building_window_glassst' inherits-from='building_windowst'/>

    <class-type type-name='building_window_gemst' inherits-from='building_windowst'/>

    <bitfield-type type-name='building_farmplot_flag' base-type='uint32_t'> bay12: BUILDINGFLAG_FARMPLOT_*
        <flag-bit name='seasonal_fertilize'/>
    </bitfield-type>

    <class-type type-name='building_farmplotst' inherits-from='building_actual'>
        <static-array name='plant_id' count='4'>
            <int16_t ref-target='plant_raw'/>
        </static-array>
        <int32_t name='material_amount'/>
        <bitfield name='farm_flags' base-type='uint32_t' type-name='building_farmplot_flag'/>
        <enum name='last_season' type-name='season' init-value='None'/>
        <int32_t name='current_fertilization'/>
        <int32_t name='max_fertilization'/>
        <int16_t name='terrain_purge_timer' init-value='500'/>
    </class-type>

    <class-type type-name='building_animaltrapst' inherits-from='building_actual'>
        <int16_t name='bait_type' init-value='-1'/>
        <int16_t name='fill_timer'/>
    </class-type>

    <enum-type type-name='furnace_type' base-type='int16_t'> bay12: BuildingFurnaceType
        <enum-attr name='name' use-key-name='true'/>

        <enum-item name="NONE" value='-1'/>

        <enum-item name="WoodFurnace">
            <item-attr name='name' value='Wood Furnace'/>
        </enum-item>
        <enum-item name="Smelter"/>
        <enum-item name="GlassFurnace">
            <item-attr name='name' value='Glass Furnace'/>
        </enum-item>
        <enum-item name="Kiln"/>
        <enum-item name="MagmaSmelter">
            <item-attr name='name' value='Magma Smelter'/>
        </enum-item>
        <enum-item name="MagmaGlassFurnace">
            <item-attr name='name' value='Magma Glass Furnace'/>
        </enum-item>
        <enum-item name="MagmaKiln">
            <item-attr name='name' value='Magma Kiln'/>
        </enum-item>
        <enum-item name="Custom">
            <item-attr name='name' value='Custom Furnace'/>
        </enum-item>
    </enum-type>

    <class-type type-name='building_furnacest' inherits-from='building_actual'>
        <stl-vector name='melt_remainder' type-name='int32_t'
                    index-refers-to='(material-by-id 0 $)'/>

        <uint16_t name="furnace_flag" comment='unused'/>

        <enum base-type='int16_t' name="type" type-name='furnace_type'/>

        <compound name='profile' type-name='workshop_profile'/>

        <int32_t name="custom_type" ref-target='building_def'/>
    </class-type>

    <enum-type type-name='workshop_type' base-type='int16_t'> bay12: BuildingWorkshopType
        <enum-attr name='name' use-key-name='true'/>

        <enum-item name="NONE" value='-1'/>

        <enum-item name="Carpenters">
            <item-attr name='name' value="Carpenter's Workshop"/>
        </enum-item>
        <enum-item name="Farmers">
            <item-attr name='name' value="Farmer's Workshop"/>
        </enum-item>
        <enum-item name="Masons">
            <item-attr name='name' value="Mason's Workshop"/>
        </enum-item>
        <enum-item name="Craftsdwarfs">
            <item-attr name='name' value="Craftsdwarf's Workshop"/>
        </enum-item>
        <enum-item name="Jewelers">
            <item-attr name='name' value="Jeweler's Workshop"/>
        </enum-item>

        <enum-item name="MetalsmithsForge">
            <item-attr name='name' value="Metalsmith's Forge"/>
        </enum-item>
        <enum-item name="MagmaForge">
            <item-attr name='name' value="Magma Forge"/>
        </enum-item>
        <enum-item name="Bowyers">
            <item-attr name='name' value="Bowyer's Workshop"/>
        </enum-item>
        <enum-item name="Mechanics">
            <item-attr name='name' value="Mechanic's Workshop"/>
        </enum-item>
        <enum-item name="Siege">
            <item-attr name='name' value="Siege Workshop"/>
        </enum-item>

        <enum-item name="Butchers">
            <item-attr name='name' value="Butcher's Shop"/>
        </enum-item>
        <enum-item name="Leatherworks">
            <item-attr name='name' value="Leather Works"/>
        </enum-item>
        <enum-item name="Tanners">
            <item-attr name='name' value="Tanner's Shop"/>
        </enum-item>
        <enum-item name="Clothiers">
            <item-attr name='name' value="Clothier's Shop"/>
        </enum-item>
        <enum-item name="Fishery"/>

        <enum-item name="Still"/>
        <enum-item name="Loom"/>
        <enum-item name="Quern"/>
        <enum-item name="Kennels"/>
        <enum-item name="Kitchen"/>

        <enum-item name="Ashery"/>
        <enum-item name="Dyers">
            <item-attr name='name' value="Dyer's Shop"/>
        </enum-item>
        <enum-item name="Millstone"/>
        <enum-item name="Custom">
            <item-attr name='name' value="Custom Workshop"/>
        </enum-item>
        <enum-item name="Tool"/>
    </enum-type>

    <class-type type-name='building_workshopst' inherits-from='building_actual'>
        <enum base-type='int16_t' name="type" type-name='workshop_type'/>

        <compound name='profile' type-name='workshop_profile'/>

        <compound name='machine' type-name='machine_info'/>

        <int32_t name="custom_type" ref-target='building_def'/>
    </class-type>

    <bitfield-type type-name='building_tradedepot_flag' base-type='uint32_t'> bay12: BUILDINGFLAG_DEPOT_*
        <flag-bit name='trader_requested'/>
        <flag-bit name='anyone_can_trade'/>
    </bitfield-type>

    <class-type type-name='building_tradedepotst' inherits-from='building_actual'>
        <bitfield name='trade_flags' base-type='uint32_t' type-name='building_tradedepot_flag'/>
        <bool name='accessible'/>
    </class-type>

    <class-type type-name='building_nestst' inherits-from='building_actual'/>

    <class-type type-name='building_nest_boxst' inherits-from='building_actual'>
        <int32_t name='claimed_by' ref-target='unit'/>
        <int32_t name='claim_timeout' comment='counts up if the nest box is claimed but empty. when it hits 8400 ticks, the nest box is unclaimed.'/>
    </class-type>

    <class-type type-name='building_bookcasest' inherits-from='building_actual'/>

    <class-type type-name='building_offering_placest' inherits-from='building_actual'/>

    <class-type type-name='building_display_furniturest' inherits-from='building_actual'>
        <stl-vector name='displayed_items' type-name='int32_t' ref-target='item'/>
    </class-type>

    <bitfield-type type-name='building_hive_flag' base-type='uint32_t'> bay12: BUILDING_HIVE_FLAG_*
        <flag-bit name='do_install'/>
        <flag-bit name='do_gather'/>
        <flag-bit name='ready_split'/>
    </bitfield-type>

    <class-type type-name='building_hivest' inherits-from='building_actual'>
        <bitfield name='hive_flags' type-name='building_hive_flag'/>
        <int32_t name='split_timer' comment='up to 100800'/>
        <int32_t name='activity_timer' comment='up to 100800000; checks timer%hive_product.time[i]==0'/>
        <int32_t name='install_timer' comment='down from 1200'/>
        <int32_t name='gather_timer' comment='down from 1200'/>
    </class-type>

    <class-type type-name='building_wagonst' inherits-from='building_actual'/>


    <class-type type-name='building_roadst' inherits-from='building_actual'>
        <int32_t name='material_amount'/>
    </class-type>

    <class-type type-name='building_road_dirtst' inherits-from='building_roadst'/>

    <class-type type-name='building_road_pavedst' inherits-from='building_roadst'>
        <int16_t name='terrain_purge_timer' init-value='500'/>
    </class-type>

    <enum-type type-name='construction_type' base-type='int16_t'> bay12: BuildingConstructionType
        <enum-item name="NONE" value='-1' comment='unused'/>
        <enum-item name="Fortification"/>
        <enum-item name="Wall"/>
        <enum-item name="Floor"/>
        <enum-item name="UpStair"/>
        <enum-item name="DownStair"/>
        <enum-item name="UpDownStair"/>
        <enum-item name="Ramp"/>
        <enum-item name="TrackN"/>
        <enum-item name="TrackS"/>
        <enum-item name="TrackE"/>
        <enum-item name="TrackW"/>
        <enum-item name="TrackNS"/>
        <enum-item name="TrackNE"/>
        <enum-item name="TrackNW"/>
        <enum-item name="TrackSE"/>
        <enum-item name="TrackSW"/>
        <enum-item name="TrackEW"/>
        <enum-item name="TrackNSE"/>
        <enum-item name="TrackNSW"/>
        <enum-item name="TrackNEW"/>
        <enum-item name="TrackSEW"/>
        <enum-item name="TrackNSEW"/>
        <enum-item name="TrackRampN"/>
        <enum-item name="TrackRampS"/>
        <enum-item name="TrackRampE"/>
        <enum-item name="TrackRampW"/>
        <enum-item name="TrackRampNS"/>
        <enum-item name="TrackRampNE"/>
        <enum-item name="TrackRampNW"/>
        <enum-item name="TrackRampSE"/>
        <enum-item name="TrackRampSW"/>
        <enum-item name="TrackRampEW"/>
        <enum-item name="TrackRampNSE"/>
        <enum-item name="TrackRampNSW"/>
        <enum-item name="TrackRampNEW"/>
        <enum-item name="TrackRampSEW"/>
        <enum-item name="TrackRampNSEW"/>
    </enum-type>

    <class-type type-name='building_constructionst' inherits-from='building_actual'>
        <enum name='type' type-name='construction_type' base-type='int16_t'/>
    </class-type>

    -- Helper type for building_handlerst
    <enum-type type-name='buildings_other_id'>
        <enum-attr name='building' type-name='building_type' default-value='NONE'/>
        <enum-attr name='generic_building' type-name='building_type' is-list='true'/>
        <enum-attr name='workshop' type-name='workshop_type' is-list='true'/>
        <enum-attr name='furnace' type-name='furnace_type' is-list='true'/>
        <enum-attr name='civzone' type-name='civzone_type' is-list='true'/>

        <enum-item name='ANY' value='-1'/>

        -- 0

        <enum-item name='IN_PLAY' comment='actually on the map, as opposed to in an offloaded fortress elsewhere'/>
        <enum-item name='STOCKPILE'>
            <item-attr name='building' value='Stockpile'/>
        </enum-item>
        <enum-item name='ANY_ZONE'>
            <item-attr name='building' value='Civzone'/>
        </enum-item>
        <enum-item name='ACTIVITY_ZONE'>
            <item-attr name='building' value='Civzone'/>
            <!-- <item-attr name='civzone' value='ActivityZone'/> -->
        </enum-item>

        -- 98 different civzone subtypes
        <enum-item name='ZONE_HOME'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Home'/>
        </enum-item>
        <enum-item name='ZONE_DEPOT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Depot'/>
        </enum-item>
        <enum-item name='ZONE_STOCKPILE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Stockpile'/>
        </enum-item>
        <enum-item name='ZONE_NOBLE_QUARTERS'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='NobleQuarters'/>
        </enum-item>
        <enum-item name='ZONE_SHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Shop'/>
        </enum-item>
        <enum-item name='ZONE_INVALID5'/>
        <enum-item name='ZONE_INVALID6'/>
        <enum-item name='ZONE_MEAD_HALL'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='MeadHall'/>
        </enum-item>
        <enum-item name='ZONE_THRONE_ROOM'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ThroneRoom'/>
        </enum-item>
        <enum-item name='ZONE_INVALID9'/>

        <enum-item name='ZONE_TEMPLE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Temple'/>
        </enum-item>
        <enum-item name='ZONE_KITCHEN'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Kitchen'/>
        </enum-item>
        <enum-item name='ZONE_CAPTIVE_ROOM'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='CaptiveRoom'/>
        </enum-item>
        <enum-item name='ZONE_TOWER_TOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TowerTop'/>
        </enum-item>
        <enum-item name='ZONE_COURTYARD'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Courtyard'/>
        </enum-item>
        <enum-item name='ZONE_TREASURY'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Treasury'/>
        </enum-item>
        <enum-item name='ZONE_GUARD_POST'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='GuardPost'/>
        </enum-item>
        <enum-item name='ZONE_ENTRANCE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Entrance'/>
        </enum-item>
        <enum-item name='ZONE_SECRET_LIBRARY'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='SecretLibrary'/>
        </enum-item>
        <enum-item name='ZONE_LIBRARY'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Library'/>
        </enum-item>

        <enum-item name='ZONE_PLOT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Plot'/>
        </enum-item>
        <enum-item name='ZONE_MARKET_STALL'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='MarketStall'/>
        </enum-item>
        <enum-item name='ZONE_ROAD_CENTER'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='RoadCenter'/>
        </enum-item>
        <enum-item name='ZONE_CAMPGROUND'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Campground'/>
        </enum-item>
        <enum-item name='ZONE_COMMAND_TENT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='CommandTent'/>
        </enum-item>
        <enum-item name='ZONE_TENT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Tent'/>
        </enum-item>
        <enum-item name='ZONE_COMMAND_TENT_BLD'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='CommandTentBld'/>
        </enum-item>
        <enum-item name='ZONE_TENT_BLD'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TentBld'/>
        </enum-item>
        <enum-item name='ZONE_MECHANISM_ROOM'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='MechanismRoom'/>
        </enum-item>
        <enum-item name='ZONE_DUNGEON_CELL'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='DungeonCell'/>
        </enum-item>

        <enum-item name='ZONE_ANIMAL_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='AnimalPit'/>
        </enum-item>
        <enum-item name='ZONE_CLOTH_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ClothPit'/>
        </enum-item>
        <enum-item name='ZONE_TANNING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TanningPit'/>
        </enum-item>
        <enum-item name='ZONE_CLOTH_CLOTHING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ClothClothingPit'/>
        </enum-item>
        <enum-item name='ZONE_LEATHER_CLOTHING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='LeatherClothingPit'/>
        </enum-item>
        <enum-item name='ZONE_BONE_CARVING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='BoneCarvingPit'/>
        </enum-item>
        <enum-item name='ZONE_GEM_CUTTING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='GemCuttingPit'/>
        </enum-item>
        <enum-item name='ZONE_WEAPONSMITHING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='WeaponsmithingPit'/>
        </enum-item>
        <enum-item name='ZONE_BOWMAKING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='BowmakingPit'/>
        </enum-item>
        <enum-item name='ZONE_BLACKSMITHING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='BlacksmithingPit'/>
        </enum-item>

        <enum-item name='ZONE_ARMORSMITHING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ArmorsmithingPit'/>
        </enum-item>
        <enum-item name='ZONE_METAL_CRAFTING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='MetalCraftingPit'/>
        </enum-item>
        <enum-item name='ZONE_LEATHERWORKING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='LeatherworkingPit'/>
        </enum-item>
        <enum-item name='ZONE_CARPENTRY_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='CarpentryPit'/>
        </enum-item>
        <enum-item name='ZONE_STONEWORKING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='StoneworkingPit'/>
        </enum-item>
        <enum-item name='ZONE_FORGING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ForgingPit'/>
        </enum-item>
        <enum-item name='ZONE_FIGHTING_PIT'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='FightingPit'/>
        </enum-item>
        <enum-item name='ZONE_WELL'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Well'/>
        </enum-item>
        <enum-item name='ZONE_ROAD_EXIT_NORTH'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='RoadExitNorth'/>
        </enum-item>
        <enum-item name='ZONE_ROAD_EXIT_SOUTH'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='RoadExitSouth'/>
        </enum-item>

        <enum-item name='ZONE_ROAD_EXIT_EAST'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='RoadExitEast'/>
        </enum-item>
        <enum-item name='ZONE_ROAD_EXIT_WEST'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='RoadExitWest'/>
        </enum-item>
        <enum-item name='ZONE_TUNNEL_CENTER'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TunnelCenter'/>
        </enum-item>
        <enum-item name='ZONE_ANIMAL_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='AnimalWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_CLOTH_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ClothWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_TANNING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TanningWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_CLOTH_CLOTHING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ClothClothingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_LEATHER_CLOTHING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='LeatherClothingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_BONE_CARVING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='BoneCarvingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_GEM_CUTTING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='GemCuttingWorkshop'/>
        </enum-item>

        <enum-item name='ZONE_WEAPONSMITHING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='WeaponsmithingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_BOWMAKING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='BowmakingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_BLACKSMITHING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='BlacksmithingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_ARMORSMITHING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ArmorsmithingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_METAL_CRAFTING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='MetalCraftingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_LEATHERWORKING_SHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='LeatherworkingShop'/>
        </enum-item>
        <enum-item name='ZONE_CARPENTRY_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='CarpentryWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_STONEWORKING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='StoneworkingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_FORGING_WORKSHOP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ForgingWorkshop'/>
        </enum-item>
        <enum-item name='ZONE_COUNTING_HOUSE_OFFICES'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='CountingHouseOffices'/>
        </enum-item>

        <enum-item name='ZONE_COUNTING_HOUSE_STORAGE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='CountingHouseStorage'/>
        </enum-item>
        <enum-item name='ZONE_GUILDHALL_OFFICES'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='GuildhallOffices'/>
        </enum-item>
        <enum-item name='ZONE_GUILDHALL_STORAGE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='GuildhallStorage'/>
        </enum-item>
        <enum-item name='ZONE_TOWER_ENTRANCE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TowerEntrance'/>
        </enum-item>
        <enum-item name='ZONE_TOWER_FEASTHALL'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TowerFeasthall'/>
        </enum-item>
        <enum-item name='ZONE_TOWER_BEDROOM'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TowerBedroom'/>
        </enum-item>
        <enum-item name='ZONE_TOWER_TREASURY'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TowerTreasury'/>
        </enum-item>
        <enum-item name='ZONE_TOWER_DUNGEON'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TowerDungeon'/>
        </enum-item>
        <enum-item name='ZONE_TOWER_ATTIC'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='TowerAttic'/>
        </enum-item>
        <enum-item name='ZONE_DORMITORY'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Dormitory'/>
        </enum-item>

        <enum-item name='ZONE_DINING_HALL'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='DiningHall'/>
        </enum-item>
        <enum-item name='ZONE_SHRINE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Shrine'/>
        </enum-item>
        <enum-item name='ZONE_WATER_SOURCE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='WaterSource'/>
        </enum-item>
        <enum-item name='ZONE_DUMP'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Dump'/>
        </enum-item>
        <enum-item name='ZONE_SAND_COLLECTION'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='SandCollection'/>
        </enum-item>
        <enum-item name='ZONE_FISHING_AREA'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='FishingArea'/>
        </enum-item>
        <enum-item name='ZONE_POND'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Pond'/>
        </enum-item>
        <enum-item name='ZONE_MEETING_HALL'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='MeetingHall'/>
        </enum-item>
        <enum-item name='ZONE_PEN'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Pen'/>
        </enum-item>
        <enum-item name='ZONE_CLAY_COLLECTION'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ClayCollection'/>
        </enum-item>

        <enum-item name='ZONE_ANIMAL_TRAINING'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='AnimalTraining'/>
        </enum-item>
        <enum-item name='ZONE_PLANT_GATHERING'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='PlantGathering'/>
        </enum-item>
        <enum-item name='ZONE_BEDROOM'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Bedroom'/>
        </enum-item>
        <enum-item name='ZONE_OFFICE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Office'/>
        </enum-item>
        <enum-item name='ZONE_ARCHERY_RANGE'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='ArcheryRange'/>
        </enum-item>
        <enum-item name='ZONE_BARRACKS'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Barracks'/>
        </enum-item>
        <enum-item name='ZONE_DUNGEON'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Dungeon'/>
        </enum-item>
        <enum-item name='ZONE_TOMB'>
            <item-attr name='building' value='Civzone'/>
            <item-attr name='civzone' value='Tomb'/>
        </enum-item>

        <enum-item name='LOCATION_ASSIGNED' comment='AB_BLD_ZONE'>
            <item-attr name='generic_building' value='Bed'/>
            <item-attr name='generic_building' value='Civzone'/>
        </enum-item>
        <enum-item name='ANY_ACTUAL'>
            -- everything but stockpile and civzone
        </enum-item>

        <enum-item name='ANY_MACHINE'>
            <item-attr name='generic_building' value='ScrewPump'/>
            <item-attr name='generic_building' value='GearAssembly'/>
            <item-attr name='generic_building' value='AxleHorizontal'/>
            <item-attr name='generic_building' value='AxleVertical'/>
            <item-attr name='generic_building' value='WaterWheel'/>
            <item-attr name='generic_building' value='Windmill'/>

            <item-attr name='generic_building' value='Workshop'/>
            <item-attr name='workshop' value='Millstone'/>
        </enum-item>
        <enum-item name='ANY_HOSPITAL_STORAGE' comment='chestcheck'>
            -- speculated
            <item-attr name='generic_building' value='Box'/>
            <item-attr name='generic_building' value='Cabinet'/>
        </enum-item>
        <enum-item name='ANY_STORAGE'>
            -- speculated
            <item-attr name='generic_building' value='Box'/>
            <item-attr name='generic_building' value='Cabinet'/>
            <item-attr name='generic_building' value='Weaponrack'/>
            <item-attr name='generic_building' value='Armorstand'/>
        </enum-item>
        <enum-item name='ANY_BARRACKS'>
            <item-attr name='generic_building' value='Bed'/>
            <item-attr name='generic_building' value='Box'/>
            <item-attr name='generic_building' value='Cabinet'/>
            <item-attr name='generic_building' value='Weaponrack'/>
            <item-attr name='generic_building' value='Armorstand'/>
        </enum-item>

        -- 11

        <enum-item name='ANY_HOSPITAL'>
            <item-attr name='generic_building' value='Bed'/>
            <item-attr name='generic_building' value='TractionBench'/>
        </enum-item>
        <enum-item name='BOX'>
            <item-attr name='building' value='Box'/>
        </enum-item>
        <enum-item name='CABINET'>
            <item-attr name='building' value='Cabinet'/>
        </enum-item>
        <enum-item name='TRAP'>
            <item-attr name='building' value='Trap'/>
        </enum-item>
        <enum-item name='DOOR'>
            <item-attr name='building' value='Door'/>
        </enum-item>

        <enum-item name='FLOODGATE'>
            <item-attr name='building' value='Floodgate'/>
        </enum-item>
        <enum-item name='HATCH'>
            <item-attr name='building' value='Hatch'/>
        </enum-item>
        <enum-item name='GRATE_WALL'>
            <item-attr name='building' value='GrateWall'/>
        </enum-item>
        <enum-item name='GRATE_FLOOR'>
            <item-attr name='building' value='GrateFloor'/>
        </enum-item>
        <enum-item name='BARS_VERTICAL'>
            <item-attr name='building' value='BarsVertical'/>
        </enum-item>

        -- 21

        <enum-item name='BARS_FLOOR'>
            <item-attr name='building' value='BarsFloor'/>
        </enum-item>
        <enum-item name='WINDOW_ANY'>
            <item-attr name='generic_building' value='WindowGlass'/>
            <item-attr name='generic_building' value='WindowGem'/>
        </enum-item>
        <enum-item name='WELL'>
            <item-attr name='building' value='Well'/>
        </enum-item>
        <enum-item name='TABLE'>
            <item-attr name='building' value='Table'/>
        </enum-item>
        <enum-item name='BRIDGE'>
            <item-attr name='building' value='Bridge'/>
        </enum-item>

        <enum-item name='CHAIR'>
            <item-attr name='building' value='Chair'/>
        </enum-item>
        <enum-item name='TRADE_DEPOT'>
            <item-attr name='building' value='TradeDepot'/>
        </enum-item>
        <enum-item name='NEST'>
            <item-attr name='building' value='Nest'/>
        </enum-item>
        <enum-item name='NEST_BOX'>
            <item-attr name='building' value='NestBox'/>
        </enum-item>
        <enum-item name='BOOKCASE'>
            <item-attr name='building' value='Bookcase'/>
        </enum-item>

        <enum-item name='DISPLAY_CASE' since='v0.44.01'>
            <item-attr name='building' value='DisplayFurniture'/>
        </enum-item>
        <enum-item name='HIVE'>
            <item-attr name='building' value='Hive'/>
        </enum-item>

        -- 33

        <enum-item name='WAGON'>
            <item-attr name='building' value='Wagon'/>
        </enum-item>
        <enum-item name='SHOP'>
            <item-attr name='building' value='Shop'/>
        </enum-item>
        <enum-item name='BED'>
            <item-attr name='building' value='Bed'/>
        </enum-item>
        <enum-item name='TRACTION_BENCH'>
            <item-attr name='building' value='TractionBench'/>
        </enum-item>
        <enum-item name='ANY_ROAD'>
            <item-attr name='generic_building' value='RoadDirt'/>
            <item-attr name='generic_building' value='RoadPaved'/>
        </enum-item>

        <enum-item name='FARM_PLOT'>
            <item-attr name='building' value='FarmPlot'/>
        </enum-item>
        <enum-item name='GEAR_ASSEMBLY'>
            <item-attr name='building' value='GearAssembly'/>
        </enum-item>
        <enum-item name='ROLLERS'>
            <item-attr name='building' value='Rollers'/>
        </enum-item>
        <enum-item name='AXLE_HORIZONTAL'>
            <item-attr name='building' value='AxleHorizontal'/>
        </enum-item>
        <enum-item name='AXLE_VERTICAL'>
            <item-attr name='building' value='AxleVertical'/>
        </enum-item>
        <enum-item name='SUPPORT'>
            <item-attr name='building' value='Support'/>
        </enum-item>

        -- 43

        <enum-item name='ARCHERY_TARGET'>
            <item-attr name='building' value='ArcheryTarget'/>
        </enum-item>
        <enum-item name='SCREW_PUMP'>
            <item-attr name='building' value='ScrewPump'/>
        </enum-item>
        <enum-item name='WATER_WHEEL'>
            <item-attr name='building' value='WaterWheel'/>
        </enum-item>
        <enum-item name='WINDMILL'>
            <item-attr name='building' value='Windmill'/>
        </enum-item>
        <enum-item name='CHAIN'>
            <item-attr name='building' value='Chain'/>
        </enum-item>

        <enum-item name='CAGE'>
            <item-attr name='building' value='Cage'/>
        </enum-item>
        <enum-item name='STATUE'>
            <item-attr name='building' value='Statue'/>
        </enum-item>
        <enum-item name='SLAB'>
            <item-attr name='building' value='Slab'/>
        </enum-item>
        <enum-item name='COFFIN'>
            <item-attr name='building' value='Coffin'/>
        </enum-item>
        <enum-item name='WEAPON_RACK'>
            <item-attr name='building' value='Weaponrack'/>
        </enum-item>

        -- 53

        <enum-item name='ARMOR_STAND'>
            <item-attr name='building' value='Armorstand'/>
        </enum-item>
        <enum-item name='FURNACE_ANY'>
            <item-attr name='building' value='Furnace'/>
        </enum-item>
        <enum-item name='FURNACE_WOOD'>
            <item-attr name='building' value='Furnace'/>
            <item-attr name='furnace' value='WoodFurnace'/>
        </enum-item>
        <enum-item name='FURNACE_SMELTER_ANY'>
            <item-attr name='building' value='Furnace'/>
            <item-attr name='furnace' value='Smelter'/>
            <item-attr name='furnace' value='MagmaSmelter'/>
        </enum-item>
        <enum-item name='FURNACE_SMELTER_MAGMA'>
            <item-attr name='building' value='Furnace'/>
            <item-attr name='furnace' value='MagmaSmelter'/>
        </enum-item>

        <enum-item name='FURNACE_KILN_ANY'>
            <item-attr name='building' value='Furnace'/>
            <item-attr name='furnace' value='Kiln'/>
            <item-attr name='furnace' value='MagmaKiln'/>
        </enum-item>
        <enum-item name='FURNACE_GLASS_ANY'>
            <item-attr name='building' value='Furnace'/>
            <item-attr name='furnace' value='GlassFurnace'/>
            <item-attr name='furnace' value='MagmaGlassFurnace'/>
        </enum-item>
        <enum-item name='FURNACE_CUSTOM'>
            <item-attr name='building' value='Furnace'/>
            <item-attr name='furnace' value='Custom'/>
        </enum-item>
        <enum-item name='WORKSHOP_ANY'>
            <item-attr name='building' value='Workshop'/>
        </enum-item>
        <enum-item name='WORKSHOP_BUTCHER'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Butchers'/>
        </enum-item>

        -- 63

        <enum-item name='WORKSHOP_MASON'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Masons'/>
        </enum-item>
        <enum-item name='WORKSHOP_KENNEL'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Kennels'/>
        </enum-item>
        <enum-item name='WORKSHOP_FISHERY'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Fishery'/>
        </enum-item>
        <enum-item name='WORKSHOP_JEWELER'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Jewelers'/>
        </enum-item>
        <enum-item name='WORKSHOP_LOOM'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Loom'/>
        </enum-item>

        <enum-item name='WORKSHOP_TANNER'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Tanners'/>
        </enum-item>
        <enum-item name='WORKSHOP_DYER'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Dyers'/>
        </enum-item>
        <enum-item name='WORKSHOP_MILL_ANY'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Quern'/>
            <item-attr name='workshop' value='Millstone'/>
        </enum-item>
        <enum-item name='WORKSHOP_QUERN'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Quern'/>
        </enum-item>
        <enum-item name='WORKSHOP_TOOL'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Tool'/>
        </enum-item>

        -- 73

        <enum-item name='WORKSHOP_MILLSTONE'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Millstone'/>
        </enum-item>
        <enum-item name='WORKSHOP_KITCHEN'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Kitchen'/>
        </enum-item>
        <enum-item name='WORKSHOP_STILL'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Still'/>
        </enum-item>
        <enum-item name='WORKSHOP_FARMER'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Farmers'/>
        </enum-item>
        <enum-item name='WORKSHOP_ASHERY'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Ashery'/>
        </enum-item>

        <enum-item name='WORKSHOP_CARPENTER'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Carpenters'/>
        </enum-item>
        <enum-item name='WORKSHOP_CRAFTSDWARF'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Craftsdwarfs'/>
        </enum-item>
        <enum-item name='WORKSHOP_MECHANIC'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Mechanics'/>
        </enum-item>
        <enum-item name='WORKSHOP_SIEGE'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Siege'/>
        </enum-item>
        <enum-item name='WORKSHOP_CLOTHIER'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Clothiers'/>
        </enum-item>

        -- 83

        <enum-item name='WORKSHOP_LEATHER'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Leatherworks'/>
        </enum-item>
        <enum-item name='WORKSHOP_BOWYER'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Bowyers'/>
        </enum-item>
        <enum-item name='WORKSHOP_MAGMA_FORGE'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='MagmaForge'/>
        </enum-item>
        <enum-item name='WORKSHOP_FORGE_ANY'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='MetalsmithsForge'/>
            <item-attr name='workshop' value='MagmaForge'/>
        </enum-item>
        <enum-item name='WORKSHOP_CUSTOM'>
            <item-attr name='building' value='Workshop'/>
            <item-attr name='workshop' value='Custom'/>
        </enum-item>

        <enum-item name='WEAPON_UPRIGHT'>
            <item-attr name='building' value='Weapon'/>
        </enum-item>
        <enum-item name='INSTRUMENT_STATIONARY'>
            <item-attr name='building' value='Instrument'/>
        </enum-item>
        <enum-item name='OFFERING_PLACE' since='v0.47.01'>
            <item-attr name='building' value='OfferingPlace'/>
        </enum-item>
    </enum-type>

    -- Helper type for building_handlerst
    <df-other-vectors-type type-name='buildings_other' index-enum='buildings_other_id' item-type='building'>
        <stl-vector name='STOCKPILE' pointer-type='building_stockpilest'/>
        <stl-vector name='ANY_ZONE' pointer-type='building_civzonest'/>
        <stl-vector name='ACTIVITY_ZONE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_HOME' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_DEPOT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_STOCKPILE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_NOBLE_QUARTERS' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_SHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_INVALID5' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_INVALID6' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_MEAD_HALL' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_THRONE_ROOM' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_INVALID9' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TEMPLE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_KITCHEN' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_CAPTIVE_ROOM' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TOWER_TOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_COURTYARD' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TREASURY' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_GUARD_POST' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ENTRANCE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_SECRET_LIBRARY' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_LIBRARY' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_PLOT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_MARKET_STALL' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ROAD_CENTER' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_CAMPGROUND' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_COMMAND_TENT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TENT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_COMMAND_TENT_BLD' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TENT_BLD' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_MECHANISM_ROOM' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_DUNGEON_CELL' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ANIMAL_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_CLOTH_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TANNING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_CLOTH_CLOTHING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_LEATHER_CLOTHING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_BONE_CARVING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_GEM_CUTTING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_WEAPONSMITHING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_BOWMAKING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_BLACKSMITHING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ARMORSMITHING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_METAL_CRAFTING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_LEATHERWORKING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_CARPENTRY_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_STONEWORKING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_FORGING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_FIGHTING_PIT' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_WELL' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ROAD_EXIT_NORTH' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ROAD_EXIT_SOUTH' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ROAD_EXIT_EAST' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ROAD_EXIT_WEST' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TUNNEL_CENTER' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ANIMAL_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_CLOTH_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TANNING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_CLOTH_CLOTHING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_LEATHER_CLOTHING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_BONE_CARVING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_GEM_CUTTING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_WEAPONSMITHING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_BOWMAKING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_BLACKSMITHING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ARMORSMITHING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_METAL_CRAFTING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_LEATHERWORKING_SHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_CARPENTRY_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_STONEWORKING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_FORGING_WORKSHOP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_COUNTING_HOUSE_OFFICES' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_COUNTING_HOUSE_STORAGE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_GUILDHALL_OFFICES' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_GUILDHALL_STORAGE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TOWER_ENTRANCE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TOWER_FEASTHALL' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TOWER_BEDROOM' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TOWER_TREASURY' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TOWER_DUNGEON' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TOWER_ATTIC' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_DORMITORY' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_DINING_HALL' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_SHRINE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_WATER_SOURCE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_DUMP' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_SAND_COLLECTION' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_FISHING_AREA' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_POND' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_MEETING_HALL' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_PEN' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_CLAY_COLLECTION' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ANIMAL_TRAINING' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_PLANT_GATHERING' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_BEDROOM' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_OFFICE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_ARCHERY_RANGE' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_BARRACKS' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_DUNGEON' pointer-type='building_civzonest'/>
        <stl-vector name='ZONE_TOMB' pointer-type='building_civzonest'/>
        <stl-vector name='LOCATION_ASSIGNED' pointer-type='building_civzonest'/>
        <stl-vector name='ANY_ACTUAL' pointer-type='building_actual'/>
        <stl-vector name='ANY_MACHINE' pointer-type='building_actual'/>
        <stl-vector name='ANY_HOSPITAL_STORAGE' pointer-type='building_actual'/>
        <stl-vector name='ANY_STORAGE' pointer-type='building_actual'/>
        <stl-vector name='ANY_BARRACKS' pointer-type='building_actual'/>
        <stl-vector name='ANY_HOSPITAL' pointer-type='building_actual'/>
        <stl-vector name='BOX' pointer-type='building_boxst'/>
        <stl-vector name='CABINET' pointer-type='building_cabinetst'/>
        <stl-vector name='TRAP' pointer-type='building_trapst'/>
        <stl-vector name='DOOR' pointer-type='building_doorst'/>
        <stl-vector name='FLOODGATE' pointer-type='building_floodgatest'/>
        <stl-vector name='HATCH' pointer-type='building_hatchst'/>
        <stl-vector name='GRATE_WALL' pointer-type='building_grate_wallst'/>
        <stl-vector name='GRATE_FLOOR' pointer-type='building_grate_floorst'/>
        <stl-vector name='BARS_VERTICAL' pointer-type='building_bars_verticalst'/>
        <stl-vector name='BARS_FLOOR' pointer-type='building_bars_floorst'/>
        <stl-vector name='WELL' pointer-type='building_wellst'/>
        <stl-vector name='TABLE' pointer-type='building_tablest'/>
        <stl-vector name='BRIDGE' pointer-type='building_bridgest'/>
        <stl-vector name='CHAIR' pointer-type='building_chairst'/>
        <stl-vector name='TRADE_DEPOT' pointer-type='building_tradedepotst'/>
        <stl-vector name='NEST' pointer-type='building_nestst'/>
        <stl-vector name='NEST_BOX' pointer-type='building_nest_boxst'/>
        <stl-vector name='BOOKCASE' pointer-type='building_bookcasest'/>
        <stl-vector name='DISPLAY_CASE' pointer-type='building_display_furniturest' since='v0.44.01'/>
        <stl-vector name='HIVE' pointer-type='building_hivest'/>
        <stl-vector name='WAGON' pointer-type='building_wagonst'/>
        <stl-vector name='SHOP' pointer-type='building_shopst'/>
        <stl-vector name='BED' pointer-type='building_bedst'/>
        <stl-vector name='TRACTION_BENCH' pointer-type='building_traction_benchst'/>
        <stl-vector name='ANY_ROAD' pointer-type='building_roadst'/>
        <stl-vector name='FARM_PLOT' pointer-type='building_farmplotst'/>
        <stl-vector name='GEAR_ASSEMBLY' pointer-type='building_gear_assemblyst'/>
        <stl-vector name='ROLLERS' pointer-type='building_rollersst'/>
        <stl-vector name='AXLE_HORIZONTAL' pointer-type='building_axle_horizontalst'/>
        <stl-vector name='AXLE_VERTICAL' pointer-type='building_axle_verticalst'/>
        <stl-vector name='SUPPORT' pointer-type='building_supportst'/>
        <stl-vector name='ARCHERY_TARGET' pointer-type='building_archerytargetst'/>
        <stl-vector name='SCREW_PUMP' pointer-type='building_screw_pumpst'/>
        <stl-vector name='WATER_WHEEL' pointer-type='building_water_wheelst'/>
        <stl-vector name='WINDMILL' pointer-type='building_windmillst'/>
        <stl-vector name='CHAIN' pointer-type='building_chainst'/>
        <stl-vector name='CAGE' pointer-type='building_cagest'/>
        <stl-vector name='STATUE' pointer-type='building_statuest'/>
        <stl-vector name='SLAB' pointer-type='building_slabst'/>
        <stl-vector name='COFFIN' pointer-type='building_coffinst'/>
        <stl-vector name='WEAPON_RACK' pointer-type='building_weaponrackst'/>
        <stl-vector name='ARMOR_STAND' pointer-type='building_armorstandst'/>
        <stl-vector name='FURNACE_ANY' pointer-type='building_furnacest'/>
        <stl-vector name='FURNACE_WOOD' pointer-type='building_furnacest'/>
        <stl-vector name='FURNACE_SMELTER_ANY' pointer-type='building_furnacest'/>
        <stl-vector name='FURNACE_SMELTER_MAGMA' pointer-type='building_furnacest'/>
        <stl-vector name='FURNACE_KILN_ANY' pointer-type='building_furnacest'/>
        <stl-vector name='FURNACE_GLASS_ANY' pointer-type='building_furnacest'/>
        <stl-vector name='FURNACE_CUSTOM' pointer-type='building_furnacest'/>
        <stl-vector name='WORKSHOP_ANY' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_BUTCHER' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_MASON' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_KENNEL' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_FISHERY' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_JEWELER' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_LOOM' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_TANNER' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_DYER' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_MILL_ANY' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_QUERN' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_TOOL' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_MILLSTONE' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_KITCHEN' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_STILL' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_FARMER' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_ASHERY' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_CARPENTER' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_CRAFTSDWARF' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_MECHANIC' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_SIEGE' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_CLOTHIER' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_LEATHER' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_BOWYER' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_MAGMA_FORGE' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_FORGE_ANY' pointer-type='building_workshopst'/>
        <stl-vector name='WORKSHOP_CUSTOM' pointer-type='building_workshopst'/>
        <stl-vector name='WEAPON_UPRIGHT' pointer-type='building_weaponst'/>
        <stl-vector name='INSTRUMENT_STATIONARY' pointer-type='building_instrumentst'/>
        <stl-vector name='OFFERING_PLACE' pointer-type='building_offering_placest'/>
    </df-other-vectors-type>

    <class-type type-name='building_handler' original-name='building_handlerst' custom-methods='true'>
        <stl-vector name='all' pointer-type='building' comment='bay12: global'/>

        <compound name='other' type-name='buildings_other' comment='not a compound in bay12'/>

        <stl-vector name='temp_save' has-bad-pointers='true' pointer-type='building'/>

        <bool name='check_bridge_collapse' comment='bay12: evaluate_bridge_stability'/>
        <bool name='check_machine_collapse' comment='bay12: evaluate_machine_stability'/>

        <virtual-methods>
            <vmethod name='get_machine_hookup_list' comment='ToadyOnes name'>
                <pointer name='hookups' type-name='machine_tile_set'/>
                <int16_t name='type'/>
                <int16_t name='subtype'/>
                <int16_t name='x1'/>
                <int16_t name='y1'/>
                <int16_t name='x2'/>
                <int16_t name='y2'/>
                <int16_t name='z'/>
                <bool name='is_vertical'/>
            </vmethod>
        </virtual-methods>
    </class-type>

    <struct-type type-name='job_item_filter' original-name='itemsearchst'>
        <enum name="item_type" type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index' init-value='-1'/>

        <bitfield name="flags1" type-name='job_item_flags1'/>

        <pointer name="item_vector">
            <stl-vector pointer-type='item'/>
        </pointer>

        <bool name="use_mat_index"/>

        <bitfield name="flags2" type-name='job_item_flags2'/>
        <bool name="use_flags2"/>

        <bitfield name="flags3" type-name='job_item_flags3'/>
        <bool name="use_flags3"/>

        <uint32_t name='flags4'/>
        <bool name="use_flags4"/>

        <uint32_t name='flags5'/>
        <bool name="use_flags5"/>

        <stl-string name='reaction_class'/>
        <stl-string name='has_material_reaction_product'/>
        <int32_t name="metal_ore" ref-target='inorganic_raw'/>

        <bool name="use_metal_ore"/>
        <bool name="use_reaction_class"/>
        <bool name="use_reaction_product"/>

        <int32_t name="min_dimension" init-value='-1'/>
        <int32_t name="reaction_id" ref-target='reaction'/>

        <stl-vector name='contains' type-name='int32_t'/>
        <bool name="use_contains"/>

        <enum name='has_tool_use' type-name='tool_uses'/>
        <enum name='has_melee_skill' type-name='job_skill' since='v0.34.01'/>

        <bool name='can_steal_haul_items' comment='noticed in v0.40.24'/>

        <compound name='pos' type-name='coord'/>

        <pointer name="unit" type-name='unit'/>
        <pointer name="job" type-name='job'/>
        <pointer name="building" type-name='building'/>
        <pointer name="site" type-name='world_site'/>

        <int32_t name='total_dim_count' since='v0.43.05'/>

        <stl-vector name='burrows' type-name='int32_t' ref-target='burrow'/>
        <bool name="use_burrows"/>

        <pointer name='take_from' since='v0.34.08'>
            <stl-vector pointer-type='building_stockpilest'/>
        </pointer>
    </struct-type>

    <struct-type type-name='ui_build_item_req' original-name='build_req_stagest'>
        <comment>
            When creating a building, one record per required item type.
            E.g. Soap Maker's workshop requires a bucket and a building material.
        </comment>

        <compound name='filter' type-name='job_item_filter'/>

        <stl-vector name='candidates' pointer-type='item'/>
        <stl-vector name='candidate_selected' type-name='bool'/>
        <stl-vector name='level_map' type-name='int32_t' comment='map_block.walkable'/>
        <stl-vector name='candidate_enabled' type-name='bool'/>

        <int16_t name="count_required"/>
        <int16_t name="count_max" comment='if 0, fixed at required'/>
        <int16_t name="count_provided"/>
    </struct-type>

    <enum-type type-name='build_req_mode'> bay12: BuildReqMode
        <enum-item name='INITIAL_FAILURE'/>
        <enum-item name='PLACING'/>
        <enum-item name='STAGES'/>
    </enum-type>

    <enum-type type-name='build_square_type'> bay12: BuildSquare
        <enum-item name='FINE'/>
        <enum-item name='FINE_BLOCKED'/>
        <enum-item name='FINE_WATER'/>
        <enum-item name='FINE_MAGMA'/>
        <enum-item name='SKIP'/>
        <enum-item name='BAD_ANCHOR'/>
        <enum-item name='BLOCKED'/>
        <enum-item name='HIDDEN'/>
        <enum-item name='NEED_WALL'/>
        <enum-item name='OFF_MAP'/>
        <enum-item name='WATER'/>
        <enum-item name='MAGMA'/>
        <enum-item name='BUILDING_PRESENT'/>
        <enum-item name='CLOSE_TO_EDGE'/>
        <enum-item name='INSIDE'/>
        <enum-item name='NEED_OPEN_AIR'/>
        <enum-item name='SURROUNDED_BY_AIR'/>
        <enum-item name='TOO_HIGH'/>
        <enum-item name='CONSTRUCTION_PRESENT'/>
        <enum-item name='NEEDS_SOIL_OR_MUD'/>
        <enum-item name='NEED_SOIL'/>
    </enum-type>

    <enum-type type-name='build_req_choice_type'> bay12: BuildReqChoice
        <enum-item name='NONE' value='-1'/>
        <enum-item name='General'/>
        <enum-item name='Specific'/>
    </enum-type>

    <class-type type-name='build_req_choicest'>
        <comment>One choice in the build item selector.</comment>
        <int32_t name="distance"/>
        <bool name='on'/>
        <stl-string name='compstr'/>

        <virtual-methods>
            <vmethod is-destructor='true'/>
            <vmethod ret-type='build_req_choice_type' name='getType'/>
            <vmethod name='getName'>
                <pointer type-name='stl-string' name='str'/>
            </vmethod>
            <vmethod ret-type='int32_t' name='select'/>
            <vmethod ret-type='bool' name='isCandidate'>
                <int32_t name='item_id'/>
            </vmethod>
            <vmethod ret-type='bool' name='deselect'/>
            <vmethod ret-type='int32_t' name='getUsedCount'/>
            <vmethod ret-type='int32_t' name='getNumCandidates'/>
            <vmethod ret-type='bool' name='expandable'/>
            <vmethod ret-type='bool' name='is_expanded'/>
            <vmethod name='expand'/>
            <vmethod name='unexpand'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='build_req_choice_genst' inherits-from='build_req_choicest'>
        <enum name="item_type" type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>

        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>

        <stl-vector name="candidates">
            <int32_t>
                <code-helper name='refers-to'>
                    (let* ((selector $global.buildreq)
                           (req $selector.requirements[$selector.req_index]))
                      $req.candidates[$])
                </code-helper>
            </int32_t>
        </stl-vector>

        <int32_t name="used_count"/>
        <bool name='expanded'/>
    </class-type>

    <class-type type-name='build_req_choice_specst' inherits-from='build_req_choicest'>
        <pointer name='candidate' type-name='item'/>
        <int32_t name='candidate_id'>
            <code-helper name='refers-to'>
                (let* ((selector $global.buildreq)
                       (req $selector.requirements[$selector.req_index]))
                  $req.candidates[$])
            </code-helper>
        </int32_t>
    </class-type>

    <class-type type-name='buildreq' original-name='buildreqst'>
        <stl-vector name='requirements' pointer-type='ui_build_item_req'/>

        <stl-vector name='choices' pointer-type='build_req_choicest'/>

        <enum base-type='int32_t' name="building_type" type-name='building_type' comment='if -1, in Build menu; otherwise select item'/> Toady used the actual enum rather than the matching typedef
        <int16_t name="building_subtype"/>
        <int32_t name="custom_type" ref-target='building_def'/>

        <enum name="stage" type-name='build_req_mode'/>

        <int16_t name="req_index"/>
        <int16_t name="sel_index"/>

        <bool name="general_choices"/>

        <stl-vector name='errors' pointer-type='stl-string'/>
        <stl-vector name='warnings' pointer-type='stl-string'/>

        <static-array name='tiles' count='31'>
            <static-array type-name='build_square_type' count='31'/>
        </static-array>

        <int32_t name='cur_walk_tag' comment='bay12: choice_level_map'/>

        <compound name='plate_info' type-name='pressure_plate_info'/>

        <stl-vector name='min_weight_races' type-name='int16_t' ref-target='creature_raw'/>
        <stl-vector name='max_weight_races' type-name='int16_t' ref-target='creature_raw'/>

        <stl-vector name='trigger_track_weight' type-name='int32_t'/>
        <stl-vector name='trigger_race_example' type-name='int16_t' ref-target='creature_raw'/>
        <stl-vector name='trigger_race_size' type-name='int32_t'/>
        <int32_t name='scroll_position_race'/>
        <bool name='scrolling_race'/>

        <compound name='track_stop' type-name='track_stop_profilest'/>

        <int32_t name='speed' init-value='50000' since='v0.34.08'/>
        <compound name='pos' type-name='coord' since='v0.50.01'/>
        <int32_t name='direction' since='v0.50.01'/>
        <bool name='first_stage_pass'/>

        <compound name='selection_pos' type-name='coord' since='v0.50.01'/>
        <int32_t name='selection_area' since='v0.50.01'/>
        <int32_t name='total_sq'/>
        <stl-vector name='total_sq_level_map' type-name='int32_t' since='v0.50.01'/>

        <bool name='use_last_material'/>
        <bool name='set_last_item_search'/>
        <compound type-name='job_item_filter' name='last_item_search'/>
        <int32_t name='last_itype'/>
        <int32_t name='last_isubtype'/>
        <int32_t name='last_mat'/>
        <int32_t name='last_matg'/>

        <bool name='use_closest_material'/>
        <bool name='use_same_material'/>
        <bool name='build_after_placement'/>

        <virtual-methods>
            <vmethod name='evaluate_buildability'><int16_t name='x'/><int16_t name='y'/><int16_t name='z'/><int32_t name='orientation'/></vmethod>
            <vmethod name='evaluate_items_vs_placement'/>
            <vmethod name='old_evaluate_buildability'/>
        </virtual-methods>
    </class-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
