<data-definition>
    A - even, B - uneven for tone patterns, A - unstressed, B - stressed for accent patterns
    <enum-type type-name='poetic_form_pattern' base-type='int32_t'> bay12: PoeticStressType
        <enum-item name='None' value='-1'/>
        <enum-item name='AA' comment='Pyrrhic'/>
        <enum-item name='AB' comment='Iambic'/>
        <enum-item name='BA' comment='Trochaic'/>
        <enum-item name='BB' comment='Spondaic'/>
        <enum-item name='AAA' comment='Tribrachic'/>
        <enum-item name='BAA' comment='Dactylic'/>
        <enum-item name='ABA' comment='Amphibrachic'/>
        <enum-item name='AAB' comment='Anapestic'/>
        <enum-item name='ABB' comment='Bacchic'/>
        <enum-item name='BBA' comment='Antibacchic'/>
        <enum-item name='BAB' comment='Cretic'/>
        <enum-item name='BBB' comment='Molossic'/>
    </enum-type>

    <enum-type type-name='poetic_form_caesura_position' base-type='int32_t'> bay12: PoeticCaesuraType
        <enum-item name='None' value='-1'/>
        <enum-item name='Initial'/>
        <enum-item name='Medial'/>
        <enum-item name='Terminal'/>
    </enum-type>

    <enum-type type-name='poetic_form_additional_feature' base-type='int32_t'> bay12: PoeticParallelismType
        <enum-item name='None' value='-1'/>
        <enum-item name='SharesUnderlyingMeaning'/>
        <enum-item name='ContrastsUnderlyingMeaning'/>
        <enum-item name='RequiredToMaintainPhrasing'/>
        <enum-item name='SameGrammaticalStructure'/>
        <enum-item name='SamePlacementOfAllusions'/>
        <enum-item name='ReverseWordOrder'/>
        <enum-item name='ReverseGrammaticalStructure'/>
        <enum-item name='PresentsDifferentView'/>
        <enum-item name='MustExpandIdea'/>
    </enum-type>

    <enum-type type-name='poetic_form_mood' base-type='int32_t'> bay12: PoeticStyleType
        <enum-item name='None' value='-1'/>
        <enum-item name='Narrative'/>
        <enum-item name='Dramatic'/>
        <enum-item name='Reflective'/>
        <enum-item name='Riddle'/>
        <enum-item name='Ribald'/>
        <enum-item name='Light'/>
        <enum-item name='Solemn'/>
    </enum-type>

    -- Helper type for poetic_form_subject
    <struct-type type-name='poetic_form_subject_target' is-union='true'>
        <compound name='Histfig'>
            <int32_t name='subject_histfig' ref-target='historical_figure'/>
        </compound>
        <compound name='Concept'>
            <enum name='subject_topic' base-type='int32_t' type-name='sphere_type'/>
        </compound>
    </struct-type>

    <enum-type type-name='poetic_form_subject' base-type='int32_t'> bay12: PoeticSubjectType
        <enum-item name='None' value='-1'/> "a chosen subject"
        <enum-item name='Past'/>
        <enum-item name='CurrentEvents' comment='Present'/>
        <enum-item name='Future'/>
        <enum-item name='SomeoneRecentlyDeceased'/>
        <enum-item name='SomeoneRecentlyRetired'/>
        <enum-item name='Religion'/>
        <enum-item name='SpecificPlace' comment='Site'/>
        <enum-item name='SpecificWildernessRegion' comment='Subregion'/>
        <enum-item name='Nature'/>
        <enum-item name='Lover'/>
        <enum-item name='Family'/>
        <enum-item name='AlcoholicBeverages' comment='Booze'/>
        <enum-item name='Journey' comment='Travels'/>
        <enum-item name='War'/>
        <enum-item name='Hunt'/>
        <enum-item name='Mining'/>
        <enum-item name='Death'/>
        <enum-item name='Immortality'/>
        <enum-item name='SomeonesCharacter'/>
        <enum-item name='Histfig'/> "a historical figure" or a specific figure
        <enum-item name='Concept' comment='Sphere'/> "an abstract concept" or a specific concept
    </enum-type>

    <enum-type type-name='poetic_form_action' base-type='int32_t'> bay12: PoeticIntentType
        <enum-item name='None' value='-1'/>
        <enum-item name='Describe'/>
        <enum-item name='Satirize'/>
        <enum-item name='AmuseAudience'/>
        <enum-item name='Complain'/>
        <enum-item name='Renounce'/>
        <enum-item name='MakeApology'/>
        <enum-item name='ExpressPleasure'/>
        <enum-item name='ExpressGrief'/>
        <enum-item name='Praise'/>
        <enum-item name='TeachMoralLesson'/>
        <enum-item name='MakeAssertion'/>
        <enum-item name='MakeCounterAssertion'/>
        <enum-item name='MakeConsession'/>
        <enum-item name='SynthesizePreviousIdeas'/>
        <enum-item name='DevelopPreviousIdea'/>
        <enum-item name='InvertTheAssertion'/>
        <enum-item name='UndercutAssertion'/>
        <enum-item name='MoveAwayFromPreviousIdeas'/>
        <enum-item name='ReflectPreviousIdeas'/>
        <enum-item name='ConsoleAudience'/>
        <enum-item name='RefuseConsolation'/>
        <enum-item name='OfferDifferentPerspective'/>
        <enum-item name='Beseech' since='v0.47.01'/>
    </enum-type>

    <bitfield-type type-name="poetic_form_feature" base-type="uint32_t"> bay12: POETIC_FORM_LINE_FLAG_*
        <flag-bit name="InternalRhyme"/>
        <flag-bit name="EndRhymesDontMatch" comment='SoftEndRhyme'/>
        <flag-bit name="Alliteration"/>
        <flag-bit name="Onomatopoeia"/>
        <flag-bit name="Antanaclasis"/>
        <flag-bit name="DifferentReadings"/> "different readings depending on word breaks"
        <flag-bit name="ReadBackwards"/> "can be read backwards as well as forwards"
        <flag-bit name="ReadOrthogonally"/> "can be read orthogonally across the standard lines"
        <flag-bit name="Emerge" comment='ReadPathwise'/> "emerge when reading along certain prescribed paths across the body of the poem"
        <flag-bit name="Assonance"/>
        <flag-bit name="Consonance"/>
        <flag-bit name="Elision"/>
        <flag-bit name="Epenthesis"/>
        <flag-bit name="Synchysis"/>
        <flag-bit name="QuantitativeMeter"/>
        <flag-bit name="Allegory"/>
        <flag-bit name="Ambiguity"/>
        <flag-bit name="Symbolism"/>
        <flag-bit name="Metaphor"/>
        <flag-bit name="Simile"/>
        <flag-bit name="Metonymy"/>
        <flag-bit name="VividImagery"/>
        <flag-bit name="Juxtaposision"/>
    </bitfield-type>

    <bitfield-type type-name="poetic_form_section_flag" base-type="uint32_t"> bay12: POETIC_FORM_SECTION_FLAG_*
        <flag-bit name='end_rhyme_global_pattern'/> "line, couplet, tercet" if set, "brief verse paragraphs"/"full verse paragraphs" otherwise
        <flag-bit name='verse_paragraph'/>
        <flag-bit name='end_rhyme_shared_in_stanzas'/>
    </bitfield-type>

    <struct-type type-name='poetic_form_part' original-name='poetic_form_sectionst'>
        <bitfield base-type='uint32_t' name='flags' type-name='poetic_form_section_flag'/>

        "has X to Y couplets/..."
        <int32_t name='count_min'/>
        <int32_t name='count_max'/>

        size_in_lines is set: line, couplet, tercet, quatrain, quintain, etc.
        size_in_lines is not set: "brief verse" if less than 6, otherwise "full verse"
        <int32_t name='size'/>

        <static-array name='refrain_line' count='2' type-name='int32_t'/>
        <static-array name='refrain_id' count='2' type-name='int32_t'/>

        <stl-vector name='line_endings' type-name='int32_t'/>
        <stl-vector name='line_feet' type-name='int32_t'/> "the Nth line has XX feet"
        <stl-vector name='line_patterns' type-name='poetic_form_pattern'/>
        <stl-vector name='line_caesura_positions' type-name='poetic_form_caesura_position'/>

        "first line must make use of ..."
        <stl-vector name='line_features' type-name='poetic_form_feature'/>

        "The XX line ZZ of ... on YY line"
        <stl-vector name='additional_features' type-name='poetic_form_additional_feature'/> ZZ
        <stl-vector name='additional_targets' type-name='int32_t'/> YY
        <stl-vector name='additional_lines' type-name='int32_t'/> XX

        <stl-vector name='line_mood' type-name='poetic_form_mood'/>
        <stl-vector name='line_subject' type-name='poetic_form_subject'/>
        <stl-vector name='line_subject_target' type-name='poetic_form_subject_target'/>
        <stl-vector name='line_action' type-name='poetic_form_action'/>
        <stl-vector name='line_persona_ind' type-name='int32_t'/>

        <int32_t name='some_lines_syllables'/> "it has lines with ... syllables"
        <enum name='some_lines_pattern' type-name='poetic_form_pattern'/> "it has lines with a tone/accent pattern of ..."

        "it has ... caesura in each line"
        <enum name='each_line_caesura_position' type-name='poetic_form_caesura_position'/>

        "certain lines have ..." same as additional_features above
        <stl-vector name='certain_lines_additional_features' type-name='poetic_form_additional_feature'/>

        <enum name='mood' type-name='poetic_form_mood'/>
        <enum name='subject' type-name='poetic_form_subject'/>
        <int32_t name='subject_id'/>
        <enum name='action' type-name='poetic_form_action'/>
        <int32_t name='persona_id'/>
        <bitfield base-type='uint32_t' name='line_flags' type-name='poetic_form_feature'/>
    </struct-type>

    <enum-type type-name='poetic_form_persona_type' base-type='int32_t'> bay12: PoeticFormPersonaType
        <enum-item name='Author'/>
        <enum-item name='Soldier'/>
        <enum-item name='Traveller'/>
        <enum-item name='RelativeOfAuthor'/>
        <enum-item name='PartyOfDebate'/>
        <enum-item name='FictionalPoet'/>
        <enum-item name='Histfig'/>
        <enum-item name='Animal'/>
    </enum-type>

    <struct-type type-name='poetic_form_perspective' original-name='poetic_form_personast'>
        "written from the perspective of ..."
        <enum name='type' type-name='poetic_form_persona_type'/>
        <int32_t name='subtype' comment='Histfig:ID, Animal:Race'/>
        <int32_t name='subtype2' comment='Animal:Caste'/>
    </struct-type>

    <bitfield-type type-name='poetic_form_flag' base-type='uint32_t'> bay12: POETIC_FORM_FLAG_*
        <flag-bit name='tone_patterns' comment='tonal_replaces_stress'/>
        <flag-bit name='produces_individual_poems' comment='has_compositions'/>
    </bitfield-type>

    <struct-type type-name='poetic_form' original-name='poetic_formst' instance-vector='$global.world.poetic_forms.all' key-field='id'>
        <int32_t name='id'/>

        <compound name='name' type-name='language_name'/>
        <int32_t name='originating_entity' ref-target='historical_entity'/> "originating in ..."
        <int32_t name='original_author' ref-target='historical_figure'/> "originally devised by ..."

        <int32_t name='subject_hf' ref-target='historical_figure' comment='worship target'/>

        <bitfield base-type='uint32_t' name='flags' type-name='poetic_form_flag'/>

        <stl-vector name='parts' pointer-type='poetic_form_part'/>
        <int32_t name='each_line_feet' comment='meter'/>
        <enum name='each_line_pattern' type-name='poetic_form_pattern'/>
        <enum name='every_line_caesura_position' type-name='poetic_form_caesura_position'/>

        "certain lines often ... and they sometimes ..."
        <stl-vector name='common_features' type-name='poetic_form_additional_feature'/>

        "is a narrative/... poetic form"
        <enum name='mood' type-name='poetic_form_mood'/>
        <enum name='subject' type-name='poetic_form_subject'/>
        <compound name='subject_target' type-name='poetic_form_subject_target'/>

        <enum name='action' type-name='poetic_form_action'/>

        <int32_t name='preferred_perspective' comment='if not -1, ALWAYS written from that perspective'/>

        "use of ... is characteristic of the form" or "must feature lines which ..."
        <bitfield name='features' type-name='poetic_form_feature'/>

        <stl-vector name='perspectives' pointer-type='poetic_form_perspective'/>
    </struct-type>

    <struct-type type-name='poetic_form_handlerst'>
        <stl-vector name='all' pointer-type='poetic_form'/>
        <stl-vector name='order_load' pointer-type='poetic_form' has-bad-pointers='true'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
