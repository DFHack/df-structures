<data-definition>
    -- Unused: HF_REP_QUERY_FLAG_*

    <bitfield-type type-name='witness_report_flags' base-type='uint32_t'> bay12: WITNESS_INCIDENT_FLAG_*
        <flag-bit name='FALSE'/>
    </bitfield-type>

    <struct-type type-name='witness_incidentst'>
        <int32_t name='incident_id' ref-target='incident'/>
        <int32_t name='crime_id' ref-target='crime'/>
        <enum type-name='witness_type' name='type'/>
        <int32_t name='year'/>
        <int32_t name='year_tick'/>
        <bitfield name='flags' base-type='uint32_t' type-name='witness_report_flags'/>
        this looks like it "should be" two structures of the same type, but they're flat in bay12 code
        <int32_t name='relevant_hfid' init-value='-1' since='v0.47.01' ref-target='historical_figure'/>
        <int32_t name='relevant_visual_hfid' init-value='-1' since='v0.47.01' ref-target='historical_figure'/>
        <int32_t name='relevant_historical_hfid' init-value='-1' since='v0.47.01' ref-target='historical_figure'/>
        <int32_t name='relevant_ident_id' init-value='-1' since='v0.47.01' ref-target='identity'/>
        <int32_t name='ic_hfid' init-value='-1' since='v0.47.01' ref-target='historical_figure'/>
        <int32_t name='ic_visual_hfid' init-value='-1' since='v0.47.01' ref-target='historical_figure'/>
        <int32_t name='ic_historical_hfid' init-value='-1' since='v0.47.01' ref-target='historical_figure'/>
        <int32_t name='ic_ident_id' init-value='-1' since='v0.47.01' ref-target='identity'/>
        <compound type-name='coord' name='pos' since='v0.47.01'/>
    </struct-type>

    -- Unused: hf_rep_queryst
    -- Unused: research_selectorst
    -- Unused: RELATIONSHIP_INFO_FLAG_*
    -- Unused: relationship_infost

    <bitfield-type type-name='conflict_report_flag' base-type='uint32_t'> bay12: CONFLICT_REPORT_FLAG_*
        <flag-bit name='personally_involved'/>
    </bitfield-type>

    <struct-type type-name='conflict_reportst'>
        <stl-vector name='incident' pointer-type='incident'/>
        <int32_t name='earliest_year'/>
        <int32_t name='earliest_season_tick'/>
        <stl-vector name='personal_kill_hf' type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name='personal_kill_batch_race' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='personal_kill_batch_caste' type-name='int32_t'/>
        <stl-vector name='personal_kill_batch_civ' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='personal_kill_batch_number' type-name='int32_t'/>
        <stl-vector name='died_hf' type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name='slayer_hf' type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name='slayer_race' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='slayer_caste' type-name='int32_t'/>
        <stl-vector name='slayer_civ' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='died_batch_race' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='died_batch_caste' type-name='int32_t'/>
        <stl-vector name='died_batch_civ' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='died_batch_number' type-name='int32_t'/>
        <int32_t name='starter_actor_hf' ref-target='historical_figure'/>
        <int32_t name='starter_actor_race'/>
        <int32_t name='starter_actor_caste'/>
        <int32_t name='starter_actor_civ' ref-target='historical_entity'/>
        <int32_t name='starter_target_hf' ref-target='historical_figure'/>
        <int32_t name='starter_target_race'/>
        <int32_t name='starter_target_caste'/>
        <int32_t name='starter_target_civ' ref-target='historical_entity'/>
        <bitfield name='flags' base-type='uint32_t' type-name='conflict_report_flag'/>
        <int32_t name='location_sr' ref-target='world_region'/>
        <int32_t name='location_fl' ref-target='world_underground_region'/>
        <int32_t name='location_st' ref-target='world_site'/>
    </struct-type>

    <enum-type type-name='conversation_trouble_type' base-type='int32_t'> bay12: ConversationTroubleType
        <enum-item name='None' value='-1'/>
        <enum-item name='Death'/>
        <enum-item name='Crime'/>
        <enum-item name='Conflict'/>
        <enum-item name='ArmyMarching'/>
        <enum-item name='Abduction'/>
        <enum-item name='Occupation'/>
        <enum-item name='BeastPresent'/>
        <enum-item name='Criminals'/>
        <enum-item name='Bandits'/>
        <enum-item name='Skulking'/>
        <enum-item name='EvilSite'/>
        <enum-item name='ArmyHarassing'/>
        <enum-item name='War'/>
        <enum-item name='BrewingTroubleWithNeighbors'/>
        <enum-item name='MissingArtifact'/>
    </enum-type>

    -- Unused: ConversationDutyType

    <bitfield-type type-name='aim_attack_flag' base-type='uint32_t'> bay12: AIM_ATTACK_FLAG_*
        <flag-bit name='charge'/>
        <flag-bit name='multi'/>
        <flag-bit name='quick'/>
        <flag-bit name='heavy'/>
        <flag-bit name='wild'/>
        <flag-bit name='precise'/>
        <flag-bit name='automatic_hit'/>
        <flag-bit name='sparring_hit'/>
    </bitfield-type>

    <enum-type type-name='opinion_type' base-type='int32_t'> bay12: OpinionType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='MUST_BE_STOPPED_WITH_VIOLENT_FORCE'/>
        <enum-item name='NOT_MY_PROBLEM'/>
        <enum-item name='INEVITABLE'/>
        <enum-item name='THE_LIFE_FOR_ME'/>
        <enum-item name='IT_IS_TERRIFYING'/>
        <enum-item name='DONT_KNOW_ANYTHING'/>
        <enum-item name='WE_ARE_IN_THE_RIGHT_IN_ALL_MATTERS'/>
        <enum-item name='FOR_THE_BEST'/>
        <enum-item name='DONT_CARE_ONE_WAY_OR_THE_OTHER'/>
        <enum-item name='HATE'/>
        <enum-item name='FEAR'/>
        <enum-item name='SAD_BUT_NOT_UNEXPECTED'/>
        <enum-item name='THAT_IS_TERRIBLE'/>
        <enum-item name='TERRIFIC'/>
        <enum-item name='ENJOYED_PERFORMING'/>
        <enum-item name='IT_WAS_LEGENDARY'/>
        <enum-item name='IT_WAS_FANTASTIC'/>
        <enum-item name='IT_WAS_GREAT'/>
        <enum-item name='IT_WAS_GOOD'/>
        <enum-item name='IT_WAS_OKAY'/>
        <enum-item name='AGREE_COMPLETELY'/>
        <enum-item name='THIS_IS_FANTASTIC'/>
        <enum-item name='THIS_IS_GREAT'/>
        <enum-item name='THIS_IS_GOOD'/>
        <enum-item name='THIS_IS_OKAY'/>
        <enum-item name='THIS_IS_NO_GOOD'/>
        <enum-item name='THIS_IS_MY_FAVORITE_DANCE'/>
        <enum-item name='THIS_IS_MY_FAVORITE_MUSIC'/>
        <enum-item name='THIS_IS_MY_FAVORITE_POETRY'/>
        <enum-item name='I_LOVE_REFLECTIVE_POETRY'/>
        <enum-item name='I_HATE_REFLECTIVE_POETRY'/>
        <enum-item name='I_LOVE_RIDDLES'/>
        <enum-item name='I_HATE_RIDDLES'/>
        <enum-item name='THIS_KIND_OF_HUMOR_MAKES_ME_SO_EMBARRASSED'/>
        <enum-item name='THIS_IS_SO_FUNNY'/>
        <enum-item name='I_LOVE_RAUNCHY_POEMS'/>
        <enum-item name='I_LOVE_RIBALD_POEMS'/>
        <enum-item name='I_DISAPPROVE_OF_RIBALD_POEMS'/>
        <enum-item name='I_LOVE_LIGHT_POEMS'/>
        <enum-item name='I_HATE_LIGHT_POEMS'/>
        <enum-item name='I_LOVE_SOLEMN_POEMS'/>
        <enum-item name='I_HATE_SOLEMN_POEMS'/>
        <enum-item name='LEGENDARY_HUNT_SAVED_US_FROM_ENEMY'/>
        <enum-item name='MAGNIFICENT_HUNT_SAVED_US_FROM_ENEMY'/>
        <enum-item name='GREAT_HUNT_SAVED_US_FROM_ENEMY'/>
        <enum-item name='GOOD_HUNT_SAVED_US_FROM_ENEMY'/>
        <enum-item name='HUNT_SAVED_US_FROM_ENEMY'/>
        <enum-item name='THAT_WAS_A_LEGENDARY_HUNT'/>
        <enum-item name='THAT_WAS_A_MAGNIFICENT_HUNT'/>
        <enum-item name='THAT_WAS_A_GREAT_HUNT'/>
        <enum-item name='THAT_WAS_A_GOOD_HUNT'/>
        <enum-item name='THAT_WAS_A_HUNT'/>
        <enum-item name='SAVED_US_FROM_ENEMY_STRENGTH_5'/>
        <enum-item name='SAVED_US_FROM_ENEMY_STRENGTH_4'/>
        <enum-item name='SAVED_US_FROM_ENEMY_STRENGTH_3'/>
        <enum-item name='SAVED_US_FROM_ENEMY_STRENGTH_2'/>
        <enum-item name='SAVED_US_FROM_ENEMY_STRENGTH_1'/>
        <enum-item name='THEY_ARE_OUTLAWS'/>
        <enum-item name='PROTECTED_THE_DEFENSELESS_FROM_OUTLAWS'/>
        <enum-item name='IM_CONFLICTED'/>
        <enum-item name='PREACHING_IS_CALLING'/>
        <enum-item name='ACCORDS_WITH_FAITH'/>
    </enum-type>

    <enum-type type-name='opinion_collection_type' base-type='int32_t'> bay12: OpinionCollectionType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='PRO_OCCUPATION'/>
        <enum-item name='NEUTRAL_TO_OCCUPATION'/>
        <enum-item name='AGAINST_OCCUPATION'/>
        <enum-item name='PART_OF_OCCUPATION'/>
        <enum-item name='PRO_RULER'/>
        <enum-item name='NEUTRAL_TO_RULER'/>
        <enum-item name='AGASINT_RULER'/>
    </enum-type>

    <bitfield-type type-name='attack_chance_modifier_flags' base-type='uint32_t'> bay12: ATTACK_CHANCE_MODIFIER_FLAG_*
        <flag-bit name='HEAD'/>
        <flag-bit name='BODY'/>
        <flag-bit name='LIMB'/>
        <flag-bit name='PRIORITY_WIELD'/>
        <flag-bit name='MAIN_ATTACK'/>
        <flag-bit name='ADJUSTED_UP_LOTS'/>
        <flag-bit name='ADJUSTED_UP'/>
        <flag-bit name='ADJUSTED_DOWN'/>
        <flag-bit name='ADJUSTED_DOWN_LOTS'/>
        <flag-bit name='RING_OF_SAVINGS'/>
        <flag-bit name='GRASP'/>
        <flag-bit name='STANCE'/>
        <flag-bit name='ARMOR_3'/>
        <flag-bit name='ARMOR_2'/>
        <flag-bit name='ARMOR_1'/>
        <flag-bit name='SMALL_AIM_MINUS'/>
        <flag-bit name='COUNTS_AS_LETHAL'/>
    </bitfield-type>

    <struct-type type-name='attack_chance_modifierst'>
        <pointer name='attack_item' type-name='item'/>
        <int32_t name='attack_index'/>
        <int16_t name='target_bp'/>
        <int32_t name='hit_chance_adjustment'/>
        <int32_t name='hit_squareness_adjustment'/>
        <bitfield name='flags' type-name='attack_chance_modifier_flags'/>
    </struct-type>

    <struct-type type-name='attack_chance_attackst'>
        <pointer name='attack_item' type-name='item'/>
        <int32_t name='attack_index'/>
        <bitfield name='modifier_flags' type-name='attack_chance_modifier_flags'/>
    </struct-type>

    <struct-type type-name='attack_chance_targetst'>
        <int16_t name='target_bp'/>
        <int32_t name='initial_hit_chance_adjustment'/>
        <int32_t name='initial_hit_squareness_adjustment'/>
        <bitfield name='modifier_flags' type-name='attack_chance_modifier_flags'/>
    </struct-type>

    <struct-type type-name='attack_chance_infost'>
        <stl-vector name='modifier' pointer-type='attack_chance_modifierst'/>
        <stl-vector name='attack' pointer-type='attack_chance_attackst'/>
        <stl-vector name='target' pointer-type='attack_chance_targetst'/>

        <int32_t name='current_modifier_number'/>
        <int32_t name='current_attack_number'/>
        <int32_t name='current_target_number'/>
    </struct-type>

    <bitfield-type type-name='unit_move_move_flag' base-type='uint32_t'> bay12: UNIT_MOVE_MOVE_FLAG_*
        <flag-bit name='charge'/>
        <flag-bit name='from_sparring'/>
    </bitfield-type>

    <struct-type type-name='unit_action_data_move' original-name='unit_move_movest'>
        <int16_t name='x'/>
        <int16_t name='y'/>
        <int16_t name='z'/>
        <int32_t name='timer'/>
        <int32_t name='timer_init'/>
        <int32_t name='fatigue'/>
        <bitfield name='flags' base-type='uint32_t' type-name='unit_move_move_flag'/>
    </struct-type>

    <struct-type type-name='unit_action_data_job' original-name='unit_move_jobst'>
        <int16_t name='x'/>
        <int16_t name='y'/>
        <int16_t name='z'/>
        <int32_t name='timer'/>
    </struct-type>

    <struct-type type-name='unit_action_data_suck_blood' original-name='unit_move_suck_bloodst'>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='timer'/>
    </struct-type>

    <struct-type type-name='unit_action_data_job_recover' original-name='unit_move_recover_from_jobst'>
        <int32_t name='timer'/>
    </struct-type>

    <enum-type type-name='entity_event_type' base-type='int32_t'> bay12: RumorType
        <enum-item name='invasion'/>
        <enum-item name='abduction'/>
        <enum-item name='incident'/>
        <enum-item name='occupation'/>
        <enum-item name='beast'/>
        <enum-item name='group'/>
        <enum-item name='harass'/>
        <enum-item name='flee'/>
        <enum-item name='abandon'/>
        <enum-item name='reclaimed'/>
        <enum-item name='founded'/>
        <enum-item name='reclaiming'/>
        <enum-item name='founding'/>
        <enum-item name='leave'/>
        <enum-item name='insurrection'/>
        <enum-item name='insurrection_end'/>
        <enum-item name='succession'/>
        <enum-item name='claim'/>
        <enum-item name='accept_tribute_offer'/>
        <enum-item name='refuse_tribute_offer'/>
        <enum-item name='accept_tribute_demand'/>
        <enum-item name='refuse_tribute_demand'/>
        <enum-item name='accept_peace_offer'/>
        <enum-item name='refuse_peace_offer'/>
        <enum-item name='cease_tribute_offer'/>
        <enum-item name='artifact_in_site'/>
        <enum-item name='artifact_in_subregion'/>
        <enum-item name='artifact_in_feature_layer'/>
        <enum-item name='artifact_in_inventory'/>
        <enum-item name='artifact_not_in_site'/>
        <enum-item name='artifact_not_in_subregion'/>
        <enum-item name='artifact_not_in_feature_layer'/>
        <enum-item name='artifact_not_in_inventory'/>
        <enum-item name='artifact_was_destroyed'/>
    </enum-type>

    <struct-type type-name='rumor_army_marching_to_sitest'>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='attack_leader_hf' ref-target='historical_figure'/>
        <int32_t name='attack_commander_hf' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_hist_figure_abductedst'>
        <int32_t name='histfig_id' ref-target='historical_figure' comment='abductee'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='abductor_id' ref-target='historical_figure'/>
        <int32_t name='event' ref-target='history_event'/>
    </struct-type>

    <struct-type type-name='rumor_incidentst'>
        <enum name='type' type-name='incident_type'/>
        <int32_t name='incident_id' ref-target='incident'/>
    </struct-type>

    <struct-type type-name='rumor_occupationst'>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='leader_hf' ref-target='historical_figure'/>
        <int32_t name='evicted_entity_id' ref-target='historical_entity'/>
    </struct-type>

    <struct-type type-name='rumor_beast_presentst'>
        <int32_t name='histfig_id' ref-target='historical_figure'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='region_id' ref-target='world_region'/>
    </struct-type>

    <struct-type type-name='rumor_new_position_holderst'>
        <int32_t name='histfig_id' ref-target='historical_figure'/>
        <int32_t name='former_histfig_id' ref-target='historical_figure'/>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='position_assignment_id' refers-to='$(find-entity $$._parent.entity_id).positions.assignments[$]'/>
    </struct-type>

    <struct-type type-name='rumor_entity_site_presentst'>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
    </struct-type>

    <struct-type type-name='rumor_entity_agrees_to_accept_tributest'>
        <int32_t name='entity1_id' ref-target='historical_entity'/>
        <int32_t name='histfig1_id' ref-target='historical_figure'/>
        <int32_t name='entity2_id' ref-target='historical_entity'/>
        <int32_t name='histfig2_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_entity_refuses_to_accept_tributest'>
        <int32_t name='entity1_id' ref-target='historical_entity'/>
        <int32_t name='histfig1_id' ref-target='historical_figure'/>
        <int32_t name='entity2_id' ref-target='historical_entity'/>
        <int32_t name='histfig2_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_entity_agrees_to_give_tributest'>
        <int32_t name='entity1_id' ref-target='historical_entity'/>
        <int32_t name='histfig1_id' ref-target='historical_figure'/>
        <int32_t name='entity2_id' ref-target='historical_entity'/>
        <int32_t name='histfig2_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_entity_refuses_to_give_tributest'>
        <int32_t name='entity1_id' ref-target='historical_entity'/>
        <int32_t name='histfig1_id' ref-target='historical_figure'/>
        <int32_t name='entity2_id' ref-target='historical_entity'/>
        <int32_t name='histfig2_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_entity_agrees_to_make_peacest'>
        <int32_t name='entity1_id' ref-target='historical_entity'/>
        <int32_t name='histfig1_id' ref-target='historical_figure'/>
        <int32_t name='entity2_id' ref-target='historical_entity'/>
        <int32_t name='histfig2_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_entity_refuses_to_make_peacest'>
        <int32_t name='entity1_id' ref-target='historical_entity'/>
        <int32_t name='histfig1_id' ref-target='historical_figure'/>
        <int32_t name='entity2_id' ref-target='historical_entity'/>
        <int32_t name='histfig2_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_entity_cancels_tributest'>
        <int32_t name='entity1_id' ref-target='historical_entity'/>
        <int32_t name='histfig1_id' ref-target='historical_figure'/>
        <int32_t name='entity2_id' ref-target='historical_entity'/>
        <int32_t name='histfig2_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_site_claimed_by_new_entityst'>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='histfig_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_army_harassing_sitest'>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='army_leader_hf_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_occupation_pulling_out_of_sitest'>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
    </struct-type>

    <struct-type type-name='rumor_refugees_fleeing_armyst'>
        <int32_t name='refugee_entity_id' ref-target='historical_entity'/>
        <int32_t name='from_site_id' ref-target='world_site'/>
        <int32_t name='army_entity_id' ref-target='historical_entity'/>
        <int32_t name='army_leader_hf_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_refugees_abandon_mismanaged_sitest'>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='parent_entity_id' ref-target='historical_entity'/>
    </struct-type>

    <struct-type type-name='rumor_insurrection_startedst'>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='entity_id' ref-target='historical_entity'/>
    </struct-type>

    <struct-type type-name='rumor_insurrection_endedst'>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <enum name='result' type-name='insurrection_outcome'/>
    </struct-type>

    <struct-type type-name='rumor_site_reclaimedst'>
        <int32_t name='behalf_entity_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='reclaimer_entity_id' ref-target='historical_entity'/>
        <int32_t name='leader_hf' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_site_createdst'>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='parent_entity_id' ref-target='historical_entity'/>
        <int32_t name='leader_hf' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_reclaim_army_leaving_for_sitest'>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='civ_leader_hf' ref-target='historical_figure'/>
        <int32_t name='civ_commander_hf' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_site_creation_army_leavingst'>
        <int32_t name='entity_id' ref-target='historical_entity'/>
        <int32_t name='region_id' ref-target='world_region'/>
        <int32_t name='civ_leader_hf' ref-target='historical_figure'/>
        <int32_t name='civ_commander_hf' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_artifact_destroyedst'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
    </struct-type>

    <struct-type type-name='rumor_artifact_present_at_sitest'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='structure_id' ref-target='abstract_building'/>
    </struct-type>

    <struct-type type-name='rumor_artifact_present_at_subregionst'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
        <int32_t name='subregion_id' ref-target='world_region'/>
    </struct-type>

    <struct-type type-name='rumor_artifact_present_at_feature_layerst'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
        <int32_t name='feature_layer_id' ref-target='world_underground_region'/>
    </struct-type>

    <struct-type type-name='rumor_artifact_held_by_hfst'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='rumor_artifact_not_present_at_sitest'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='structure_id' ref-target='abstract_building'/>
    </struct-type>

    <struct-type type-name='rumor_artifact_not_present_at_subregionst'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
        <int32_t name='subregion_id' ref-target='world_region'/>
    </struct-type>

    <struct-type type-name='rumor_artifact_not_present_at_feature_layerst'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
        <int32_t name='feature_layer_id' ref-target='world_underground_region'/>
    </struct-type>

    <struct-type type-name='rumor_artifact_not_held_by_hfst'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
    </struct-type>

    <bitfield-type type-name='rumor_flag' base-type='uint32_t'> bay12: RUMOR_FLAG_*
        <flag-bit name='outmoded'/>
    </bitfield-type>

    <struct-type type-name='entity_event' original-name='rumorst'>
        <compound name='data' is-union='true'>
            <compound name='invasion' type-name='rumor_army_marching_to_sitest'/>
            <compound name='abduction' type-name='rumor_hist_figure_abductedst'/>
            <compound name='incident' type-name='rumor_incidentst'/>
            <compound name='occupation' type-name='rumor_occupationst'/>
            <compound name='beast' type-name='rumor_beast_presentst'/>
            <compound name='group' type-name='rumor_entity_site_presentst'/>
            <compound name='harass' type-name='rumor_army_harassing_sitest'/>
            <compound name='leave' type-name='rumor_occupation_pulling_out_of_sitest'/>
            <compound name='flee' type-name='rumor_refugees_fleeing_armyst'/>
            <compound name='abandon' type-name='rumor_refugees_abandon_mismanaged_sitest'/>
            <compound name='reclaimed' type-name='rumor_site_reclaimedst'/>
            <compound name='founded' type-name='rumor_site_createdst'/>
            <compound name='reclaiming' type-name='rumor_reclaim_army_leaving_for_sitest'/>
            <compound name='founding' type-name='rumor_site_creation_army_leavingst'/>
            <compound name='insurrection' type-name='rumor_insurrection_startedst'/>
            <compound name='insurrection_end' type-name='rumor_insurrection_endedst'/>
            <compound name='succession' type-name='rumor_new_position_holderst'/>
            <compound name='claim' type-name='rumor_site_claimed_by_new_entityst'/>
            <compound name='accept_tribute_offer' type-name='rumor_entity_agrees_to_accept_tributest'/>
            <compound name='refuse_tribute_offer' type-name='rumor_entity_refuses_to_accept_tributest'/>
            <compound name='accept_tribute_demand' type-name='rumor_entity_agrees_to_give_tributest'/>
            <compound name='refuse_tribute_demand' type-name='rumor_entity_refuses_to_give_tributest'/>
            <compound name='accept_peace_offer' type-name='rumor_entity_agrees_to_make_peacest'/>
            <compound name='refuse_peace_offer' type-name='rumor_entity_refuses_to_make_peacest'/>
            <compound name='cease_tribute_offer' type-name='rumor_entity_cancels_tributest'/>
            <compound name='artifact_in_site' type-name='rumor_artifact_present_at_sitest'/>
            <compound name='artifact_in_subregion' type-name='rumor_artifact_present_at_subregionst'/>
            <compound name='artifact_in_feature_layer' type-name='rumor_artifact_present_at_feature_layerst'/>
            <compound name='artifact_in_inventory' type-name='rumor_artifact_held_by_hfst'/>
            <compound name='artifact_not_in_site' type-name='rumor_artifact_not_present_at_sitest'/>
            <compound name='artifact_not_in_subregion' type-name='rumor_artifact_not_present_at_subregionst'/>
            <compound name='artifact_not_in_feature_layer' type-name='rumor_artifact_not_present_at_feature_layerst'/>
            <compound name='artifact_not_in_inventory' type-name='rumor_artifact_not_held_by_hfst'/>
            <compound name='artifact_destroyed' type-name='rumor_artifact_destroyedst'/>
        </compound>
        <int32_t name='valid_year' comment="often the same as the other year/tick. Start/stop time?"/>
        <int32_t name='valid_year_tick'/>
        <int32_t name="year"/>
        <int32_t name="year_tick"/>
        <bitfield name='flag' base-type='uint32_t' type-name='rumor_flag'/>
        <enum name='type' type-name='entity_event_type'/>
    </struct-type>

    -- Unused: AddRumorResultType

    <struct-type type-name='rumor_infost'>
        <stl-vector name='events' pointer-type='entity_event'/>
    </struct-type>

    <struct-type type-name='artifact_rumor_locationst'>
        <pointer name='art' type-name='artifact_record'/>

        <int32_t name='stid' init-value='-1' ref-target='world_site'/>
        <int32_t name='abid' init-value='-1' ref-target='abstract_building'/>
        <int32_t name='hfid' init-value='-1' ref-target='historical_figure'/>
        <int32_t name='srid' init-value='-1' ref-target='world_region'/>
        <int32_t name='flid' init-value='-1' ref-target='world_underground_region'/>

        <int32_t name='latest_year' init-value='-1'/>
        <int32_t name='latest_season_count' init-value='-1'/>

        <uint32_t name='flag'/>

        <pointer name='latest_wi' type-name='witness_incidentst'/>
    </struct-type>

    <enum-type type-name='talk_choice_type' base-type='int32_t'> bay12: ConversationChoiceType
        0
        <enum-item name='Greet'/>
        <enum-item name='Nevermind'/>
        <enum-item name='Trade'/>
        <enum-item name='Join'/>
        <enum-item name='AskAboutSurroundings'/>
        <enum-item name='Goodbye'/>
        <enum-item name='Building'/>
        <enum-item name='Family'/>
        <enum-item name='Profession'/>
        <enum-item name='SleepPermission'/>
        10
        <enum-item name='AccuseNightCreature'/>
        <enum-item name='AskAboutProblems'/>
        <enum-item name='BringUpIncident'/>
        <enum-item name='SpreadRumor'/>
        <enum-item name='GreetReply'/>
        <enum-item name='GreetReplyAbort'/>
        <enum-item name='GreetReplyImpersonateGod'/>
        <enum-item name='BringUpSpecificIncident'/>
        <enum-item name='StateGeneralSituation'/>
        <enum-item name='GoodbyeReply'/>
        20
        <enum-item name='ReturnToCurrent'/>
        <enum-item name='ReturnToMain'/>
        <enum-item name='AskAudienceCourseOfAction'/>
        <enum-item name='AskForMySuggestedCoureseOfAction'/>
        <enum-item name='JoinForInsurrection'/>
        <enum-item name='JoinForRescue'/>
        <enum-item name='StateOpinion'/>
        <enum-item name='RespondJoinForInsurrection'/>
        <enum-item name='GeneralCompanionReaffirm'/>
        <enum-item name='SleepPermissionGrant'/>
        30
        <enum-item name='SleepPermissionDeny'/>
        <enum-item name='SleepInterrupt'/>
        <enum-item name='JoinAdventure'/>
        <enum-item name='JoinGuide'/>
        <enum-item name='RespondJoinAdventure'/>
        <enum-item name='RespondJoinGuide'/>
        <enum-item name='OfferCondolences'/>
        <enum-item name='StateDidNotKnowTopicHf'/>
        <enum-item name='CouldTryTravelingToSite'/>
        <enum-item name='CouldTryTalkingToHf'/>
        40
        <enum-item name='AskToBeRescued'/>
        <enum-item name='AskWhatHappened'/>
        <enum-item name='JoinToBeRescued'/>
        <enum-item name='DoNotRemember'/>
        <enum-item name='RespondJoinToBeRescued'/>
        <enum-item name='HaveNoFamily'/>
        <enum-item name='StateHfLocation'/>
        <enum-item name='HaveToTalkToSomebodyOlder'/>
        <enum-item name='CanDoBusinessIfComeCloser'/>
        <enum-item name='DoBusiness'/>
        50
        <enum-item name='ComeToStoreLater'/>
        <enum-item name='ComeToMarketLater'/>
        <enum-item name='TryAShopkeeper'/>
        <enum-item name='SaySomethingAboutLocalArea'/>
        <enum-item name='AskWhenIveReturnedHome'/>
        <enum-item name='TalkAboutRandomFamilyMember'/>
        <enum-item name='StateAgeEmphatically'/>
        <enum-item name='StateRandomProfessionFact'/>
        <enum-item name='AnnounceNightCreatureStatus'/>
        <enum-item name='StateIncredulity'/>
        60
        <enum-item name='BypassGreeting'/>
        <enum-item name='CeaseHostilitiesRequest'/>
        <enum-item name='DemandYield'/>
        <enum-item name='MarketBanter'/>
        <enum-item name='YieldInTerror'/>
        <enum-item name='Yield'/>
        <enum-item name='EmotionalOutburstFail'/>
        <enum-item name='EmotionalOutburstBreakingPoint'/>
        <enum-item name='EmotionalOutburstMajor'/>
        <enum-item name='EmotionalOutburstMinor'/>
        70
        <enum-item name='EmotionalOutburstNegated'/>
        <enum-item name='FleeConflictInTerror'/>
        <enum-item name='FleeConflict'/>
        <enum-item name='BringUpAgreement'/>
        <enum-item name='SummarizeTroubles'/>
        <enum-item name='AskAboutSpecificTrouble'/>
        <enum-item name='AskForDirections'/>
        <enum-item name='AskForDirectionsToSite'/>
        <enum-item name='AskForDirectionsToHf'/>
        <enum-item name='JoinGuideToSite'/>
        80
        <enum-item name='JoinGuideToHf'/>
        <enum-item name='ProvideSpecificSiteLocation'/>
        <enum-item name='ProvideSpecificHfLocation'/>
        <enum-item name='YouFoundMe'/>
        <enum-item name='HfIsDead'/>
        <enum-item name='RecommendGuide'/>
        <enum-item name='ProfessTotalIgnorance'/>
        <enum-item name='ProvideInformationAboutStateBuilding'/>
        <enum-item name='FavorRequestDemandOrder'/>
        <enum-item name='AskToWait'/>
        90
        <enum-item name='AskToFollow'/>
        <enum-item name='SorryOtherwiseOccupied'/>
        <enum-item name='ComplyWithOrder'/>
        <enum-item name='AgreeToFollow'/>
        <enum-item name='PersonalBarter'/>
        <enum-item name='CanDoPersonalBarterIfComeCloser'/>
        <enum-item name='DoPersonalBarter'/>
        <enum-item name='CeaseHostilities'/>
        <enum-item name='RefuseToCeaseHostilitiesArena'/>
        <enum-item name='RefuseToCeaseHostilities'/>
        100
        <enum-item name='RefuseToYieldArena'/>
        <enum-item name='RefuseToYield'/>
        <enum-item name='BragAboutPastViolentActs'/>
        <enum-item name='DiscussDiplomacyState'/>
        <enum-item name='ClaimSiteForOwnEntity'/>
        <enum-item name='LairHunter'/>
        <enum-item name='AskForSquadTask'/>
        <enum-item name='AskToJoinSquad'/>
        <enum-item name='AcceptIntoSquad'/>
        <enum-item name='EnjoySquadDowntime'/>
        110
        <enum-item name='GiveiDipstateSquadOrder'/>
        <enum-item name='WelcomeSelfToNewHome'/>
        <enum-item name='RespondJoinForRescue'/>
        <enum-item name='AskWhyListenerIsTraveling'/>
        <enum-item name='ExplainCurrentJourney'/>
        <enum-item name='AskAboutDominantEntity'/>
        <enum-item name='ComplainAboutAgreement'/>
        <enum-item name='CancelAgreement'/>
        <enum-item name='DiscussConflict'/>
        <enum-item name='SummarizeEntityViews'/>
        120
        <enum-item name='AskAboutEntityHoldOverTheirLands'/>
        <enum-item name='AskAboutPositionOfEnemyForces'/>
        <enum-item name='AskAboutNonDominantSiteClaimants'/>
        <enum-item name='AskAboutRefugees'/>
        <enum-item name='AskAboutSiteTradePartners'/>
        <enum-item name='SaySomethingAboutSiteTradePartners'/>
        <enum-item name='RaiseAlarm'/>
        <enum-item name='DemandItemDrop'/>
        <enum-item name='AgreeToComplyWithDemand'/>
        <enum-item name='RefuseToComplyWithDemand'/>
        130
        <enum-item name='WhereIsItem'/>
        <enum-item name='DemandTributeForEntity'/>
        <enum-item name='AgreeToGiveTributeToEntity'/>
        <enum-item name='RefuseToGiveTributeToEntity'/>
        <enum-item name='OfferTributeToEntity'/>
        <enum-item name='AgreeToAcceptTributeFromEntity'/>
        <enum-item name='RefuseToAcceptTributeFromEntity'/>
        <enum-item name='CancelTributeToEntity'/>
        <enum-item name='OfferPeace'/>
        <enum-item name='AgreeToMakePeaceWithEntity'/>
        140
        <enum-item name='RefuseToMakePeaceWithEntity'/>
        <enum-item name='ComeToDepotLater'/>
        <enum-item name='AstonishmentAtSeeingHf'/>
        <enum-item name='CommentOnWeather'/>
        <enum-item name='CommentOnNature'/>
        <enum-item name='SummarizeEntityHoldOverTheirLands'/>
        <enum-item name='SummarizeEntityLocalForceDisposition'/>
        <enum-item name='SummarizeNonDominantSiteClaimants'/>
        <enum-item name='SummarizeRefugeesOfCurrentOccupation'/>
        <enum-item name='YouSoundLikeATroublemaker'/>
        150
        <enum-item name='AskToTakeChildIn'/>
        <enum-item name='AgreeToTakeChildIn'/>
        <enum-item name='RefuseToTakeChildIn'/>
        <enum-item name='KickOutOfSquad'/>
        <enum-item name='InviteToJoinSquad'/>
        <enum-item name='AcceptInvitationToJoinSquad'/>
        <enum-item name='RefuseToSharePersonalInformation'/>
        <enum-item name='RefuseInvitationToJoinSquad'/>
        <enum-item name='RefuseEntryIntoSquad'/>
        <enum-item name='OfferOwnPosition'/>
        160
        <enum-item name='AgreeToAcceptPositionFromSpeaker'/>
        <enum-item name='RefuseToAcceptPositionFromSpeaker'/>
        <enum-item name='InvokeTrueNameToBanish'/>
        <enum-item name='InvokeTrueNameToForceServitude'/>
        <enum-item name='GrovelBeforeNewMaster'/>
        <enum-item name='GoToDemandItemScreen'/>
        <enum-item name='GiveSquadTaskReport'/>
        <enum-item name='OfferEncouragement'/>
        <enum-item name='PraiseForCompletingSquadTask'/>
        <enum-item name='AskAboutSomebody'/>
        170
        <enum-item name='AskAboutHf'/>
        <enum-item name='ProvideOpinionOfHf'/>
        <enum-item name='AskAboutCurrentState'/>
        <enum-item name='StateRandomThought'/>
        <enum-item name='RequestServicesOfAb'/>
        <enum-item name='ListServicesOfStateAb'/>
        <enum-item name='OrderDrinkOfStateServices'/>
        <enum-item name='RoomRentalOfStateServices'/>
        <enum-item name='ExtendRoomRentalOfStateServices'/>
        <enum-item name='ConfirmServiceOrder'/>
        180
        <enum-item name='JoinEntertain'/>
        <enum-item name='RespondJoinEntertain'/>
        <enum-item name='AskToJoinTroupe'/>
        <enum-item name='AcceptIntoTroupe'/>
        <enum-item name='RefuseEntryIntoTroupe'/>
        <enum-item name='InviteToJoinTroupe'/>
        <enum-item name='AcceptInvitationToJoinTroupe'/>
        <enum-item name='RefuseInvitationToJoinTroupe'/>
        <enum-item name='KickOutOfTroupe'/>
        <enum-item name='CreateTroupe'/>
        190
        <enum-item name='LeaveTroupe'/>
        <enum-item name='YellOutServiceOrder'/>
        <enum-item name='PendingService'/>
        <enum-item name='NoServicesAvailable'/>
        <enum-item name='BothMustBeAtLocationToServe'/>
        <enum-item name='DontWorkAtLocation'/>
        <enum-item name='VolunteerCurrentState'/>
        <enum-item name='VolunteerValue'/>
        <enum-item name='StateValue'/>
        <enum-item name='MentionServices'/>
        200
        <enum-item name='ProvideSpecificAbLocation'/>
        <enum-item name='ArgueValue'/>
        <enum-item name='FlatterArgument'/>
        <enum-item name='DismissArgument'/>
        <enum-item name='RespondPassivelyArgument'/>
        <enum-item name='AcquiesceToValueArgument'/>
        <enum-item name='DerideFlattery'/>
        <enum-item name='ExpressOutrageOverDismissal'/>
        <enum-item name='PressValueArgument'/>
        <enum-item name='DropArgument'/>
        210
        <enum-item name='AskForPersonalEnidOccupation'/>
        <enum-item name='AskForEntireEntityEnidOccupation'/>
        <enum-item name='GrantPersonalOccupation'/>
        <enum-item name='RefusePersonalOccupation'/>
        <enum-item name='GrantEntireEntityOccupation'/>
        <enum-item name='RefuseEntireEntityOccupation'/>
        <enum-item name='GiveSquadOrder'/>
        <enum-item name='DiscussMissingArtifact'/>
        <enum-item name='PraiseForReturningItem'/>
        <enum-item name='ProvideLocalBldLocation'/>
        220
        <enum-item name='ShoutBeliefStoryFrame'/>
        <enum-item name='TalkAboutFamilyClan'/>
        <enum-item name='SuggestItemTrade'/>
        <enum-item name='AcceptItemTradeRefusal'/>
        <enum-item name='InterrogateIdentityForSiteClearance'/>
        <enum-item name='Interrogate'/>
        <enum-item name='FishForMaster'/>
        <enum-item name='FishForPlots'/>
        <enum-item name='GiveUpRandomMaster'/>
        <enum-item name='GiveUpRandomPlot'/>
        230
        <enum-item name='RefuseToAnswerInterrogation'/>
        <enum-item name='Flatter'/>
        <enum-item name='Pacify'/>
        <enum-item name='TellJoke'/>
        <enum-item name='DerideCalming'/>
        <enum-item name='AcceptCompliment'/>
        <enum-item name='AcceptCalming'/>
        <enum-item name='DidNotNeedCalming'/>
        <enum-item name='ApproveJoke'/>
        <enum-item name='RejectJoke'/>
        240
        <enum-item name='ImpatientGoodbye'/>
        <enum-item name='RejectCompliment'/>
        <enum-item name='RejectCalming'/>
        <enum-item name='MockRepeatedPersuadeFailure'/>
        <enum-item name='MockRepeatedIntimidateFailure'/>
        <enum-item name='NamePet'/>
        <enum-item name='GiftAPet'/>
        <enum-item name='GiftSpecificPet'/>
        <enum-item name='HorrifiedByPetGift'/>
        <enum-item name='ThankForPetGift'/>
        250
        <enum-item name='OfferService'/>
        <enum-item name='LayQuestToRetrieveArtifact'/>
        <enum-item name='GeneralChargeToServeSphere'/>
        <enum-item name='ExhortToFinishCurrentQuest'/>
    </enum-type>

    <enum-type type-name='conversation_tact_type' base-type='int32_t'> bay12: ConversationTactType
        <enum-item name='None' value='-1'/>
        <enum-item name='Persuade'/>
        <enum-item name='Intimidate'/>
    </enum-type>

    <struct-type type-name='unit_action_data_talk' original-name='unit_move_communicatest'>
        <enum name='choice' type-name='talk_choice_type'/>
        <int32_t name='activity_id' ref-target='activity_entry'/>
        <int32_t name='activity_event_idx' ref-target='activity_event' aux-value='$$.activity_id'/>
        <compound name='event' type-name='entity_event'/>
        <int32_t name='incident_id'/>
        <int32_t name='timer'/>
        <int32_t name='target_unit' ref-target='unit'/>
        <int32_t name='target_hf' ref-target='historical_figure'/>
        <int32_t name='volume'/>
        <enum name='tact' type-name='conversation_tact_type'/>
        <int32_t name='tact_roll'/>
        <int32_t name='var1'/>
        <int32_t name='var2'/>
        <int32_t name='var3'/>
        <int32_t name='var4'/>
    </struct-type>

    <enum-type type-name='wrestle_attack_type' base-type='int32_t'> bay12: WrestleAttackType
        <enum-item name='JointLock'/>
        <enum-item name='Choke'/>
        <enum-item name='Takedown'/>
        <enum-item name='Throw'/>
        <enum-item name='Pinch'/>
        <enum-item name='Gouge'/>
        <enum-item name='Smash'/>
        <enum-item name='Disarm'/>
        <enum-item name='Twist'/>
        <enum-item name='VulnerabilityAttack'/>
        <enum-item name='FollowBreak'/>
        <enum-item name='FollowLoosen'/>
        <enum-item name='FollowShake'/>
        <enum-item name='FollowStrangle'/>
    </enum-type>

    <enum-type type-name='dungeon_wrestle_type' base-type='int32_t'> bay12: DungeonWrestleType
        <enum-item name='Wrestle'/>
        <enum-item name='Grab'/>
        <enum-item name='WrestleGeneric'/>
        <enum-item name='GrabGeneric'/>
        <enum-item name='StruggleForItem'/>
    </enum-type>

    <struct-type type-name='wrestle_infost'>
        <enum name='wrestle_type' type-name='dungeon_wrestle_type'/>
        <int16_t name='grapple_a_bp'/>
        <int16_t name='grapple_d_bp'/>
        <int32_t name='grapple_a_item_id'/>
        <int32_t name='grapple_d_item_id'/>
        <enum name='grapple_attack' type-name='wrestle_attack_type'/>
        <int16_t name='grapple_bp_targ'/>
    </struct-type>

    <bitfield-type type-name='unit_move_attack_flag' base-type='uint32_t'> bay12: UNIT_MOVE_ATTACK_FLAG_*
        <flag-bit name='force_small_aim_minus'/>
        <flag-bit name='can_get_momentum_bonus'/>
        <flag-bit name='no_parry'/>
        <flag-bit name='no_block'/>
        <flag-bit name='does_not_stop_wait'/>
        <flag-bit name='quick'/>
        <flag-bit name='heavy'/>
        <flag-bit name='wild'/>
        <flag-bit name='precise'/>
        <flag-bit name='charge' comment='(INDEPENDENT_MULTIATTACK)'/>
        <flag-bit name='bad_multiattack'/>
        <flag-bit name='zero_criticals'/>
        <flag-bit name='lightly_tap' comment='(NO_LETHAL_INTENT)'/>
        <flag-bit name='automatic_hit'/>
        <flag-bit name='sparring_hit'/>
    </bitfield-type>

    <struct-type type-name='unit_action_data_attack' original-name='unit_move_attackst'>
        <int32_t name='target_unit_id' ref-target='unit'/>
        <compound name='wrestle_info' type-name='wrestle_infost'/>
        <int32_t name='attack_item_id' ref-target='item'/>
        <int16_t name='target_body_part_id'/>
        <int16_t name='attack_body_part_id'/>
        <int32_t name='attack_id' comment='refers to weapon_attack or caste_attack'/>
        <int32_t name='hit_chance_modifier'/>
        <int32_t name='hit_squareness_modifier'/>
        <int32_t name='attack_velocity'/>
        <bitfield name='flags' base-type='uint32_t' type-name='unit_move_attack_flag'/>
        <enum name='attack_skill' type-name='job_skill'/>
        <int32_t name='attack_accuracy'/>
        <int32_t name='timer1' comment='prepare'/>
        <int32_t name='timer2' comment='recover'/>
    </struct-type>

    <struct-type type-name='unit_action_data_parry' original-name='unit_move_parry_attackst'>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='target_action' ref-target='unit_action' aux-value='$$.unit_id'/>
        <int32_t name='parry_item_id' ref-target='item'/>
    </struct-type>

    <struct-type type-name='unit_action_data_block' original-name='unit_move_block_attackst'>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='target_action' ref-target='unit_action' aux-value='$$.unit_id'/>
        <int32_t name='block_item_id' ref-target='item'/>
    </struct-type>

    <struct-type type-name='unit_action_data_dodge' original-name='unit_move_dodge_awayst'>
        <int16_t name='x1'/>
        <int16_t name='y1'/>
        <int16_t name='z1'/>
        <int32_t name='timer'/>
        <int16_t name='x2'/>
        <int16_t name='y2'/>
        <int16_t name='z2'/>
    </struct-type>

    <struct-type type-name='unit_action_data_recover' original-name='unit_move_deflection_recoveryst'>
        <int32_t name='timer'/>
        <int32_t name='item_id' ref-target='item'/>
    </struct-type>

    <struct-type type-name='unit_action_data_jump' original-name='unit_move_jumpst'>
        <int16_t name='x1'/>
        <int16_t name='y1'/>
        <int16_t name='z1'/>
        <int16_t name='x2'/>
        <int16_t name='y2'/>
        <int16_t name='z2'/>
    </struct-type>

    <struct-type type-name='unit_action_data_push_object' original-name='unit_move_push_itemst'>
        <int16_t name='x1'/>
        <int16_t name='y1'/>
        <int16_t name='z1'/>
        <int16_t name='x2'/>
        <int16_t name='y2'/>
        <int16_t name='z2'/>
        <int16_t name='x3'/>
        <int16_t name='y3'/>
        <int16_t name='z3'/>
        <int32_t name='timer'/>
        <int32_t name='item_id' ref-target='item'/>
    </struct-type>

    <struct-type type-name='unit_action_data_hold_terrain' original-name='unit_move_hold_tilest'>
        <int16_t name='x1'/>
        <int16_t name='y1'/>
        <int16_t name='z1'/>
        <int16_t name='x2'/>
        <int16_t name='y2'/>
        <int16_t name='z2'/>
        <int16_t name='x3'/>
        <int16_t name='y3'/>
        <int16_t name='z3'/>
        <int32_t name='timer'/>
        <int32_t name='fatigue'/>
    </struct-type>

    <struct-type type-name='unit_action_data_release_terrain' original-name='unit_move_release_hold_tilest'>
        <int16_t name='x'/>
        <int16_t name='y'/>
        <int16_t name='z'/>
    </struct-type>

    <struct-type type-name='unit_action_data_hold_item' original-name='unit_move_hold_itemst'>
        <int16_t name='x1'/>
        <int16_t name='y1'/>
        <int16_t name='z1'/>
        <int16_t name='x2'/>
        <int16_t name='y2'/>
        <int16_t name='z2'/>
        <int32_t name='item_id' ref-target='item'/>
        <int32_t name='timer'/>
        <int32_t name='fatigue'/>
    </struct-type>

    <struct-type type-name='unit_action_data_mount' original-name='unit_move_mountst'>
        <int16_t name='x1'/>
        <int16_t name='y1'/>
        <int16_t name='z1'/>
        <int16_t name='x2'/>
        <int16_t name='y2'/>
        <int16_t name='z2'/>
        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='riderposition'/>
        <int32_t name='timer'/>
        <int32_t name='fatigue'/>
    </struct-type>

    <struct-type type-name='unit_action_data_dismount' original-name='unit_move_dismountst'>
        <int16_t name='x1'/>
        <int16_t name='y1'/>
        <int16_t name='z1'/>
        <int16_t name='x2'/>
        <int16_t name='y2'/>
        <int16_t name='z2'/>
        <int32_t name='timer'/>
        <int32_t name='fatigue'/>
    </struct-type>

    <struct-type type-name='unit_action_data_lead_animal' original-name='unit_move_lead_animalst'>
        <int32_t name='unit_id' ref-target='unit'/>
    </struct-type>

    <struct-type type-name='unit_action_data_stop_lead_animal' original-name='unit_move_stop_lead_animalst'>
        <int32_t name='unit_id' ref-target='unit'/>
    </struct-type>

    <struct-type type-name='unit_action_data_release_item' original-name='unit_move_release_hold_itemst'>
        <int32_t name='item_id' ref-target='item'/>
    </struct-type>

    <struct-type type-name='unit_action_data_unsteady' original-name='unit_move_regain_balancest'>
        <int32_t name='timer'/>
    </struct-type>

    <struct-type type-name='unit_action_data_stand_up' original-name='unit_move_stand_upst'>
        <int32_t name='timer'/>
    </struct-type>

    <struct-type type-name='unit_action_data_lie_down' original-name='unit_move_lie_downst'>
        <int32_t name='timer'/>
    </struct-type>

    <struct-type type-name='unit_action_data_climb' original-name='unit_move_climbst'>
        <int16_t name='x1'/>
        <int16_t name='y1'/>
        <int16_t name='z1'/>
        <int16_t name='x2'/>
        <int16_t name='y2'/>
        <int16_t name='z2'/>
        <int16_t name='x3'/>
        <int16_t name='y3'/>
        <int16_t name='z3'/>
        <int32_t name='timer'/>
        <int32_t name='timer_init'/>
        <int32_t name='fatigue'/>
    </struct-type>

    <bitfield-type type-name='unit_move_load_ranged_weapon_flag' base-type='uint32_t'> bay12: UNIT_MOVE_LOAD_RANGED_WEAPON_FLAG_*
        <flag-bit name='then_shoot'/>
        <flag-bit name='playcombat'/>
    </bitfield-type>

    <struct-type type-name='unit_action_data_load_ranged_weapon' original-name='unit_move_load_ranged_weaponst'>
        <int32_t name='movewait'/>
        <int32_t name='shooter_itid' ref-target='item'/>
        <int32_t name='ammo_itid' ref-target='item'/>
        <bitfield name='flags' base-type='uint32_t' type-name='unit_move_load_ranged_weapon_flag'/>
        <int32_t name='target_unid' ref-target='unit'/>
        <int16_t name='target_lx'/>
        <int16_t name='target_ly'/>
        <int16_t name='target_lz'/>
        <int16_t name='target_bp'/>
        <int32_t name='target_bp_hit_chance_adjustment'/>
    </struct-type>

    <bitfield-type type-name='unit_move_shoot_ranged_weapon_flag' base-type='uint32_t'> bay12: UNIT_MOVE_SHOOT_RANGED_WEAPON_FLAG_*
        <flag-bit name='playcombat'/>
    </bitfield-type>

    <struct-type type-name='unit_action_data_shoot_ranged_weapon' original-name='unit_move_shoot_ranged_weaponst'>
        <int32_t name='movewait'/>
        <int32_t name='shooter_itid' ref-target='item'/>
        <int32_t name='ammo_itid' ref-target='item'/>
        <bitfield name='flags' base-type='uint32_t' type-name='unit_move_shoot_ranged_weapon_flag'/>
        <int32_t name='target_unid' ref-target='unit'/>
        <int16_t name='target_lx'/>
        <int16_t name='target_ly'/>
        <int16_t name='target_lz'/>
        <int16_t name='target_bp'/>
        <int32_t name='target_bp_hit_chance_adjustment'/>
    </struct-type>

    <struct-type type-name='unit_action_data_throw_item' original-name='unit_move_throw_itemst'>
        <int32_t name='movewait'/>
        <int32_t name='thrown_itid' ref-target='item'/>
        <int32_t name='target_unid' ref-target='unit'/>
        <int16_t name='target_lx'/>
        <int16_t name='target_ly'/>
        <int16_t name='target_lz'/>
        <int16_t name='target_bp'/>
        <int32_t name='target_bp_hit_chance_adjustment'/>
    </struct-type>

    <struct-type type-name='unit_action_data_post_shoot_recovery' original-name='unit_move_post_shoot_recoveryst'>
        <int32_t name='movewait'/>
    </struct-type>

    <struct-type type-name='unit_action' original-name='unit_movest'>
        <enum name='type' type-name='unit_action_type' init-value='None'/>

        <code-helper name='find-instance'>
            (let ((unit (find-instance $unit $$)))
              (find-by-id $unit.actions $id $))
        </code-helper>

        <int32_t name="id" init-value='-1'/>
        <compound name='data' is-union='true' union-tag-attr='tag'>
            <static-array name='raw_data' count='24' type-name='int32_t'/>
            <compound name='move' type-name='unit_action_data_move'/>
            <compound name='job' type-name='unit_action_data_job'/>
            <compound name='jobrecover' type-name='unit_action_data_job_recover'/>
            <compound name='attack' type-name='unit_action_data_attack'/>
            <compound name='jump' type-name='unit_action_data_jump'/>
            <compound name='holdterrain' type-name='unit_action_data_hold_terrain'/>
            <compound name='releaseterrain' type-name='unit_action_data_release_terrain'/>
            <compound name='climb' type-name='unit_action_data_climb'/>
            <compound name='talk' type-name='unit_action_data_talk'/>
            <compound name='unsteady' type-name='unit_action_data_unsteady'/>
            <compound name='parry' type-name='unit_action_data_parry'/>
            <compound name='block' type-name='unit_action_data_block'/>
            <compound name='dodge' type-name='unit_action_data_dodge'/>
            <compound name='recover' type-name='unit_action_data_recover'/>
            <compound name='standup' type-name='unit_action_data_stand_up'/>
            <compound name='liedown' type-name='unit_action_data_lie_down'/>
            <compound name='pushobject' type-name='unit_action_data_push_object'/>
            <compound name='suckblood' type-name='unit_action_data_suck_blood'/>
            <compound name='holditem' type-name='unit_action_data_hold_item'/>
            <compound name='releaseitem' type-name='unit_action_data_release_item'/>
            <compound name='mount' type-name='unit_action_data_mount'/>
            <compound name='dismount' type-name='unit_action_data_dismount'/>
            <compound name='leadanimal' type-name='unit_action_data_lead_animal'/>
            <compound name='stopleadanimal' type-name='unit_action_data_stop_lead_animal'/>
            <compound name='loadrangedweapon' type-name='unit_action_data_load_ranged_weapon'/>
            <compound name='shootrangedweapon' type-name='unit_action_data_shoot_ranged_weapon'/>
            <compound name='throwitem' type-name='unit_action_data_throw_item'/>
            <compound name='postshootrecovery' type-name='unit_action_data_post_shoot_recovery'/>
        </compound>
    </struct-type>

    <struct-type type-name='special_combatst'>
        <stl-vector name='parry_wld' pointer-type='item'/>
        <stl-vector name='parry_move' pointer-type='unit_action'/>
        <stl-vector name='block_wld' pointer-type='item'/>
        <stl-vector name='block_move' pointer-type='unit_action'/>
        <bool name='can_jump_dodge'/>
        <compound name='jumpsquare' type-name='coord2d_path'/>
    </struct-type>

    <struct-type type-name='actionst'>
        <enum type-name='action_type' name='action'/>
        <int32_t name='strength'/>

        <pointer type-name='unit' name='unit'/>
        <pointer type-name='building' name='bld'/>
        <int32_t name='stid' ref-target='world_site'/>
        <int32_t name='abid' ref-target='abstract_building'/>
        <pointer type-name='activity_info' name='activity_meeting'/>
        <pointer type-name='activity_event' name='activity_event'/>
        <compound type-name='coord' name='pos'/>
        <int32_t name='rel_id_ind'/>
        <int32_t name='rel_id_ind2'/>
        <pointer type-name='item' name='item1'/>
        <pointer type-name='item' name='item2'/>
        <enum type-name='job_type' name='job_type'/>
        <bitfield type-name='well_tag' name='well_tag'/>
        <uint32_t name='spec_flag'/>
        <pointer type-name='body_actionst' name='body_action'/>
        <pointer type-name='historical_entity' name='entity'/>
    </struct-type>

    -- Unused: interaction_ai_target_infost

    <enum-type type-name='interaction_context_type' base-type='int32_t'> bay12: InteractionContextType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='COMBAT'/>
        <enum-item name='PEACEFUL'/>
        <enum-item name='ANY'/>
        <enum-item name='FLEEING'/>
        <enum-item name='SOCIAL'/>
        <enum-item name='TORMENT'/>
    </enum-type>

    <struct-type type-name='interaction_contextst'>
        <enum type-name='interaction_context_type' name='type'/>
        <pointer type-name='unit' name='spec_targ'/>
        <enum type-name='unit_reaction_type' name='ur'/>
    </struct-type>

    -- Unused: UnitCanDoInteractionType
    -- Unused: RECEIVE_WOUNDS_FLAG_*
    -- Unused: SKILL_ROLL_FLAG_*

    <struct-type type-name='curse_attr_change' original-name='unit_att_changest'>
        <static-array name='phys_att_perc' type-name='int32_t'
                      count='6' index-enum='physical_attribute_type'/>
        <static-array name='phys_att_add' type-name='int32_t'
                      count='6' index-enum='physical_attribute_type'/>
        <static-array name='ment_att_perc' type-name='int32_t'
                      count='13' index-enum='mental_attribute_type'/>
        <static-array name='ment_att_add' type-name='int32_t'
                      count='13' index-enum='mental_attribute_type'/>
    </struct-type>

    -- Unused: unit_training_assessmentst
    -- Unused: distance_minimizerst
    -- Unused: clothing_planst
    -- Unused: NeedHealLevel

    <enum-type type-name='inv_item_role_type' base-type='int16_t'> bay12: InvItemRoleType
        <enum-item name='Hauled'/>
        <enum-item name='Weapon' comment='also shield, crutch'/>
        <enum-item name='Worn' comment='quiver'/>
        <enum-item name='Piercing'/>
        <enum-item name='Flask' comment='WORN_STUFFED'/>
        <enum-item name='WrappedAround' comment='e.g. bandage'/>
        <enum-item name='StuckIn'/>
        <enum-item name='InMouth' comment='string descr like Worn'/>
        <enum-item name='Pet' comment='Left shoulder, right shoulder, or head, selected randomly using pet_seed'/>
        <enum-item name='SewnInto'/>
        <enum-item name='Strapped'/>
        <enum-item name='Nocked'/>
    </enum-type>

    <struct-type type-name='unit_inventory_item' original-name='invitemst'>
        <pointer name='item' type-name='item'/>

        <code-helper name='describe'>$.mode (describe-obj $.item)</code-helper>

        <enum name='mode' type-name='inv_item_role_type'/>

        <int16_t name='body_part_id'
                 refers-to='$$._global._parent._global.body.body_plan.body_parts[$]'/>

        <int32_t name='pet_seed' comment='RNG seed for Pet mode'/>
        <int32_t name='wound_id' init-value='-1' comment='also nocked_in_itemid'/>
    </struct-type>

    <enum-type type-name='soldier_mood_type' base-type='int32_t'> bay12: SoldierMoodType
        <enum-item name='None' value='-1'/>
        <enum-item name='MartialTrance'/>
        <enum-item name='Enraged'/>
        <enum-item name='Tantrum'/>
        <enum-item name='Depressed'/>
        <enum-item name='Oblivious'/>
    </enum-type>

    <enum-type type-name='mood_stage_type'> bay12: MoodStages, no base type
        <enum-item name='INITIAL'/>
        <enum-item name='WORKING'/>
    </enum-type>

    <bitfield-type type-name='unit_flags1' base-type='uint32_t'> bay12: UNITFLAG_*
        <flag-bit name='move_state'
                  comment='(CANMOVE) Can the dwarf move or are they waiting for their movement timer'/>
        <flag-bit name='inactive'
                  comment='(DEAD) Set for dead units and incoming/leaving critters that are alive but off-map'/>
        <flag-bit name='has_mood' comment='(MOOD) Currently in mood'/>
        <flag-bit name='had_mood' comment='(MOODSPENT) Had a mood already'/>

        <flag-bit name='marauder' comment='wide class of invader/inside creature attackers'/>
        <flag-bit name='drowning' comment='Is currently drowning'/>
        <flag-bit name='merchant' comment='An active merchant'/>
        <flag-bit name='forest'
                  comment='used for units no longer linked to merchant/diplomacy, they just try to leave mostly'/>

        <flag-bit name='left' comment='left the map'/>
        <flag-bit name='rider' comment='Is riding an another creature'/>
        <flag-bit name='incoming'/>
        <flag-bit name='diplomat'/>

        <flag-bit name='temp_flag' comment='used as a temporary marker in certain places'/>
        <flag-bit name='check_active_heist'/>
        <flag-bit name='can_swap' comment='(CANSWAP) Can swap tiles during movement (prevents multiple swaps)'/>
        <flag-bit name='on_ground' comment='(GROUNDED) The creature is laying on the floor, can be conscious'/>

        <flag-bit name='projectile' comment='Launched into the air? Funny.'/>
        <flag-bit name='active_invader' comment='(INVADER) Active invader (for organized ones)'/>
        <flag-bit name='hidden_in_ambush' comment='(AMBUSH)'/>
        <flag-bit name='invader_origin' comment='(INVADER_ORIG) Invader origin (could be inactive and fleeing)'/>

        <flag-bit name='coward' comment='(WILLFLEEUNDERLOSSES) Will flee if invasion turns around'/>
        <flag-bit name='hidden_ambusher' comment='(INVADERFORAY/MARAUDER_ACTIVE) Active marauder/invader moving inward?'/>
        <flag-bit name='invades' comment='(INVADERFORAY2/MARAUDER_RESIDENT) Marauder resident/invader moving in all the way'/>
        <flag-bit name='check_flows' comment='(FLOWCHECK) Check against flows next time you get a chance'/>

        <flag-bit name='ridden'/>
        <flag-bit name='caged'/>
        <flag-bit name='tame'/>
        <flag-bit name='chained'/>

        <flag-bit comment='(UNUSED_1_29)'/>
        <flag-bit comment='(UNUSED_1_30)'/>
        <flag-bit name='suppress_wield' comment='(WIELDSUPPRESS)'/>
        <flag-bit name='important_historical_figure' comment='(NEMESIS) Is an important historical figure'/>
    </bitfield-type>

    <bitfield-type type-name='unit_flags2' base-type='uint32_t'> bay12: UNITFLAG2_*
        <flag-bit name='swimming'/>
        <flag-bit name='sparring' comment='(PLAYCOMBAT) works, but not set for sparring military dwarves(?) (since 0.40.01?)'/>
        <flag-bit name='no_notify' comment='(NO_NOTIFICATIONS) Do not notify about level gains (for embark etc)'/>
        <flag-bit name='uniquebody' comment='this unit has a unique body plan which will be stored in and loaded from the savefile individually'/>

        <flag-bit name='calculated_nerves' comment='(NERVES_CALCULATED)'/>
        <flag-bit name='calculated_bodyparts' comment='(BPS_CALCULATED)'/>
        <flag-bit name='important_historical_figure'
                  comment='(IS_NEMESIS) Is important historical figure (slight variation)'/>
        <flag-bit name='killed'
                  comment='(HAS_BEEN_KILLED) Has been killed by kill function (slightly different from dead, not necessarily violent death)'/>

        <flag-bit name='cleanup_1' comment='(MUST_FORGET_COMPLETELY) Must be forgotten by forget function (just cleanup)'/>
        <flag-bit name='cleanup_2' comment='(MUST_DELETE) Must be deleted (cleanup)'/>
        <flag-bit name='cleanup_3' comment='(JUST_FORGOTTEN) Recently forgotten (cleanup)'/>
        <flag-bit name='for_trade' comment='(CIV_OFFERED) Offered for trade'/>

        <flag-bit name='trade_resolved' comment='(CIV_RESOLVED)'/>
        <flag-bit name='has_breaks' comment='(EVALUATE_LEAKS)'/>
        <flag-bit name='gutted' comment='(HEALTH_GUTTED)'/>
        <flag-bit name='must_forget_completely_keep_rooms'/>

        <flag-bit name='locked_in_for_trading' comment="(TRADE_LOCKED) Locked in for trading"/>
        <flag-bit name='slaughter' comment='(BUTCHERABLE) marked for slaughter'/>
        <flag-bit name='underworld' comment='(DEFENDER) Underworld creature'/>
        <flag-bit name='resident' comment='(CURRENT_RESIDENT) Current resident'/>

        <flag-bit name='cleanup_4'
                  comment='(NONGLOBAL_DELETE) Marked for special cleanup as unused load from unit block on disk'/>
        <flag-bit name='calculated_insulation' comment='(INSULATION_CALCULATED) Insulation from clothing calculated'/>
        <flag-bit name='visitor_uninvited' comment='(UNINVITED_GUEST) Uninvited guest'/>
        <flag-bit name='visitor'/>

        <flag-bit name='calculated_inventory' comment='(INVORDER_CALCULATED) Inventory order calculated'/>
        <flag-bit name='vision_good' comment='(HEALTH_VISION_HAVEFINE) Vision -- have good part'/>
        <flag-bit name='vision_damaged' comment='(HEALTH_VISION_HAVEDAMAGE) Vision -- have damaged part'/>
        <flag-bit name='vision_missing' comment='(HEALTH_VISION_HAVEMISSING) Vision -- have missing part'/>

        <flag-bit name='breathing_good' comment='(HEALTH_BREATHING_HAVEFINE) Breathing -- have good part'/>
        <flag-bit name='breathing_problem' comment='(HEALTH_BREATHING_HAVEPROBLEM) Breathing -- having a problem'/>
        <flag-bit name='roaming_wilderness_population_source' comment='ROMAING_WILDERPOP'/>
        <flag-bit name='roaming_wilderness_population_source_not_a_map_feature' comment='ROAMING_WILDERPOP_NOT_FEATURE'/>
    </bitfield-type>

    <bitfield-type type-name='unit_flags3' base-type='uint32_t'> bay12: UNITFLAG3_*
        <flag-bit name='body_part_relsize_computed' comment='(RELSIZES_CALCULATED)'/>
        <flag-bit name='size_modifier_computed' comment='(TOTAL_APP_SIZE_MOD_CALCULATED)'/>
        <flag-bit name='stuck_weapon_computed' comment='(STUCKIN_WOULD_FLAGS_CALCULATED) cleared if removing StuckIn item to recompute wound flags.'/>
        <flag-bit name='compute_health' comment='(WOUND_CHECK_REQUIRED) causes the health structure to be created or updated'/>

        <flag-bit name='announce_titan' comment='*(UNANNOUNCED) Announces creature like an FB or titan.'/>
        <flag-bit name='training_tired_wait'/>
        <flag-bit name='on_crutch' comment='(CRUTCH_WALKING)'/>
        <flag-bit name='weight_computed' comment='(MASS_CALCULATED)'/>

        <flag-bit name='body_temp_in_range' comment='(BP_TEMP_CHECK_OFF) Is set to 1 every tick for non-dead creatures.'/>
        <flag-bit name='wait_until_reveal' comment='(FROZEN_IN_TIME) Blocks all kind of things until tile is revealed.'/>
        <flag-bit name='scuttle'>
            <comment> (IS_EQUIPMENT)
                Scuttle creature: causes creature to be killed, leaving a behind
                corpse and generating negative thoughts like a real kill.
            </comment>
        </flag-bit>
        <flag-bit name='verify_personal_training'/>

        <flag-bit name='ghostly' comment='(GHOST)'/>
        <flag-bit name='just_sprung_ambush'/>
        <flag-bit name='disturbed_from_death'/>
        <flag-bit name='diving' comment='dropped when znew >= zold'/>

        <flag-bit name='flee_if_birth_race' comment='something to do with werewolves?'/>
        <flag-bit name='no_meandering' comment='(FLEE_WHEN_JOBLESS) for active_invaders'/>
        <flag-bit name='floundering' comment='(FLOUNDERING_IN_LIQUID)'/>
        <flag-bit name='exit_vehicle1' comment='(ON_VEHICLE) trapavoid'/>

        <flag-bit name='exit_vehicle2' comment='(ON_PROJECTILE) trapavoid'/>
        <flag-bit name='dangerous_terrain' comment='(HAVE_FLED_TERRAIN_RECENTLY)'/>
        <flag-bit name='adv_yield' comment='(YIELDED)'/>
        <flag-bit name='vision_cone_set' comment='(VISION_ARC_OBSOLETE)'/>

        <flag-bit name='multipart_vision_have_at_least_damaged'/>
        <flag-bit name='emotionally_overloaded' since='v0.40.01' comment='(PERSONALITY_MOOD_PREVENTS_WORK)'/>
        <flag-bit name='check_reorganize_possessions'/>
        <flag-bit name='available_for_adoption' comment='(AVAILABLE_FOR_PET_SALE)'/>

        <flag-bit name='gelded'/>
        <flag-bit name='marked_for_gelding' comment='(WANT_GELD_JOB)'/>
        <flag-bit name='injury_thought' comment='(DID_WOUND_THOUGHT_AND_NOT_WOUNDED_AGAIN)'/>
        <flag-bit name='guest' comment='causes No Activity to be displayed'/>
    </bitfield-type>

    <bitfield-type type-name='unit_flags4' base-type='uint32_t'> bay12: UNITFLAG4_*
        <flag-bit name='lazy_goblet_check'/>
        <flag-bit name='urgent_goblet_check'/>
        <flag-bit name='counts_as_great_beast'/>
        <flag-bit name='counts_as_animal'/>
        <flag-bit name='counts_as_merchant_for_del'/>
        <flag-bit name='might_be_holding_artifact' comment='does not count containers'/>
        <flag-bit name='might_possess_artifact' comment='counts containers and inventory'/>
        <flag-bit name='invader_waits_for_parley'/>
        <flag-bit name='might_have_moving_inventory'/>
        <flag-bit name='any_texture_must_be_refreshed'/>
        <flag-bit name='only_do_assigned_jobs'/>
        <flag-bit name='mood_succeeded'/>
        <flag-bit name='agitated_wilderness_creature'/>
        <flag-bit name='path_failed_recently'/>
        <flag-bit name='portrait_must_be_refreshed'/>
        <flag-bit name='may_have_magical_inventory_item'/>
        <flag-bit name='may_have_mythical_substance'/>
    </bitfield-type>

    -- Unused: UNITFLAG_CIV_OFFERED

    <enum-type type-name='unitpref_type'> bay12: UnitPrefs, no base type
        <enum-item name='LikeMaterial'/>
        <enum-item name='LikeCreature'/>
        <enum-item name='LikeFood'/>
        <enum-item name='HateCreature'/>
        <enum-item name='LikeItem'/>
        <enum-item name='LikePlant'/>
        <enum-item name='LikeTree'/>
        <enum-item name='LikeColor'/>
        <enum-item name='LikeShape'/>
        <enum-item name='LikePoeticForm'/>
        <enum-item name='LikeMusicalForm'/>
        <enum-item name='LikeDanceForm'/>
    </enum-type>

    <bitfield-type type-name='unitpref_flag' base-type='int8_t'> bay12: UNITPREFFLAG_*
        <flag-bit name='visible'/>
    </bitfield-type>

    <struct-type type-name='unit_preference' original-name='unitprefst'>
        <enum base-type='int16_t' name="type" type-name='unitpref_type'/>

        <code-helper name='describe'>$.type</code-helper>

        <compound is-union='true'>
            <enum base-type='int32_t' name="item_type" type-name='item_type'/>
            <int32_t name='creature_id' ref-target='creature_raw'/>
            <int32_t name='color_id' ref-target='descriptor_color'/>
            <int32_t name='shape_id' ref-target='descriptor_shape'/>
            <int32_t name='plant_id' ref-target='plant_raw'/>
            <int32_t name='poetic_form_id' ref-target='poetic_form'/>
            <int32_t name='musical_form_id' ref-target='musical_form'/>
            <int32_t name='dance_form_id' ref-target='dance_form'/>
        </compound>

        <int32_t name="item_subtype" refers-to='(item-subtype-target $$._parent.item_type $)'/>

        <int32_t name='mattype' ref-target='material' aux-value='$$.matindex'/>
        <int32_t name='matindex'/>

        <enum type-name='matter_state' name='mat_state'/>

        <bitfield name='flags' type-name='unitpref_flag' base-type='int8_t'/>

        <int32_t name='prefstring_seed' comment='feeds into a simple RNG to choose which prefstring to use'/>
    </struct-type>

    <enum-type type-name='demand_type'> bay12: Demands
        <enum-item name='ROOM_ITEM'/>
    </enum-type>

    <enum-type type-name='demand_room'> bay12: DemandRooms
        <enum-item name='Office'/>
        <enum-item name='Bedroom'/>
        <enum-item name='DiningRoom'/>
        <enum-item name='Tomb'/>
    </enum-type>

    <struct-type type-name='unit_demand' original-name='demandst'>
        <enum name="overtype" type-name='demand_type' base-type='int16_t'/>

        <enum base-type='int16_t' name='place' type-name='demand_room'/>

        <enum name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <int16_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name="mat_index" init-value='-1'/>

        <int32_t name='timeout_counter' comment='counts once per 10 frames'/>
        <int32_t name='timeout_limit' comment='once counter passes limit, mandate ends'/>
    </struct-type>

    <struct-type type-name='unit_skill' original-name='skillst'>
        <enum name="id" type-name='job_skill'/>

        <code-helper name='describe'>$.id</code-helper>

        <enum base-type='int32_t' name="rating" type-name='skill_rating'/>
        <int32_t name="experience"/>
        <int32_t name="unused_counter"/>
        <int32_t name="rusty"/>
        <int32_t name="rust_counter"/>
        <int32_t name="demotion_counter"/>
        <int32_t name="natural_skill_lvl" comment='This is the NATURAL_SKILL level for the caste in the raws. This skill cannot rust below this level.'/>
    </struct-type>

    <enum-type type-name='unit_relationship_type' base-type='int32_t'> bay12: RelationType
        <enum-item name='None' value='-1'/>
        <enum-item name='PetOwner'/>
        <enum-item name='Spouse'/>
        <enum-item name='Mother'/>
        <enum-item name='Father'/>
        <enum-item name='LastAttacker' comment='SLAYER'/>
        <enum-item name='GroupLeader'/>
        <enum-item name='Draggee'/>
        <enum-item name='Dragger'/>
        <enum-item name='RiderMount'/>
        <enum-item name='NUM' comment='end of simple types, rest used elsewhere'/>
        <enum-item name='Lover'/>
        <enum-item name='Sibling'/>
        <enum-item name='Child'/>
        <enum-item name='Friend'/>
        <enum-item name='Grudge'/>
        <enum-item name='Worship'/>
        <enum-item name='AcquaintanceLong'/>
        <enum-item name='AcquaintancePassing'/>
        <enum-item name='Bonded'/>
        <enum-item name='Hero'/>
        <enum-item name='ConsidersViolent'/>
        <enum-item name='ConsidersPsychotic'/>
        <enum-item name='GoodForBusiness'/>
        <enum-item name='FriendlyTerms'/>
        <enum-item name='ConsidersKiller'/>
        <enum-item name='ConsidersMurderer'/>
        <enum-item name='Comrade'/>
        <enum-item name='MemberOfRespectedGroup'/>
        <enum-item name='MemberOfHatedGroup'/>
        <enum-item name='EnemyFighter'/>
        <enum-item name='FriendlyFighter'/>
        <enum-item name='ConsidersBully'/>
        <enum-item name='ConsidersBrigand'/>
        <enum-item name='LoyalSoldier'/>
        <enum-item name='ConsidersMonster'/>
        <enum-item name='ConsidersPreacher'/>
        <enum-item name='ConsidersPoet'/>
        <enum-item name='ConsidersBard'/>
        <enum-item name='ConsidersDancer'/>
        <enum-item name='Master'/>
        <enum-item name='Apprentice'/>
        <enum-item name='Companion'/>
        <enum-item name='FormerMaster'/>
        <enum-item name='FormerApprentice'/>
        <enum-item name='ConsidersQuarreler'/>
        <enum-item name='ConsidersFlatterer'/>
        <enum-item name='Hunter'/>
        <enum-item name='ProtectorOfTheWeak'/>
        <enum-item name='TreasureHunter'/>
        <enum-item name='Thief'/>
        <enum-item name='KnowledgePreserver'/>
        <enum-item name='Pet'/>
        <enum-item name='Intruder'/>
        <enum-item name='ConsidersStoryteller'/>
    </enum-type>

    <struct-type type-name='unitplotst'>
        <enum name='state' base-type='int8_t'> bay12: ???
            <enum-item name="SelectNoble" value="0"/>
            <enum-item name="FollowNoble" value="1"/>
            <enum-item name="DoMeeting" value="2"/>
            <enum-item name="LeaveMap" value="3"/>
        </enum>
        <int32_t name='target_entity' ref-target='historical_entity'/>
        <enum name='target_role' type-name='entity_position_responsibility'/>
    </struct-type>

    <enum-type type-name='wrestle_state_type' base-type='int16_t'> bay12: WrestleStateType
        <enum-item name='LatchedOn'/>
        <enum-item name='Grab'/>
        <enum-item name='JointLock'/>
        <enum-item name='Choke'/>
    </enum-type>

    <struct-type type-name='unit_item_wrestle' original-name='unit_wrestlest'>
        <int32_t name="unit" ref-target='unit'/>
        <int32_t name="self_bp"
                 refers-to='$$._parent._upglobal.body.body_plan.body_parts[$]'/>
        <int32_t name="other_bp"
                 refers-to='$$._parent.unit.ref-target.body.body_plan.body_parts[$]'/>
        <int32_t name="sub_bp" init-value='-1'/>
        <int32_t name="other_sub_bp" init-value='-1'/>
        <int32_t name='item1' ref-target='item'/>
        <int32_t name='item2' ref-target='item'/>
        <enum name="state" type-name='wrestle_state_type'/>
        <int8_t name="advantage" comment='1 grabs, -1 grabbed'/>
        <int32_t name="opp_active_wound_id" init-value='-1'/>
    </struct-type>

    -- Unused: RollType
    -- Unused: unitpropertyplacementst
    -- Unused: squad_property_placementst

    <struct-type type-name='unit_complaint' original-name='complaintst'>
        <enum name="type" type-name='history_event_reason'/>
        <int32_t name='age'/>
    </struct-type>

    <bitfield-type type-name='parley_flag' base-type='uint32_t'> bay12: PARLEY_FLAG_*
        <flag-bit name='did_topic_meeting'/>
        <flag-bit name='returning_treasure'/>
    </bitfield-type>

    <struct-type type-name='unit_parley' original-name='parleyst'>
        <int32_t name='invasion' ref-target='invasion_info'/>
        <int32_t name='speaker' ref-target='unit'/>
        <int32_t name='artifact' ref-target='artifact_record'/>
        <bitfield name='flags' base-type='uint32_t' type-name='parley_flag'/>
    </struct-type>

    <struct-type type-name='command_move_to_tilest'>
        <compound name='pos' type-name='coord'/>
    </struct-type>

    <enum-type type-name='command_type' base-type='int32_t'> bay12: CommandType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='MOVE_TO_TILE'/>
    </enum-type>

    <bitfield-type type-name='command_flags' base-type='uint32_t'> bay12: COMMAND_FLAG_*
        <flag-bit name='DEAD'/>
    </bitfield-type>

    <bitfield-type type-name='unit_command_flags' base-type='uint32_t'> bay12: UNIT_COMMAND_FLAG_*
        <flag-bit name='HAVE_COMMAND_GAIT'/>
        <flag-bit name='AUTOMATED_TACTICAL'/>
    </bitfield-type>

    <struct-type type-name='command' original-name='commandst'>
        <enum name='type' type-name='command_type'/>
        <int32_t name='commander_unid' ref-target='unit'/>
        <int32_t name='command_hfid' ref-target='historical_figure'/>
        following field not saved:
        <bitfield name='flags' type-name='command_flags'/>
        <compound is-union='true'>
            <compound type-name='command_move_to_tilest' name='MOVE_TO_TILE'/>
        </compound>
    </struct-type>

    <enum-type type-name="request_type"> bay12: RequestTypes
        <enum-item name='DoGuildJobs'/>
        <enum-item name='MakeWeapons'/>
    </enum-type>

    <struct-type type-name='unit_request' original-name='requestst'>
        <enum base-type='int16_t' name="type" type-name='request_type'/>
        <int16_t name='source'/>
        <int16_t name='count'/>
    </struct-type>

    <enum-type type-name='mill_pref_type' base-type='int32_t'> bay12: MillPrefType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='GATE'/>
        <enum-item name='ANYWHERE'/>
        <enum-item name='BEDROOM'/>
        <enum-item name='HALL'/>
        <enum-item name='STATUE'/>
        <enum-item name='ZOO'/>
        <enum-item name='ZONE'/>
        <enum-item name='LOCATION_BLD'/>
        <enum-item name='UNDERGROUND'/>
        <enum-item name='MUSEUM'/>
    </enum-type>

    <bitfield-type type-name='clothing_needs_bp_flag' base-type='uint32_t'> bay12: CLOTHING_NEEDS_BP_FLAG_*
        <flag-bit name='lowerbody'/>
        <flag-bit name='upperbody'/>
        <flag-bit name='stance'/>
        <flag-bit name='head'/>
        <flag-bit name='grasp'/>
        <flag-bit name='missing'/>
        <flag-bit name='right'/>
        <flag-bit name='left'/>
        <flag-bit name='not_naked'/>
    </bitfield-type>

    <bitfield-type type-name='clothing_needs_bp_item_flag' base-type='uint32_t'> bay12: CLOTHING_NEEDS_BP_ITEM_FLAG_*
        <flag-bit name='shaped'/>
    </bitfield-type>

    <struct-type type-name='caste_clothing_item' original-name='clothing_needs_bpst'>
        <int16_t name="body_part_id"/>
        <bitfield name='flags' base-type='uint32_t' type-name='clothing_needs_bp_flag'/>

        <!-- This stuff appears to be used as temporaries
             during claim selection or whatever. -->
        <static-array name='item' count='3' comment='under, over, cover'>
            <pointer type-name="item"/>
        </static-array>
        <static-array name="current_worn_damage" count='3' type-name='int32_t'/>
        <static-array name="size" count='3' type-name='int32_t'/>
        <static-array name="permit" count='3' type-name='int32_t'/>
        <static-array name="item_flag" count='3' type-name='clothing_needs_bp_item_flag'/>
    </struct-type>

    <struct-type type-name='clothing_needsst'>
        <stl-vector name='bp' pointer-type='caste_clothing_item'/>
    </struct-type>

    <enum-type type-name='rider_positions_type'> bay12: RiderPositions
        <enum-item name='STANDARD'/>
        <enum-item name='CARRIED'/>
        <enum-item name='WAGONPULL1'/>
        <enum-item name='WAGONPULL2'/>
        <enum-item name='WAGONLEADER'/>
    </enum-type>

    <struct-type type-name='unit_coin_debt' original-name='debtst'>
        <int32_t name='recipient' ref-target='unit'/>
        <int32_t name='amount'/>
    </struct-type>

    -- Unused: UnitVisionState
    -- Unused: UnitBreathingState
    -- Unused: CanUseItem

    <struct-type type-name='unit_misc_trait' original-name='counterst'>
        <enum base-type='int16_t' type-name='misc_trait_type' name='id'/>

        <code-helper name='describe'>(fmt "id=~A value=~A" $.id $.value)</code-helper>

        <int32_t name='value'/>
    </struct-type>

    <struct-type type-name='combat_listst'>
        <pointer name='target' type-name='unit'/>
        <int8_t name='strike'/>
        <int8_t name='wrestle'/>
        <stl-vector name='a_item_list' pointer-type='item'/>
        <stl-vector name='a_bp_list' type-name='int16_t'/>
        <stl-vector name='d_item_list' pointer-type='item'/>
        <stl-vector name='d_bp_list' type-name='int16_t'/>
        <stl-vector name='a_wrestle' pointer-type='unit_item_wrestle'/>
        <stl-vector name='d_wrestle' pointer-type='unit_item_wrestle'/>
        <stl-vector name='a_invitem' pointer-type='unit_inventory_item'/>
        <stl-vector name='d_invitem' pointer-type='unit_inventory_item'/>

        <stl-vector name='grapple_attack_a_bp' type-name='int16_t'/>
        <stl-vector name='grapple_attack_a_item' type-name='int16_t'/>
        <stl-vector name='grapple_attack_d_bp' type-name='int16_t'/>
        <stl-vector name='grapple_attack_d_item' type-name='int16_t'/>
        <stl-vector name='wrestle_attack_ind' type-name='int16_t'/>
        <stl-vector name='wrestle_attack_type' type-name='int16_t'/>
        <stl-vector name='wrestle_attack_bp' type-name='int16_t'/>
    </struct-type>

    -- Unused: BlockCheck

    <bitfield-type type-name='body_part_status' base-type='uint32_t'> bay12: UNIT_BP_FLAG_*
        <flag-bit name='on_fire'/>
        <flag-bit name='missing'/>
        <flag-bit name='organ_loss' comment='FUNCTION_LOSS; cyan'/>
        <flag-bit name='organ_damage' comment='ANY_FUNCTION_DAMAGE; yellow'/>

        <flag-bit name='muscle_loss' comment='red'/>
        <flag-bit name='muscle_damage' comment='yellow'/>
        <flag-bit name='bone_loss' comment='STRUCTURE_LOSS; red'/>
        <flag-bit name='bone_damage' comment='ANY_STRUCTURE_DAMAGE; yellow'/>

        <flag-bit name='skin_damage' comment='ANY_DAMAGE; brown'/>
        <flag-bit name='motor_nerve_severed'/>
        <flag-bit name='sensory_nerve_severed'/>
        <flag-bit name='spilled_guts' comment='HAS_POPPED_OUT'/>

        <flag-bit name='has_splint'/>
        <flag-bit name='has_bandage'/>
        <flag-bit name='has_plaster_cast'/>
        <flag-bit name='grime' count='3'/>

        <flag-bit name='severed_or_jammed'
                  comment='TEMP_NOT_ATTACHED; seen e.g. on ribs smashed by blunt attack, but quickly disappeared'/>
        <flag-bit name='under_shell' comment='RETRACTED'/>

        <flag-bit name='is_shell' comment='RETRACT_COVER'/>
        <flag-bit name='mangled' comment='PULPED'/>
        <flag-bit name='has_pulped_tissue'/>
        <flag-bit name='gelded' comment='set on GELDABLE body parts after a unit has been gelded'/>
    </bitfield-type>

    <bitfield-type type-name='body_layer_status' base-type='uint32_t'>  bay12: UNIT_TISSUE_LAYER_FLAG_*
        <flag-bit name='gone'/>
        <flag-bit name='leaking'/>
    </bitfield-type>

    <enum-type type-name='unit_owner_type'> bay12: UnitOwner
        <enum-item name='NONE' value='-1'/>
        <enum-item name='PET_MASTER'/>
        <enum-item name='DEAD_PET_MASTER'/>
        <enum-item name='HEALTHCARE'/>
        <enum-item name='DEAD_OWNER'/>
        <enum-item name='PACK_LEADER'/>
        <enum-item name='TRAINER'/>
        <enum-item name='EMPLOYER'/>
        <enum-item name='MERCHANT_HAULER'/>
        <enum-item name='PARENT'/>
        <enum-item name='COMMANDER'/>
    </enum-type>

    <struct-type type-name='unit_consumption_logst'>
        <compound name='food'> not a compound
            <stl-vector name='item_type'>
                <enum base-type='int16_t' type-name='item_type'/>
            </stl-vector>
            <stl-vector name='item_subtype' type-name='int16_t'/>
            <compound name='material' type-name='material_vec_ref'/>
            <stl-vector name='year' type-name='int32_t'/>
            <stl-vector name='year_time' type-name='int32_t'/>
        </compound>
        <compound name='drink'> not a compound
            <stl-vector name='item_type'>
                <enum base-type='int16_t' type-name='item_type'/>
            </stl-vector>
            <stl-vector name='item_subtype' type-name='int16_t'/>
            <compound name='material' type-name='material_vec_ref'/>
            <stl-vector name='year' type-name='int32_t'/>
            <stl-vector name='year_time' type-name='int32_t'/>
        </compound>
    </struct-type>

    <bitfield-type type-name='wound_damage_flags1'> bay12: UNIT_WOUND_LAYER_FLAG_*
        <flag-bit name='cut'/>
        <flag-bit name='smashed'/>
        <flag-bit name='scar_cut' comment='straight scar'/>
        <flag-bit name='scar_smashed' comment='huge dent'/>

        <flag-bit name='tendon_bruised'/>
        <flag-bit name='tendon_strained'/>
        <flag-bit name='tendon_torn'/>
        <flag-bit name='ligament_bruised'/>

        <flag-bit name='ligament_sprained'/>
        <flag-bit name='ligament_torn'/>
        <flag-bit name='motor_nerve_severed'/>
        <flag-bit name='sensory_nerve_severed'/>

        <flag-bit name='edged_damage'/>
        <flag-bit name='smashed_apart' comment='?'/>
        <flag-bit name='major_artery'/>
        <flag-bit name='guts_spilled'/>

        <flag-bit name='edged_shake1'/>
        <flag-bit name='scar_edged_shake1' comment='jagged scar'/>
        <flag-bit name='edged_shake2'/>
        <flag-bit name='broken'/>

        <flag-bit name='scar_broken' comment='huge dent'/>
        <flag-bit name='gouged'/>
        <flag-bit name='blunt_shake1'/>
        <flag-bit name='scar_blunt_shake1' comment='jagged scar'/>

        <flag-bit name='blunt_shake2'/>
        <flag-bit name='joint_bend1'/>
        <flag-bit name='scar_joint_bend1' comment='jagged scar'/>
        <flag-bit name='joint_bend2'/>

        <flag-bit name='compound_fracture'/>
        <flag-bit name='diagnosed'/>
        <flag-bit name='artery'/>
        <flag-bit name='overlapping_fracture'/>
    </bitfield-type>

    <bitfield-type type-name='wound_damage_flags2'> bay12: UNIT_WOUND_LAYER_FLAG2_*
        <flag-bit name='needs_setting'/>
        <flag-bit name='entire_surface'/>
        <flag-bit name='gelded'/>
    </bitfield-type>

    <struct-type type-name='unit_wound_layerst'>
        <int32_t name="global_layer_idx"
                 refers-to='$$._global._upglobal.caste.ref-target.body_info.layer_idx[$].refers-to'/>
        <int16_t name="body_part_id"
                 refers-to='$$._global._upglobal.caste.ref-target.body_info.body_parts[$]'/>
        <int16_t name="layer_idx"
                 refers-to='$$._parent.body_part_id.refers-to.layers[$]'/>

        Contact area of the wound. Is initially the lesser of the weapon or body
        part contact areas. It grows with cumulative hits. Body parts and non-weapon
        items have contact=(size/10)^(2/3).
        <int32_t name="contact_area"/>
        <int16_t name="surface_perc"/>

        This is strain. For skin/muscle/fat it is usually around 50000, and for
        bone 100-113. This number heals over time towards 0. A wound that only
        has strain is called "dented".
        <int32_t name="strain"/>

        <stl-vector name="effect_perc1" type-name='int16_t'/>
        <stl-vector name="effect_perc2" type-name='int16_t'/>
        <stl-vector name="effect_type">
            <enum base-type='int16_t' type-name='wound_effect_type'/>
        </stl-vector>

        A random percentage from 0-100, only for edged damage cases. Otherwise 0.
        Values above 50 turn straight_scar description into curving scar.
        <int16_t name="edged_curve_perc"/>

        <bitfield name="flags1" type-name='wound_damage_flags1'/>
        <bitfield name="flags2" type-name='wound_damage_flags2'/>

        <int32_t name="bleeding"/>
        <int32_t name="pain"/>
        <int32_t name="nausea"/>
        <int32_t name="dizziness"/>
        <int32_t name="paralysis"/>
        <int32_t name="numbness"/>
        <int32_t name="swelling"/>
        <int32_t name="impaired"/>

        <int32_t name='last_paralysis' since='v0.42.01'/>
        <int32_t name='last_numbness' since='v0.42.01'/>
        <int32_t name='last_impaired' since='v0.42.01'/>

        This 0-100 percentage is related to cumulative damage. In cases where
        multiple axe hacks are necessary for severing a limb, it must reach 100
        before severing occurs. In cases where a weapon can't completely penetrate
        a tissue, it is related to the weapon's penetration number. This percentage
        heals towards 0 over time.
        <int16_t name="cur_penetration_perc"/>
        <int16_t name="max_penetration_perc"/>

        <int32_t name="jammed_layer_idx" comment='in compound fracture'
                 refers-to='$$._global._upglobal.caste.ref-target.body_info.layer_idx[$].refers-to'/>

        <int32_t name='partially_butchered' since='v0.40.06'/>
    </struct-type>

    <struct-type type-name='wound_usable_interactionst'>
        <stl-vector name='interaction_id' type-name='int32_t' ref-target='creature_interaction_effect'/>
        <stl-vector name='interaction_time' type-name='int32_t'/>
        <int32_t name='time_counter'/>
    </struct-type>

    <bitfield-type type-name="unit_wound_special_stats_flag" base-type='uint32_t'> bay12: UWSS_FLAG_*
        <flag-bit name='has_sense_creature_class'/>
    </bitfield-type>

    <struct-type type-name='wound_curse_info' original-name='unit_wound_special_statsst'>
        <bitfield name="flags" base-type='uint32_t' type-name='unit_wound_special_stats_flag'/>

        <bitfield name='add_tags1' type-name='cie_add_tag_mask1'/>
        <bitfield name='rem_tags1' type-name='cie_add_tag_mask1'/>
        <bitfield name='add_tags2' type-name='cie_add_tag_mask2'/>
        <bitfield name='rem_tags2' type-name='cie_add_tag_mask2'/>

        <bool name='name_visible'/>
        <stl-string name='name'/>
        <stl-string name='name_plural'/>
        <stl-string name='name_adjective'/>

        <uint8_t name='display_tile'/>
        <int8_t name='display_f'/>
        <int8_t name='display_b'/>
        <int8_t name='display_br'/>
        <uint8_t name='flash_tile'/>
        <int8_t name='flash_f'/>
        <int8_t name='flash_b'/>
        <int8_t name='flash_br'/>
        <uint32_t name='flash_period'/>
        <uint32_t name='flash_time2'/>
        <uint32_t name='speed_add'/>
        <uint32_t name='speed_mul_percent' init-value='100'/>

        <pointer name='attr_change' type-name='curse_attr_change'/>

        <pointer name='pers_change' type-name='soul_personality_changest'/>

        <uint32_t name='luck_mul_percent' init-value='100'/>
        <int32_t name='erratic_level' since='v0.42.01'/>

        <compound name='usable_interaction' type-name='wound_usable_interactionst'/>

        <int32_t name='were_race' ref-target='creature_raw'/>
        <int32_t name='were_caste' ref-target='caste_raw' aux-value='$$.were_race'/>
        <stl-vector name='body_appearance' type-name='int32_t'/>
        <stl-vector name='bp_appearance' type-name='int32_t'/>
    </struct-type>

    <bitfield-type type-name="unit_wound_flag" base-type='uint32_t'> bay12: UNIT_WOUND_FLAG_*
        <flag-bit name='severed_part'/>
        <flag-bit name='popped_out'/>
        <flag-bit name='stuck_weapon'/>
        <flag-bit name='diagnosed'/>
        <flag-bit name='sutured'/>
        <flag-bit name='infection'/>
    </bitfield-type>

    <struct-type type-name='unit_wound' original-name='unit_woundst' key-field='id'>
        <int32_t name="id"/>

        <stl-vector name="parts" pointer-type='unit_wound_layerst'/>

        <int32_t name="age"/>

        <int32_t name="attacker_unit_id" ref-target='unit'/>
        <int32_t name="attacker_hist_figure_id" ref-target='historical_figure'/>

        <bitfield name="flags" base-type='uint32_t' type-name='unit_wound_flag'/>

        <int32_t name="syndrome_id" ref-target='syndrome'/>

        <int32_t name="pain"/>
        <int32_t name="nausea"/>
        <int32_t name="dizziness"/>
        <int32_t name="paralysis"/>
        <int32_t name="numbness"/>
        <int32_t name="fever"/>
        <pointer name="curse" type-name='wound_curse_info'/>
        <int32_t name='last_paralysis' since='v0.42.01'/>
        <int32_t name='last_numbness' since='v0.42.01'/>
    </struct-type>

    <struct-type type-name='unit_genes' original-name='unit_geneticsst'>
        <!-- length matches body_appearance_modifiers + tissue_appearance_modifiers -->
        <df-array name='appearance' type-name='uint8_t' comment='not a real type, just a pointer followed by an int16'/>
        <!-- two items per color modifier -->
        <df-array name="colors" type-name='int16_t' comment='not a real type, just a pointer followed by an int16'/>
    </struct-type>

    <bitfield-type type-name='active_creature_interaction_effect_flag' base-type='uint32_t'> bay12: ACTIVE_CREATURE_INTERACTION_EFFECT_FLAG_*
        <flag-bit name='disabled' comment='if PROB roll fails, or all symptoms expire'/>
        <flag-bit name='active'/>
    </bitfield-type>

    <struct-type type-name='active_creature_interaction_effectst'>
        <int32_t name='quantity' comment='from spatter size'/>
        <int32_t name='delay' comment='for SIZE_DELAYS'/>
        <int32_t name='ticks'/>
        -- When not cie.isUntargeted():
        <stl-vector name='target_bp' type-name='int16_t'/>
        <stl-vector name='target_layer' type-name='int16_t'/>
        <stl-vector name='target_quantity' type-name='int32_t'/>
        <stl-vector name='target_delay' type-name='int32_t'/>
        <stl-vector name='target_ticks' type-name='int32_t'/>
        <bitfield name='flags' base-type='uint32_t' type-name='active_creature_interaction_effect_flag'/>
        <int32_t name='random_transformation_race' ref-target='creature_raw' init-value='-1' comment='With syndromes that transform the unit into a random creature, the target race ID is stored here.'/>
        <int32_t name='random_transformation_caste' ref-target='caste_raw' aux-value='$$.random_transformation_race' init-value='-1' comment='With syndromes that transform the unit into a random creature, the target caste ID is stored here.'/>
    </struct-type>

    <bitfield-type type-name='active_syndrome_flag' base-type='uint32_t'> bay12: ACTIVE_SYNDROME_FLAG_*
        <flag-bit name='is_sick' comment='urgent care needed'/>
        <flag-bit name='is_sick_low' comment='care needed'/>
        <flag-bit name='diagnosis_attempted'/>
        <flag-bit name='diagnosed'/>
    </bitfield-type>

    <struct-type type-name='unit_syndrome' original-name='active_syndromest' key-field='type'>
        <int32_t name='type' ref-target='syndrome'/>
        <int32_t name='year'/>
        <int32_t name='year_time'/>
        <int32_t name='ticks'/>
        <stl-vector name='wounds' type-name='int32_t' comment='refers to unit_wound by id'/>
        <int32_t name='wound_id' init-value='-1'/>
        <stl-vector name='symptoms' index-refers-to='$$._global.type.ref-target.ce[$]' pointer-type='active_creature_interaction_effectst'/>
        <int16_t name='reinfection_count' comment='set from unit.reinfection_count[i]++'/>
        <bitfield name='flags' base-type='uint32_t' type-name='active_syndrome_flag'/>
        <stl-vector name='failed_diagnosis_unid' type-name='int32_t' ref-target='unit'/>
    </struct-type>

    <enum-type type-name='unit_report_type' base-type='int16_t'> bay12: UnitAnnouncementCategoryType
        <enum-item name='Combat'/>
        <enum-item name='Sparring'/>
        <enum-item name='Hunting'/>
    </enum-type>

    <struct-type type-name='unit_patient_profile_completed_jobst'>
        <enum name="job_type" type-name='job_type'/>

        <compound name='info' is-union='true' union-tag-field='job_type' union-tag-attr='tag_op_history'>
            <compound name='crutch'>
                <int32_t name='item_type' refers-to='(enum-to-key $item_type $)'/>
                <int32_t name='item_subtype' init-value='-1'/>
                <int32_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
                <int32_t name="mat_index" init-value='-1'/>
                <int32_t name="item_id" ref-target='item'/>
            </compound>

            <int32_t name='bed_id' ref-target='building'/>

            <compound name='bandage'>
                <int32_t name="mat_type" ref-target='material' aux-value='$$.mat_index'/>
                <int32_t name="mat_index" init-value='-1'/>

                <int32_t name="body_part_id" init-value='-1'/>
                <int32_t name="item_id" ref-target='item'/>
            </compound>

            <compound name='surgery'>
                <enum name='subtype' type-name='job_subtype_surgery' base-type='int32_t'/>
                <int32_t name='body_part_id' init-value='-1'/>
                <int32_t name='amputated_part_id' init-value='-1'/> wild guess: item ID?
            </compound>
        </compound>

        <int32_t name="year"/>
        <int32_t name="year_time"/>

        <int32_t name="doctor_id" ref-target='unit'/>
    </struct-type>

    <struct-type type-name='unit_patient_profile_syndrome_diagnosisst'>
        <int32_t name='syndrome_ind'/>
        <int32_t name='year'/>
        <int32_t name="season_count"/>
        <int32_t name="worker_unid" ref-target='unit'/>
    </struct-type>

    <bitfield-type type-name='unit_health_flags'> bay12: UNIT_PATIENT_PROFILE_FLAG_*
        <flag-bit name='rq_diagnosis'/>
        <flag-bit name='should_not_move'/>
        <flag-bit name='needs_healthcare'/>
        <flag-bit name='rq_immobilize'/>

        <flag-bit name='rq_dressing'/>
        <flag-bit name='rq_cleaning'/>
        <flag-bit name='rq_surgery'/>
        <flag-bit name='rq_suture'/>

        <flag-bit name='rq_setting'/>
        <flag-bit name='rq_traction'/>
        <flag-bit name='rq_crutch'/>

        due to a field initialization bug, higher bits contain garbage
    </bitfield-type>

    <bitfield-type type-name='unit_bp_health_flags'> bay12: UNIT_PATIENT_PROFILE_BP_FLAG_*
        <flag-bit name='rq_immobilize'/>
        <flag-bit name='rq_dressing'/>
        <flag-bit name='rq_cleaning'/>
        <flag-bit name='rq_surgery'/>
        <flag-bit name='rq_suture'/>
        <flag-bit name='rq_setting'/>
        <flag-bit name='rq_traction'/>
        <flag-bit name='inoperable_rot'/>
        <flag-bit name='needs_bandage' comment='used to remove once not needed'/>
        <flag-bit name='needs_cast' comment='used to remove once not needed'/>
    </bitfield-type>

    <struct-type type-name='unit_health_info' original-name='unit_patient_profilest'>
        <int32_t name="unit_id" ref-target='unit'/>

        <bitfield name="flags" type-name='unit_health_flags'/>
        <stl-vector name="body_part_flags" type-name='unit_bp_health_flags'/>

        <int16_t name="try_for_cast_cntdn"/>
        <int16_t name="immobilize_cntdn"/>
        <int16_t name="dressing_cntdn"/>
        <int16_t name="suture_cntdn"/>
        <int16_t name="crutch_cntdn"/>
        <int16_t name="get_out_of_traction_diagnosis_timer"/>

        <stl-vector name="op_history" pointer-type='unit_patient_profile_completed_jobst'/>

        <stl-vector name="syndrome_diagnosis" pointer-type='unit_patient_profile_syndrome_diagnosisst'/>
    </struct-type>

    <struct-type type-name='squad_infost'>
        <int32_t name='squad_id' ref-target='squad'/>
        <int32_t name='squad_position' init-value='-1'/>
        <int32_t name='patrol_cooldown'/>
        <int32_t name='patrol_timer'/>
    </struct-type>

    <enum-type type-name='unit_uniform_mode_type' base-type='int16_t'> bay12: UnitUniformModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='CLOTHING'/>
        <enum-item name='REGULAR'/>
        <enum-item name='TRAINING'/>
        <enum-item name='TRAINING_RANGED'/>
    </enum-type>

    <bitfield-type type-name='unit_clothing_info_flag'> bay12: UNIT_CLOTHING_FLAG_*
        <flag-bit name='update' comment='MUST_BUILD_MAIN_VECTOR'/>
    </bitfield-type>

    <struct-type type-name='unit_clothing_infost'>
        <enum name='cur_uniform' type-name='unit_uniform_mode_type'/>

        <stl-vector name='clothing_item_id' type-name='int32_t'
                    ref-target='item' since='v0.34.06'/>

        <static-array name='uniforms' count='4' index-enum='unit_uniform_mode_type'>
            <stl-vector type-name='int32_t' ref-target='item'/>
        </static-array>

        <bitfield name='pickup_flags' type-name='unit_clothing_info_flag'/>

        <stl-vector name='uniform_pickup' type-name='int32_t' ref-target='item'/>
        <stl-vector name='uniform_drop' type-name='int32_t' ref-target='item'/>
    </struct-type>

    <bitfield-type type-name='item_familiarity_flag' base-type='uint32_t'> bay12: ITEM_FAMILIARITY_*
        <flag-bit name='has_grown_attached'/>
    </bitfield-type>

    <struct-type type-name='unit_item_use' original-name='item_familiarityst' key-field='id'>
        <int32_t name="id" ref-target='item'/>
        <int32_t name="time_in_use"/>
        <bitfield name='flags' base-type='uint32_t' type-name='item_familiarity_flag'/>
        <int32_t name="affection_level" comment='min 50 for attached, 1000 for name'/>
    </struct-type>

    <enum-type type-name='ghost_goal' base-type='int16_t'> bay12: GhostActivityType
        <enum-item name='None' value='-1'/>
        <enum-item name='ScareToDeath'/>
        <enum-item name='Stun'/>
        <enum-item name='Batter'/>
        <enum-item name='Possess'/>
        <enum-item name='MisplaceItem'/>
        <enum-item name='Haunt'/>
        <enum-item name='Torment'/>
        <enum-item name='ToppleBuilding'/>
    </enum-type>

    <enum-type type-name='ghost_type' base-type='int16_t'> bay12: GhostType
        <enum-item name='None' value='-1'/>
        <enum-item name='MurderousGhost' comment='MURDEROUS'/>
        <enum-item name='SadisticGhost' comment='SADISTIC'/>
        <enum-item name='SecretivePoltergeist' comment='HIDER'/>
        <enum-item name='EnergeticPoltergeist' comment='TOPPLER'/>
        <enum-item name='AngryGhost' comment='POSSESSOR'/>
        <enum-item name='ViolentGhost' comment='ANGRY'/>
        <enum-item name='MoaningSpirit' comment='MOANING'/>
        <enum-item name='HowlingSpirit' comment='HOWLING'/>
        <enum-item name='TroublesomePoltergeist' comment='THROWER'/>
        <enum-item name='RestlessHaunt' comment='HAUNTER_RELATIVES'/>
        <enum-item name='ForlornHaunt' comment='HAUNTER_KNOWN_LOCATIONS'/>
    </enum-type>

    <bitfield-type type-name='ghost_profile_flag' base-type='uint32_t'> bay12: GHOST_PROFILE_FLAG_*
        <flag-bit name='announced'/>
        <flag-bit name='was_at_rest'/>
    </bitfield-type>

    <struct-type type-name='unit_ghost_info' original-name='unit_ghost_profilest'>
        <enum name='type' type-name='ghost_type'/>
        <enum name='initial_type' type-name='ghost_type'
              comment='at start of raise'/>

        <enum name="goal" type-name='ghost_goal'/>
        <compound name='target' is-union='true'> based on goal
            <int32_t name="unit" ref-target='unit'/>
            <int32_t name="item" ref-target='item'/>
            <int32_t name="building" ref-target='building'/>
        </compound>

        <compound name='misplace_pos' type-name='coord'/>

        <int32_t name="action_timer" init-value='403200' comment='time since last action'/>
        <int32_t name="activity_timer"/>

        <bitfield name='flags' base-type='uint32_t' type-name='ghost_profile_flag'/>

        <int32_t name="death_x" comment='in tiles, global to world'/>
        <int32_t name="death_y"/>
        <int32_t name="death_z"/>
    </struct-type>

    <bitfield-type type-name='unit_active_animation_flags' base-type='uint32_t'> bay12: UNIT_ACTIVE_ANIMATION_FLAG_*
        <flag-bit name='CORPSE'/>
    </bitfield-type>

    <struct-type type-name='unit_active_animationst'>
        <bitfield name='flag' type-name='unit_active_animation_flags'/>
        <bitfield name='animate_flag' type-name='unit_active_animation_flags'/>
        <int32_t name='interaction_index' init-value='-1'/>
        <int32_t name='interaction_instance_id' init-value='-1'/>
        <int32_t name='interaction_effect_id' init-value='-1'/>
        <int32_t name='total_rot' since='v0.47.01'/>
        <int16_t name='root_body_part_id' comment='ID of the root body part in the corpse or corpse piece from which the reanimated unit was produced'/>
        <stl-string name='undead_name' comment='display name of reanimated creatures'/>
        <int32_t name='initial_good_head_count' since='v0.43.01'/>
        <int32_t name='initial_good_grasp_count' since='v0.43.01'/>
    </struct-type>

    <struct-type type-name='entity_pop_specifierst'>
        <int32_t name='race' ref-target='creature_raw'/>
        <int32_t name='epid' ref-target='entity_population'/>
        <int32_t name='special_controlling_enid' ref-target='historical_entity'/>
        <int32_t name='breed_id' ref-target='breed'/>
        <int32_t name='cultural_identity_id' ref-target='cultural_identity'/>
        <int32_t name='interaction_index' ref-target='interaction'/>
        <int32_t name='interaction_effect_index' ref-target='interaction_effect'/>
        <int32_t name='squad_id' ref-target='squad'/>
        <int32_t name='squad_epp_id' ref-target='entity_position_assignment'/>
        <int32_t name='wg_culture_reference_enid' ref-target='historical_entity'/>
    </struct-type>

    <enum-type type-name='walker_goal_type' base-type='int16_t'> bay12: SRWalkerGoalType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='STROLL'/>
        <enum-item name='GET_WATER'/>
        <enum-item name='VISIT_TEMPLE'/>
        <enum-item name='VISIT_TAVERN'/>
        <enum-item name='PATROL'/>
        <enum-item name='VISIT_LIBRARY'/>
        <enum-item name='HOLD_TERF'/>
        <enum-item name='VISIT_SHRINE'/>
    </enum-type>

    <bitfield-type type-name='sr_walker_flag' base-type='uint32_t'> bay12: SR_WALKER_FLAG_*
        <flag-bit name='in_goal_srb'/>
        <flag-bit name='returning_home'/>
    </bitfield-type>

    <struct-type type-name='sr_walkerst'>
        <int32_t name='nemesis_id' ref-target='nemesis_record'/>
        <int32_t name='num'/>
        <compound name='pop_spec' type-name='entity_pop_specifierst'/>
        <int32_t name='building_id' ref-target='site_realization_building'/>
        <compound type-name='coord2d' name='pos'/>
        <int16_t name='travel_count'/>
        <enum name='goal' type-name='walker_goal_type'/>
        <int32_t name='goal_srb_id' ref-target='site_realization_building'/>
        <int32_t name='goal_x'/>
        <int32_t name='goal_y'/>
        <static-array name='path_x' type-name='int32_t' count='20'/>
        <static-array name='path_y' type-name='int32_t' count='20'/>
        <int16_t name='path_len'/>
        <int16_t name='path_idx'/>
        <int32_t name='group_id'/>
        <bitfield name='flags' base-type='uint32_t' type-name='sr_walker_flag'/>
    </struct-type>

    <struct-type type-name='unit_sr_pop_specst'>
        <int32_t name='stid' ref-target='world_site'/>
        <int32_t name='srb_id'/>
        <int32_t name='sul_id'/>
        <compound name='entity_pop_specifiers' type-name='entity_pop_specifierst'/>
    </struct-type>

    <struct-type type-name='unit_sr_walker_infost' since='v0.40.01'>
        <int32_t name='stid'/>
        <int32_t name='srb_id'/>
        <enum name='goal_type' type-name='walker_goal_type'/>
        <int32_t name='goal_srb_id'/>
        <int32_t name='goal_abs_smm_x'/>
        <int32_t name='goal_abs_smm_y'/>
        <static-array name='path_abs_smm_x' type-name='int32_t' count='20'/>
        <static-array name='path_abs_smm_y' type-name='int32_t' count='20'/>
        <int16_t name='path_length'/>
        <int16_t name='path_index'/>
        <int32_t name='group_id'/>
        <bitfield name='flags' base-type='uint32_t' type-name='sr_walker_flag'/>
    </struct-type>

    <struct-type type-name='unit_army_infost'>
        <stl-vector name='path_abs_smm_x' type-name="int32_t"/>
        <stl-vector name='path_abs_smm_y' type-name="int32_t"/>
        <stl-vector name='path_region_x' type-name="int32_t"/>
        <stl-vector name='path_region_y' type-name="int32_t"/>
    </struct-type>

    <struct-type type-name='unit_usable_interactionst'>
        <stl-vector name='interaction_id' type-name='int32_t' since='v0.34.01'
                    ref-target='creature_interaction_effect'/>
        <stl-vector name='interaction_time' type-name='int32_t' since='v0.34.01'/>
        <stl-vector name='interaction_delay' type-name='int32_t' since='v0.34.01'/>

        <int32_t name='time_on_site' since='v0.34.01'/>

        <stl-vector name='own_interaction' type-name='int32_t' since='v0.34.01'
                    refers-to='$$._global.body.body_plan.interactions[$]'/>
        <stl-vector name='own_interaction_delay' type-name='int32_t' since='v0.34.01'/>
    </struct-type>

    <struct-type type-name='unit_appearance' original-name='physical_formst'>
        <int32_t name='local_id'/>
        <int32_t name='caste_index' refers-to='$global.world.raws.creatures.list_creature[$]' comment='also refers to $global.world.raws.creatures.list_caste[$]'/>
        <int16_t name='favoredgrasp_bp'/>
        <static-array name='physical_attributes' count='6' type-name='unit_attribute' index-enum='physical_attribute_type'/>
        <int32_t name='energy_storage'/>
        <stl-vector name='body_modifiers' type-name='int32_t' index-refers-to='(find-creature $$._parent.race).caste[$$._parent.caste].body_appearance_modifiers[$]'/>
        <stl-vector name='bp_modifiers' type-name='int32_t' index-refers-to='(find-creature $$._parent.race).caste[$$._parent.caste].bp_appearance.modifiers[$]'/>
        <int32_t name='total_appearance_size_modifier'/>
        <stl-vector name='tissue_style' type-name='tissue_style_type'/>
        <stl-vector name='tissue_style_civ_id' type-name='int32_t'/>
        <stl-vector name='tissue_style_id' type-name='int32_t'/>
        <stl-vector name='tissue_style_type' type-name='int32_t'/>
        <stl-vector name='tissue_length' type-name='int32_t'/>
        <compound name='genes' type-name='unit_genes'/>
        <stl-vector name='color_modifiers' type-name='int32_t' index-refers-to='(find-creature $$._parent.race).caste[$$._parent.caste].color_modifiers[$]'/>
        <int32_t name='age_death_year'/>
        <int32_t name='age_death_season_tick'/>
    </struct-type>

    -- Unused: WORLD_VIEW_FILTER_FLAG_*
    -- Unused: world_view_filterst

    <struct-type type-name='unit_vision_arcst'>
        <static-array count='21'><static-array type-name='uint8_t' count='21'/></static-array>
    </struct-type>

    <bitfield-type type-name='attack_awareness_flags' base-type='uint32_t'> bay12: ATTACK_AWARENESS_FLAG_*
        <flag-bit name='ATTACKING_PART_KNOWN'/>
        <flag-bit name='ATTACK_TARGET_PART_KNOWN'/>
        <flag-bit name='STRIKE_TIME_KNOWN'/>
        <flag-bit name='STRIKE_CHARACTER_KNOWN'/>
    </bitfield-type>

    <struct-type type-name='attack_awarenessst'>
        <static-array name='unit_id' type-name='int32_t' ref-target='unit' count='10' since='v0.40.01' comment="number of non -1 entries control linked contents in following 4 vectors, rotating"/>
        <static-array name='unit_mvid' type-name='int32_t' init-value='0' count='10' since='v0.40.01'/>
        <static-array name='precise_phase' type-name='int32_t' count='10' since='v0.40.01' comment="unused elements probably uninitialized"/>
        <static-array name='abs_season' type-name='int32_t' count='10' since='v0.40.01' comment="unused elements probably uninitialized"/>
        <static-array name='flag' type-name='attack_awareness_flags' count='10' since='v0.40.01' comment="unused elements probably uninitialized"/>
    </struct-type>

    <struct-type type-name='detection_infost'>
        <static-array name='last_spotted_unid' type-name='int32_t' ref-target='unit' count='200' since='v0.40.01' comment="Seen own side, enemy side, not involved (witnesses?). Unused fields not cleared"/>
        <int32_t name='last_spotted_unid_num' since='v0.40.01'/>
    </struct-type>

    <struct-type type-name='opinion_infost'>
        <stl-vector name="entity_id" type-name="int32_t" ref-target='historical_entity'/>
        <stl-vector name="entity_opinion" type-name="opinion_type"/>
    </struct-type>

    <enum-type type-name='travel_log_itinerary_type' base-type='int32_t'> bay12: TravelLogItineraryType
        <enum-item name='PRAY'/>
        <enum-item name='STUDY'/>
        <enum-item name='RELAX'/>
        <enum-item name='PERFORM'/>
        <enum-item name='SLAY_BEASTS'/>
        <enum-item name='WORK_AS_PERFORMER'/>
        <enum-item name='WORK_AS_MERCENARY'/>
        <enum-item name='WORK_AS_SCHOLAR'/>
        <enum-item name='DIPLOMACY'/>
        <enum-item name='SEEKING_SANCTUARY'/>
        <enum-item name='ASKING_QUESTIONS'/>
    </enum-type>

    <bitfield-type type-name='travel_log_itinerary_flag' base-type='uint32_t'> bay12: TRAVEL_LOG_ITINERARY_FLAG_*
        <flag-bit name='complete'/>
    </bitfield-type>

    <struct-type type-name='travel_log_itineraryst'>
        <enum name='reason' type-name='travel_log_itinerary_type'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='location_id' ref-target='abstract_building'/>
        <int32_t name='remaining' init-value='-1' comment='set when praying; counts down to 0'/>
        <int32_t name='year'/>
        <int32_t name='year_tick'/>
        <bitfield name='flags' base-type='uint32_t' type-name='travel_log_itinerary_flag'/>
        <int32_t name='designated_speaker_unid' ref-target='unit'/>
        <int32_t name='travel_enid' ref-target='historical_entity'/>
    </struct-type>

    <bitfield-type type-name='travel_log_flag' base-type='uint32_t'> bay12: TRAVEL_LOG_FLAG_*
        <flag-bit name='talked_to_local'/> CHATTED_WITH_LOCAL
        <flag-bit name='all_items_complete'/>
        <flag-bit name='ready_to_leave'/> WANT_TO_LEAVE
    </bitfield-type>

    <struct-type type-name='travel_logst'>
        <stl-vector name='visit_reasons' pointer-type='travel_log_itineraryst'/>
        <bitfield name='flags' base-type='uint32_t' type-name='travel_log_flag' comment='Affects the text shown in the unit summary'/>
        <int32_t name='year'/>
        <int32_t name='year_tick'/>
        <int32_t name='wanted_leave_year'/>
        <int32_t name='wanted_leave_year_tick'/>
        <enum name='rumour_type' type-name='history_event_reason' comment='for the "heard ... was the place for ..." text'/>
        <int32_t name='rumour_location_id' ref-target='abstract_building'/>
    </struct-type>

    -- Unused: KILLUNIT_FLAG_*

    <bitfield-type type-name='unit_target_flags' base-type='uint32_t'> bay12: UNIT_TARGET_FLAG_*
        <flag-bit name='INV_BLOCK_WHILE_INCAP' comment='if set, the unit will try to remove the helmet of their target'/>
    </bitfield-type>

    <enum-type type-name='glowtile_type' base-type='int8_t'> bay12: GlowtileType, an enum-struct with defined size!
        <enum-item name='NEED_CHECK' value='-1'/>
        <enum-item name='NO_GLOW'/>
        <enum-item name='OTHER'/>
        <enum-item name='EYES'/>
    </enum-type>

    <struct-type type-name='unit_cache_vars'>
        <enum name='cached_glowtile_type' type-name='glowtile_type'/>
    </struct-type>

    <enum-type type-name='dungeon_control_state' base-type='int8_t'> bay12: DungeonControlState
        <enum-item name='PROMPT'/>
        <enum-item name='CONTINUE'/>
        <enum-item name='CONTINUE_IGNORE_DISTRACTIONS'/>
    </enum-type>

    <class-type type-name='unit' key-field='id' instance-vector='$global.world.units.all'
            original-name='unitst'>
        <compound type-name='language_name' name='name'/>

        <code-helper name='describe'>
            (describe-obj $.name)
            (awhen (find-creature $.race)
            (fmt "~:(~A ~A~)" $it.caste[$.caste].caste_id $it.creature_id))
        </code-helper>

        <stl-string name='custom_profession'/>

        <enum base-type='int16_t' name='profession' type-name='profession' init-value='STANDARD'/>
        <enum base-type='int16_t' name='profession2' type-name='profession' init-value='STANDARD'/>

        <int32_t name='race' ref-target='creature_raw'/>

        <compound name='pos' type-name='coord'/>

        <compound name='idle_area' type-name='coord' comment='station'>
            <comment>
                E.g. for a dead miner, holds the place where he
                was likely hanging around when he got the command
                to mine in an aquifer.
            </comment>
        </compound>
        <int32_t name='idle_area_threshold' init-value='3'/>
        <enum base-type='int16_t' name='idle_area_type' type-name='unit_station_type'/>

        <int32_t name='follow_distance'/>

        <compound name='path'> not a compound
            <compound name='dest' type-name='coord'/>

            <enum base-type='int16_t' name='goal' type-name='unit_path_goal'/>

            <compound name='path' type-name='coord_path'/>
        </compound>

        <bitfield name='flags1' type-name='unit_flags1'/>
        <bitfield name='flags2' type-name='unit_flags2'/>
        <bitfield name='flags3' type-name='unit_flags3'/>
        <bitfield name='flags4' type-name='unit_flags4'/>

        <compound name='meeting' type-name='unitplotst'/>

        <int16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>
        <enum name='sex' type-name='pronoun_type'/>

        <int32_t name='id'/>

        <enum name='millpref' type-name='mill_pref_type' base-type='int16_t'/>

        <enum name='training_level' type-name='animal_training_level' init-value='WildUntamed'/>
        <int32_t name='schedule_id' ref-target='schedule_info'/>

        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int32_t name='population_id' ref-target='entity_population'/>
        <int32_t name='breed_id' since='v0.34.01' ref-target='breed'/>
        <int32_t name='cultural_identity' ref-target='cultural_identity' since='v0.40.01'/>
        <int32_t name='invasion_id' ref-target='invasion_info'/>

        <compound name='patrol_route' type-name='coord_path'
                  comment='used by necromancers for corpse locations, siegers etc'/>
        <int32_t name='patrol_index'/>

        <stl-vector name='specific_refs' pointer-type='specific_ref'/>
        <stl-vector name='general_refs' pointer-type='general_ref'/>

        <compound name='military' type-name='squad_infost'/>
        <compound name='uniform' type-name='unit_clothing_infost'/>

        <stl-vector name='individual_drills' type-name='int32_t' ref-target='activity_entry'/>
        <stl-vector name='social_activities' type-name='int32_t' ref-target='activity_entry'/>
        <stl-vector name='conversations' type-name='int32_t' ref-target='activity_entry' since='v0.40.01'/>
        <stl-vector name='activities' type-name='int32_t' ref-target='activity_entry' comment='bay12: conflict_activity_id'/>
        <stl-vector name='ignored_activities' type-name='int32_t' since='v0.40.01' ref-target='activity_entry' comment='bay12: ignore_activity_id'/>

        <compound name='animal'> not a compound
            <compound name='population' type-name='world_population_ref'/>

            <int32_t name='leave_countdown'
                      comment='once 0, it heads for the edge and leaves'/>
            <int32_t name='vanish_countdown' comment='once 0, it vanishes in a puff of smoke'/>
        </compound>

        <compound name='opponent'> not a compound
            This was used by a vampire scared of cave creatures and doing FleeFromOpponent panic
            <int32_t name='unit_id' ref-target='unit' since='v0.40.01'/>
            <compound name='unit_pos' type-name='coord' since='v0.40.01'/>
            <int32_t name='timer' since='v0.40.01'/>
        </compound>

        <enum name='mood' type-name='mood_type' init-value='None'/>
        <enum name='moodstage' base-type='int16_t' type-name='mood_stage_type'/>

        <int32_t name='pregnancy_timer'/>
        <pointer name='pregnancy_genes' type-name='unit_genes' comment='genes from mate'/>
        <int16_t name='pregnancy_caste' comment='caste of mate'
                 ref-target='caste_raw' aux-value='$$._global.race'/>
        <int32_t name='pregnancy_spouse' ref-target='historical_figure'/>

        <enum name='mood_copy' type-name='mood_type' init-value='None'
              comment='copied from mood type upon entering strange mood'/>
        <pointer name='ghost_info' type-name='unit_ghost_info'/>

        <int32_t name='disturbed_heid' ref-target='history_event' init-value='-1' since='v0.34.01'/>

        <int32_t name='birth_year' init-value='-1'/>
        <int32_t name='birth_time' init-value='-1'/>
        <int32_t name='curse_year' init-value='-1' since='v0.34.01' comment='bay12: frozen_age_year'/>
        <int32_t name='curse_time' init-value='-1' since='v0.34.01' comment='bay12: frozen_age_season_count'/>

        <int32_t name='birth_year_bias' init-value='0' since='v0.34.01' comment='bay12: credit_age_year'/>
        <int32_t name='birth_time_bias' init-value='0' since='v0.34.01' comment='bay12: credit_age_season_count'/>

        <int32_t name='old_year' init-value='-1' comment='bay12: age_death_year'/>
        <int32_t name='old_time' init-value='-1' comment='bay12: age_death_season_count'/>

        <pointer name='following' type-name='unit'/>
        <enum name='owner_type' type-name='unit_owner_type' base-type='int16_t' comment='invalid unless following'/>

        <static-array name='relationship_ids' type-name='int32_t' count='9' index-enum='unit_relationship_type'/>

        <enum name='mount_type' type-name='rider_positions_type' base-type='int16_t' comment='bay12: riderposition'/>

        <compound name='last_hit'> not a compound
            <int32_t name='item' ref-target='item'/>
            <enum name='item_type' type-name='item_type'/>
            <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>

            <int16_t name='mattype' ref-target='material' aux-value='$$.matindex'/>
            <int32_t name='matindex'/>

            -- If shot by a ranged weapon:
            <int32_t name='shooter_item' ref-target='item'/>
            <enum name='shooter_item_type' type-name='item_type'/>
            <int16_t name='shooter_item_subtype' refers-to='(item-subtype-target $$._parent.shooter_item_type $)'/>
            <int16_t name='shooter_mattype' ref-target='material' aux-value='$$.shooter_matindex'/>
            <int32_t name='shooter_matindex'/>
        </compound>

        <int32_t name='on_item_id' ref-target='item'/>

        <stl-vector name='inventory' pointer-type='unit_inventory_item'/>

        <stl-vector name='owned_items' type-name='int32_t' ref-target='item'/>
        <stl-vector name='traded_items' comment='items brought to trade depot' type-name='int32_t' ref-target='item'/>
        <stl-vector name='owned_buildings' pointer-type='building_civzonest' comment='bay12: zone_assigned'/>
        <stl-vector name='corpse_parts' comment='entries remain even when items are destroyed' type-name='int32_t' ref-target='item'/>

        <compound name='job'> not a compound
            <int32_t name='account'/>
            <int32_t name='satisfaction' comment='bay12: seasonpay: amount earned recently for jobs'/>
            <uint32_t name='random_appearance_number'/>
            <pointer type-name='unit' name='hunt_target'/>
            <bitfield name='target_flags' type-name='unit_target_flags'/>
            <pointer type-name='building' name='destroy_target'/>

            <int32_t name='vision_x' since='v0.40.01'/>
            <int32_t name='vision_y' since='v0.40.01'/>
            <int32_t name='vision_z' since='v0.40.01'/>
            <int32_t name='vision_angle' since='v0.40.01'/>
            <uint8_t name='move_momentum_dir' since='v0.40.01'/>
            <int32_t name='gait_buildup' comment='bay12: move_momentum_perc'/>

            <compound name='climb_hold' type-name='coord'/>
            <int32_t name='hold_itid' ref-target='item' init-value='-1' since='v0.40.14'/>

            <pointer comment='df_job' name='current_job' type-name='job'/>
            <enum base-type='int16_t' type-name='job_skill' name='mood_skill' comment="can be uninitialized for children and animals"/>
            <int32_t name='mood_timeout' comment='counts down from 50000, insanity upon reaching zero'/>

            <int32_t name='attack_chance_modifier'/>
        </compound>

        <compound name='body'> not a compound
            <compound name='components'> not a compound
                <stl-vector name='body_part_status' type-name='body_part_status'
                            index-refers-to='$$._global._upglobal.caste.ref-target.body_info.body_parts[$]'/>

                <stl-vector name='numbered_masks' type-name='uint32_t'
                            comment='1 bit per instance of a numbered body part'/>
                <stl-vector name='nonsolid_remaining' type-name='uint32_t' comment='0-100%'
                            index-refers-to='$$._global._upglobal.caste.ref-target.body_info.nonsolid_layers[$].refers-to'/>

                <stl-vector name='layer_status' type-name='body_layer_status'
                            index-refers-to='$$._global._upglobal.caste.ref-target.body_info.layer_idx[$].refers-to'/>
                <stl-vector name='layer_wound_area' type-name='uint32_t'
                            index-refers-to='$$._global._upglobal.caste.ref-target.body_info.layer_idx[$].refers-to'/>

                Surface percentages for cuts/fractures, dents and effects (such as
                bruises, burns, frostbite, melting, freezing, necrosis, and blistering)
                <stl-vector name='layer_cut_fraction' type-name='uint32_t' comment='0-10000'
                            index-refers-to='$$._global._upglobal.caste.ref-target.body_info.layer_idx[$].refers-to'/>
                <stl-vector name='layer_dent_fraction' type-name='uint32_t' comment='0-10000'
                            index-refers-to='$$._global._upglobal.caste.ref-target.body_info.layer_idx[$].refers-to'/>
                <stl-vector name='layer_effect_fraction' type-name='uint32_t' comment='0-1000000000'
                            index-refers-to='$$._global._upglobal.caste.ref-target.body_info.layer_idx[$].refers-to'/>
            </compound>

            <stl-vector name='wounds' pointer-type='unit_wound'/>
            <int32_t name='wound_next_id' init-value='1'/>

            <static-array name='systemic_wound_id' count='10' type-name='int32_t' index-enum='wound_effect_type'/>

            <pointer name='body_plan' type-name='caste_body_info'/>

            <int16_t name='weapon_bp' refers-to='$$._parent.body_plan.body_parts[$]' init-value='-1'/>

            <static-array type-name='unit_attribute' name='physical_attrs'
                          count='6' index-enum='physical_attribute_type'/>

            <compound name='size_info'> not a compound
                <int32_t name='size_cur'/>
                <int32_t name='size_base'/>
                <int32_t name='area_cur' comment='size_cur^0.666'/>
                <int32_t name='area_base' comment='size_base^0.666'/>
                <int32_t name='length_cur' comment='(size_cur*10000)^0.333'/>
                <int32_t name='length_base' comment='(size_base*10000)^0.333'/>
            </compound>

            <uint32_t name='blood_max'/>
            <uint32_t name='blood_count'/>

            <int32_t name='infection_level'
                      comment='GETS_INFECTIONS_FROM_ROT sets; DISEASE_RESISTANCE reduces; >=300 causes bleeding'/>

            <stl-vector name='spatters' pointer-type='unit_spatter'/>
        </compound>

        <compound name='appearance'> not a compound
            <stl-vector name='body_modifiers' type-name='int32_t'
                        index-refers-to='$$._global.caste.ref-target.body_appearance_modifiers[$]'/>
            <stl-vector name='bp_modifiers' type-name='int32_t'
                        index-refers-to='$$._global.caste.ref-target.bp_appearance.modifier_idx[$].refers-to'/>

            <int32_t name='size_modifier' comment='product of all H/B/LENGTH body modifiers, in %'/>

            -- Something for bp_appearance.layers_*
            <stl-vector type-name='tissue_style_type' name='tissue_style'
                        index-refers-to='$$._global.caste.ref-target.bp_appearance.style_layer_idx[$].refers-to'/>
            <stl-vector type-name='int32_t' name='tissue_style_civ_id'
                        ref-target='historical_entity'
                        index-refers-to='$$._parent.tissue_style.index-refers-to[$]'/>
            <stl-vector type-name='int32_t' name='tissue_style_id'
                        ref-target='entity_tissue_style'
                        aux-value='$$._parent.tissue_style_civ_id[$._key]'
                        index-refers-to='$$._parent.tissue_style.index-refers-to[$]'/>
            <stl-vector type-name='int32_t' name='tissue_style_type'
                        refers-to='(find-by-id $$._global.caste.ref-target.tissue_styles $id $)'
                        index-refers-to='$$._parent.tissue_style.index-refers-to[$]'/>
            <stl-vector type-name='int32_t' name='tissue_length'
                        index-refers-to='$$._parent.tissue_style.index-refers-to[$]'
                        comment='description uses bp_modifiers[style_list_idx[index]]'/>

            <compound name='genes' type-name='unit_genes'/>

            <stl-vector name='colors' type-name='int32_t' comment='colors[i] refers to caste_raw.color_modifiers[i].pattern_index'/>
        </compound>

        <stl-vector name='actions' pointer-type='unit_action'/>
        <int32_t name='next_action_id'/>

        <compound name='counters'> not a compound:
            <int32_t name='job_counter' comment='movewait'/>
            <int32_t name='swap_counter'/>

            <enum name='death_cause' type-name='death_type'/>
            <int32_t name='death_id' ref-target='incident'/>

            <int16_t name='winded'/>
            <int16_t name='stunned'/>
            <int16_t name='unconscious'/>
            <int16_t name='suffocation' comment='counts up while winded, results in death'/>
            <int16_t name='webbed'/>

            -- When gutted:
            <compound name='guts_trail1' type-name='coord'/>
            <compound name='guts_trail2' type-name='coord'/>

            <int16_t name='soldier_mood_countdown' init-value='300' comment='plus a random amount' />
            <enum name='soldier_mood' base-type='int16_t' type-name='soldier_mood_type' init-value='None'/>

            <uint32_t name='pain'/>
            <uint32_t name='nausea'/>
            <uint32_t name='dizziness'/>
        </compound>

        <uint32_t name='uwss_flag' comment='moved from end of counters in 0.43.05'/>

        <bitfield name='uwss_add_caste_flag' type-name='cie_add_tag_mask1'/>
        <bitfield name='uwss_remove_caste_flag' type-name='cie_add_tag_mask1'/>
        <bitfield name='uwss_add_property' type-name='cie_add_tag_mask2'/>
        <bitfield name='uwss_remove_property' type-name='cie_add_tag_mask2'/>

        <bool name='uwss_use_display_name' since='v0.34.01'/>
        <stl-string name='uwss_display_name_sing' since='v0.34.01'/>
        <stl-string name='uwss_display_name_plur' since='v0.34.01'/>
        <stl-string name='uwss_display_name_adj' since='v0.34.01'/>

        <uint8_t name='uwss_display_tile'/>
        <int8_t name='uwss_display_color_f'/>
        <int8_t name='uwss_display_color_b'/>
        <int8_t name='uwss_display_color_br'/>
        <uint8_t name='uwss_flash_tile'/>
        <int8_t name='uwss_flash_color_f'/>
        <int8_t name='uwss_flash_color_b'/>
        <int8_t name='uwss_flash_color_br'/>
        <uint32_t name='uwss_alt_period' since='v0.34.01'/>
        <uint32_t name='uwss_alt_on_period' since='v0.34.01'/>

        <stl-vector name='uwss_body_modifier' type-name='int32_t'
                    index-refers-to='$$._global.caste.ref-target.body_appearance_modifiers[$]'/>
        <stl-vector name='uwss_bp_modifer' type-name='int32_t' since='v0.34.01' comment='guess!'
                    index-refers-to='$$._global.caste.ref-target.bp_appearance.modifier_idx[$].refers-to'/>

        <uint32_t name='uwss_speed_add' since='v0.34.01'/>
        <uint32_t name='uwss_speed_perc' since='v0.34.01' init-value='100'/>

        <pointer name='uwss_att_change' type-name='curse_attr_change' since='v0.34.01'/>
        <uint32_t name='uwss_skill_role_adjust' since='v0.34.01' init-value='100'/>
        <int32_t name='uwss_erratic_level' since='v0.42.01'/>

        <compound name='usable_interaction' type-name='unit_usable_interactionst'/>

        <compound name='counters2'> not a compound
            <uint32_t name='paralysis'/>
            <uint32_t name='numbness'/>
            <uint32_t name='fever'/>
            <uint32_t name='exhaustion'/>

            <uint32_t name='hunger_timer'/>
            <uint32_t name='thirst_timer'/>
            <uint32_t name='sleepiness_timer'/>

            <uint32_t name='stomach_content'/>
            <uint32_t name='stomach_food'/>
            <uint32_t name='vomit_timeout' comment='blocks nausea causing vomit'/>

            <uint32_t name='stored_fat' comment='hunger leads to death only when 0'/>
        </compound>

        <compound name='status'> not a compound
            <stl-vector name='misc_traits' pointer-type='unit_misc_trait'/>

            <pointer name='eat_history' type-name='unit_consumption_logst'/>

            <int32_t name='demand_timeout' init-value='1000' comment='also used for wagon trampling'/>
            <int32_t name='mandate_timeout' init-value='1000'/>

            <stl-vector name='attacker_ids' type-name='int32_t' ref-target='unit'/>
            <stl-vector name='attacker_cntdn' type-name='int16_t'/>

            <int8_t name='face_direction' comment='for wagons'/>

            <compound type-name='language_name' name='artifact_name'/>
            <stl-vector name='souls' pointer-type='unit_soul'/>
            <pointer name='current_soul' type-name='unit_soul'/>

            <stl-vector name='demands' pointer-type='unit_demand'/>

            <static-array type-name='bool' name='labors' index-enum='unit_labor' count='94'/>

            <stl-vector name='wrestle_items' pointer-type='unit_item_wrestle'/>
            <stl-vector name='observed_traps' type-name='int32_t' ref-target='building'/>

            <stl-vector name='complaints' pointer-type='unit_complaint'/>
            <stl-vector name='parleys' pointer-type='unit_parley' since='v0.44.01'/>
            <stl-vector name='requests' pointer-type='unit_request'/>
            <stl-vector name='coin_debts' pointer-type='unit_coin_debt'/>
            <stl-vector name='commands' pointer-type='command' since='v0.47.01'/>
            <int32_t name='last_command_received_year' since='v0.47.01'/>
            <int32_t name='last_command_received_season_count' since='v0.47.01'/>
            <static-array name='command_gait_index' type-name='int32_t' count='5' index-enum='gait_type' since='v0.47.01' comment='initialized together with enemy.gait_index'/>
            <bitfield name='unit_command_flag' type-name='unit_command_flags' since='v0.47.01'/>

            <int16_t name='adv_sleep_timer' comment='bay12: dungeonlag'/>

            -- average of the following vector
            <compound name='recent_job_area' type-name='coord'/>

            -- up to 50 locations where jobs were performed recently by the unit
            <compound name='recent_jobs' type-name='coord_path'/>
        </compound>

        <int32_t name='hist_figure_id' ref-target='historical_figure'/>
        <int32_t name='hist_figure_id2' ref-target='historical_figure'
                 comment='bay12: physical_hfid: used for ghost in AttackedByDead thought'/>

        <compound name='status2'> not a compound
            <int16_t name='limbs_stand_max'/>
            <int16_t name='limbs_stand_count'/>
            <int16_t name='limbs_grasp_max'/>
            <int16_t name='limbs_grasp_count'/>
            <int16_t name='limbs_fly_max'/>
            <int16_t name='limbs_fly_count'/>

            <stl-vector name='body_part_temperature' pointer-type='temperaturest'/>

            <bitfield type-name='pathfinding_flags' name='add_path_flags' comment='bay12: override_permit; pathing flags to OR, set to None after move'/>

            <bitfield type-name='tile_designation' name='liquid_type'/>
            <uint8_t name='liquid_depth'/>

            <int32_t name='histeventcol_id' ref-target='history_event_collection' comment='linked to an active invasion or kidnapping'/>
        </compound>

        <compound name='syndrome_advancement'> not a compound
            <stl-vector type-name='int32_t' name='pre_hf_active_interaction_index'/>
            <stl-vector type-name='int32_t' name='pre_hf_active_interaction_effect_index' since='v0.34.01'/>
        </compound>

        <compound name='syndromes'> not a compound
            -- Sorted by type:
            <stl-vector name='active' pointer-type='unit_syndrome'/>

            -- Seems to be incremented every new infection:
            <stl-vector name='reinfection_type' type-name='int32_t' ref-target='syndrome'/>
            <stl-vector name='reinfection_count' type-name='int16_t'/>
        </compound>

        <compound name='reports'> not a compound
            <static-array name='log' count='3' index-enum='unit_report_type'>
                <stl-vector type-name='int32_t' ref-target='report'/>
            </static-array>

            -- Garbage when the matching vector is empty:
            <static-array type-name='int32_t' name='last_year' count='3' index-enum='unit_report_type'/>
            <static-array type-name='int32_t' name='last_year_tick' count='3' index-enum='unit_report_type'/>
        </compound>

        <pointer name='health' type-name='unit_health_info'/>

        <stl-vector name='used_items' pointer-type='unit_item_use' comment='Contains worn clothes, armor, weapons, arrows fired by archers'/>

        <compound name='enemy'> not a compound
            <stl-vector name='sound_cooldown' type-name='int32_t' since='v0.34.01'
                        index-refers-to='$$._global.caste.ref-target.sound[$]'/>

            <pointer name='undead' since='v0.34.01' type-name='unit_active_animationst'/>

            <int32_t name='were_race' ref-target='creature_raw'/> transform_race
            <int32_t name='were_caste' ref-target='caste_raw' aux-value='$$.were_race'/> transform_caste
            <int32_t name='normal_race' ref-target='creature_raw'/> birth_race
            <int32_t name='normal_caste' ref-target='caste_raw' aux-value='$$.normal_race'/> birth_caste
            <int32_t name='retraction_interaction' refers-to='$$._global.body.body_plan.interactions[$]' since='v0.34.01' comment='is set when a RETRACT_INTO_BP interaction is active'/>

            <stl-vector name='appearances' pointer-type='unit_appearance'/>
            <stl-vector name='witness_reports' pointer-type='witness_incidentst'/>

            <stl-vector name='rumor' pointer-type='entity_event'/>

            <static-array name='gait_index' type-name='int32_t' count='5' index-enum='gait_type'/>

            <compound name='attack_awareness' type-name='attack_awarenessst'/>

            <compound name='detection_info' type-name='detection_infost'/>

            <pointer name='sr_pop_spec' since='v0.40.01' type-name='unit_sr_pop_specst'/>
            <pointer name='sr_walker' since='v0.40.01' type-name='unit_sr_walker_infost'/>

            <int32_t name='fallback_candidate_squad_enid' since='v0.40.01'/> probably references a historical_entity
            <int32_t name='fallback_candidate_squad_epp_id' since='v0.40.01'/> probably references a entity_position_assignment

            <int32_t name='army_controller_id' ref-target='army_controller' since='v0.40.01'/>
            <pointer name='army_controller' type-name='army_controller' since='v0.40.01'/>
            <pointer name='army_info' since='v0.40.01' type-name='unit_army_infost'/>
            <stl-vector name='animal_pre_bond_unid' type-name='int32_t' since='v0.40.01'/> probably references a unit
            <stl-vector name='animal_pre_bond_count' type-name='int32_t' since='v0.40.01'/>
            <stl-vector name='just_talked_unid' type-name='int32_t' since='v0.40.01'/> probably references a unit
            <pointer name='opinion_info' type-name='opinion_infost'/>
            <pointer name='travel_log' type-name='travel_logst' since='v0.42.01'/>

            <int32_t name='combat_side_id' init-value='-1'/> arena_side

            -- below here unsaved --
            <int32_t name='histfig_vector_idx' init-value='-1' refers-to='$global.world.history.figures[$]'/>

            <df-flagarray name='caste_flags' index-enum='caste_raw_flags' since='v0.44.06'/>
            <int32_t name='enemy_status_slot' refers-to='$global.world.enemy_status_cache.rel_map[$]'/>
            <int32_t name='last_temperature_check'/>

            <stl-vector name='motor_nervenet' type-name='int8_t'/>
            <stl-vector name='sensory_nervenet' type-name='int8_t'/> 0 blocks pains, nausea
            <stl-vector name='body_part_relsize' type-name='int32_t' comment='with modifiers'/>
            <stl-vector name='body_part_useable' type-name='int8_t'/>
            <stl-vector name='body_part_base_ins' type-name='int16_t'/>
            <stl-vector name='body_part_clothing_ins' type-name='int16_t'/>
            <stl-vector name='invorder_bp_start' type-name='int16_t'/>
            <stl-vector name='invorder_item_id' type-name='int32_t' ref-target='item'/>
            <stl-vector name='invorder_coverage' type-name='int16_t'/>
        </compound>

        <stl-vector name='healing_rate' type-name='int32_t'/>
        <int32_t name='effective_rate' init-value='-1' comment='bay12: heal_rate_recuperation'/>
        <int32_t name='tendons_heal'/>
        <int32_t name='ligaments_heal'/>

        <compound name='weight' type-name='massst'/>

        <stl-vector name='burrows' type-name='int32_t' ref-target='burrow'/>
        <stl-vector name='inactive_burrows' type-name='int32_t' ref-target='burrow'/>
        <pointer name='vision_cone' type-name='unit_vision_arcst'/>
        <stl-vector name='occupations' pointer-type='occupation' since='v0.42.01'/>
        <stl-string name='adjective' comment='from physical descriptions for use in adv'/>

        <static-array name='texpos' count='3'><static-array count='2' type-name='int32_t'/></static-array>
        <int32_t name='sheet_icon_texpos'/>
        <static-array name='texpos_currently_in_use' count='3'><static-array count='2' type-name='bool'/></static-array>
        <int32_t name='portrait_texpos'/>

        <compound name='cache' type-name='unit_cache_vars'/>

        <enum name='dungeon_control' type-name='dungeon_control_state'/>

        protected:
        <size_t name='pool_index'/>
        <stl-mutex name='mtx'/>

        <virtual-methods>
            <vmethod ret-type='uint8_t' name='getCreatureTile'/>
            <vmethod ret-type='uint8_t' name='getCorpseTile'/>
            <vmethod ret-type='uint8_t' name='getGlowTile'/>
            <vmethod ret-type='int32_t' name='getGlowTexture'/>
            <vmethod name='create_nemesis'>
                <ret-type> <pointer type-name='nemesis_record'/> </ret-type>
                <int8_t name='important'/>
                <int8_t name='inplay'/>
            </vmethod>
        </virtual-methods>
    </class-type>

    <struct-type type-name='unit_context_block' original-name='unit_context_blockst'>
        <static-array name='context_unit' pointer-type='unit' count='200' />
        <int32_t name="num"/>
    </struct-type>

    <enum-type type-name='units_other_id'>
        <enum-item name='ANY_RIDER'/>
        <enum-item name='ANY_BABY'/>
    </enum-type>

    <df-other-vectors-type type-name='units_other' index-enum='units_other_id' item-type='unit'>
    </df-other-vectors-type>

    <struct-type type-name='unit_handlerst'>
        <stl-vector name='all' pointer-type='unit'/>

        <stl-vector name='active' pointer-type='unit' comment='not sorted, entry 0 is adventurer'/>

        <compound name='other' type-name='units_other'/>

        <pointer name='adv_unit' type-name='unit'/>
        <stl-vector name='temp_save' has-bad-pointers='true' pointer-type='unit'/>
        <stl-vector name='unit_context_block' pointer-type='unit_context_block' since='v0.44.06'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
