<data-definition>
    <class-type type-name='art_image_element' original-name='art_image_elementst'>
        <int32_t name='count'/>

        <virtual-methods>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod ret-type='art_image_element_type' name='getType'/>
            <vmethod name='setID'> <int32_t name='ID' comment='race, item type, plant ID, or shape ID'/> </vmethod>
            <vmethod is-destructor='true'/>

            <vmethod name='clone'>
                <ret-type><pointer type-name='art_image_element'/></ret-type>
            </vmethod>
            <vmethod name='getSymbol'>
                <pointer type-name='uint8_t' name='sym'/>
                <pointer type-name='int32_t' name='priority'/>
            </vmethod>
            <vmethod name='getName'>
                <pointer type-name='stl-string' name='name'/>
                <bool name='useThe'/>
                <bool name='useName'/>
                <bool name='doMarkup'/>
            </vmethod>
            <vmethod name='getShortName'>
                <pointer type-name='stl-string' name='name'/>
                <bool name='useThe'/>
            </vmethod>
            <vmethod name='getGraphicsInfo'>
                <pointer type-name='int32_t' name='gfx_type'/>
                <pointer type-name='int32_t' name='gfx_id'/>
            </vmethod>
            <vmethod name='markDiscovered'/>

            <vmethod name='getColorAndShape'>
                <pointer name='colors'><stl-vector type-name='int16_t'/></pointer>
                <pointer name='shapes'><stl-vector type-name='int16_t'/></pointer>
            </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='art_image_element_creaturest' inherits-from='art_image_element'>
        <int32_t name='race' ref-target='creature_raw'/>
        <int16_t name='caste'/>
        <int32_t name='histfig' ref-target='historical_figure'/>
    </class-type>

    <class-type type-name='art_image_element_itemst' inherits-from='art_image_element'>
        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int16_t name='mat_index'/>
        <bitfield name='flags' base-type='uint32_t' type-name='item_flags'/>
        <int32_t name='item_id' ref-target='item' comment='for artifacts'/>
    </class-type>

    <class-type type-name='art_image_element_plantst' inherits-from='art_image_element'>
        <int32_t name='plant_id' ref-target='plant_raw'/>
    </class-type>

    <class-type type-name='art_image_element_treest' inherits-from='art_image_element'>
        <int32_t name='plant_id' ref-target='plant_raw'/>
    </class-type>

    <class-type type-name='art_image_element_shapest' inherits-from='art_image_element'>
        <int32_t name='shape_id' ref-target='descriptor_shape'/>
        <int16_t name='shape_adj'/>
    </class-type>

    <enum-type type-name='art_image_property_type'> bay12: ArtImageProperty
        <enum-item name="NONE" value='-1'/>
        <enum-item name="transitive_verb"/>
        <enum-item name="intransitive_verb"/>
    </enum-type>

    <class-type type-name='art_image_property' original-name='art_image_propertyst'>
        <df-flagarray name='flags' comment='currently none used'/>

        <virtual-methods>
            <vmethod name='write_file'> <pointer name='file' type-name='file_compressorst'/> </vmethod>
            <vmethod name='read_file'>
                <pointer name='file' type-name='file_compressorst'/>
                <enum name='loadversion' type-name='save_version'/>
            </vmethod>
            <vmethod ret-type='art_image_property_type' name='getType'/>
            <vmethod is-destructor='true'/>
            <vmethod name='clone'>
                <ret-type><pointer type-name='art_image_element'/></ret-type>
            </vmethod>

            <vmethod name='getName'>
                <pointer type-name='stl-string' name='str'/>
                <pointer type-name='art_image' name='image'/>
                <bool name='useName'/>
                <bool name='doMarkup'/>
            </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='art_image_property_transitive_verbst' inherits-from='art_image_property'>
        <int32_t name='subject'/>
        <int32_t name='object'/>
        <enum base-type='int16_t' name="verb" type-name='art_image_property_verb'/>
    </class-type>

    <class-type type-name='art_image_property_intransitive_verbst' inherits-from='art_image_property'>
        <int32_t name='subject'/>
        <enum base-type='int16_t' name="verb" type-name='art_image_property_verb'/>
    </class-type>

    <struct-type type-name='art_image' original-name='art_imagest'>
        <code-helper name='find-instance'>$(find-instance $art_image_chunk $$).images[$]</code-helper>
        <code-helper name='describe'>(describe-obj $.name)</code-helper>

        <stl-vector name='elements' pointer-type='art_image_element'/>
        <stl-vector name='properties' pointer-type='art_image_property'/>

        <int32_t name='event' ref-target='history_event'/>
        <compound name='name' type-name='language_name'/>

        <enum base-type='int32_t' name='spec_ref_type' type-name='specific_ref_type'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int32_t name='mat_index'/>
        <enum base-type='int16_t' name='quality' type-name='item_quality'/>
        <int32_t name='artist' ref-target='historical_figure'/>
        <int32_t name='site' ref-target='world_site'/>

        <pointer name='ref' type-name='general_ref'/>
        <int32_t name='year'/>
        <int32_t name='season_tick'/>

        <int32_t name='id' ref-target='art_image_chunk'/>
        <int16_t name='subid' ref-target='art_image' aux-value='$$.id'/>
    </struct-type>

    <struct-type type-name='art_image_chunk_memberst'>
        <pointer type-name='art_image' name='art_image'/>
    </struct-type>

    <struct-type type-name='art_image_chunk' original-name='art_image_chunkst'
                 instance-vector='$global.world.art_image_chunks.all' key-field='id'>
        <int32_t name='id' comment='art_image_*.dat'/>

        <static-array name='images' count='500' type-name='art_image_chunk_memberst'/>
    </struct-type>

    <struct-type type-name='art_image_chunk_handlerst'>
        <stl-vector name='all' pointer-type='art_image_chunk'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
