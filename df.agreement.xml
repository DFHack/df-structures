<data-definition>
    <struct-type type-name='agreement_complaintst'>
        <enum type-name='history_event_reason' name='reason'/>
        <int32_t name='subject_id' ref-target='agreement_details'/>
        <int32_t name='year'/>
        <int32_t name='tick'/>
    </struct-type>

    <struct-type type-name='agreement_party' original-name='agreement_partyst' key-field='id'>
        <int32_t name='id'/>

        <stl-vector type-name='int32_t' name='histfig_ids' ref-target='historical_figure'/>
        <stl-vector type-name='int32_t' name='entity_ids' ref-target='historical_entity'/>

        <stl-vector name='complaint' pointer-type='agreement_complaintst'/>
    </struct-type>

    <enum-type type-name='agreement_details_type' base-type='int32_t'> bay12: AgreementSubjectType
        <enum-item name='JoinParty' comment='JOIN_AS_COMPANION'/>
        <enum-item name='DemonicBinding' comment='ATTACH_TO_WORLD'/>
        <enum-item name='Residency' comment='BECOME_RESIDENT'/>
        <enum-item name='Citizenship' comment='BECOME_CITIZEN'/>
        <enum-item name='Parley' comment='ARRANGE_PARLEY'/>
        <enum-item name='PositionCorruption' comment="Embezzlement and accepting bribes seen. For own gain and for 'sponsor'"/>
        <enum-item name='PlotStealArtifact'/>
        <enum-item name='PromisePosition'/>
        <enum-item name='PlotAssassination'/>
        <enum-item name='PlotAbduct'/>
        <enum-item name='PlotSabotage'/>
        <enum-item name='PlotConviction' comment='FOILED_CONSPIRACY'/>
        <enum-item name='Location' comment='BUILD_LOCATION'/>
        <enum-item name='PlotInfiltrationCoup' comment='INFILTRATE_SOCIETY'/>
        <enum-item name='PlotFrameTreason' comment='FRAME_FOR_CRIME'/>
        <enum-item name='PlotInduceWar' comment='START_WAR_WITH_ENTITY'/>
        <enum-item name='OfferService'/>
        <enum-item name='RetrieveArtifact'/>
    </enum-type>

    <struct-type type-name='agreement_details_data_join_party' original-name='agreement_subject_join_as_companionst'>
        <enum name='reason' base-type='int32_t' type-name='history_event_reason'/>
        -- Here be unions!
        <int32_t name='member' ref-target='agreement_party'/>
        <int32_t name='party' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site' comment='possibly a Year, if for entertainment'/>
        <int32_t name='entity' ref-target='historical_entity' comment='possibly a Season, or an Identity'/>
        <int32_t name='figure' ref-target='historical_figure' comment='this is a value_type when reason == sphere_alignment'/>
        <int32_t name='end_year'/>
        <int32_t name='end_season_tick'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_residency' original-name='agreement_subject_become_residentst'>
        <enum name='reason' base-type='int32_t' type-name='history_event_reason'/>
        <int32_t name='applicant' ref-target='agreement_party'/>
        <int32_t name='government' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
        <int32_t name='end_year'/>
        <int32_t name='end_season_tick'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_citizenship' original-name='agreement_subject_become_citizenst'>
        <int32_t name='applicant' ref-target='agreement_party'/>
        <int32_t name='government' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
        <int32_t name='end_year'/>
        <int32_t name='end_season_tick'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_demonic_binding' original-name='agreement_subject_attach_to_worldst'>
        <enum name='reason' base-type='int32_t' type-name='history_event_reason'/>
        <int32_t name='demon' ref-target='agreement_party'/>
        <int32_t name='summoner' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
        <int32_t name='artifact' ref-target='artifact_record'/>
        <enum name='sphere' type-name='sphere_type' base-type='int32_t'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_parley' original-name='agreement_subject_arrange_parleyst'>
        <enum name='reason' base-type='int32_t' type-name='history_event_reason'/>
        <int32_t name='asker' ref-target='agreement_party'/>
        <int32_t name='target' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
        <int32_t name='end_year'/>
        <int32_t name='end_season_tick'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_position_corruption' original-name='agreement_subject_position_corruptionst'>
        <enum name='corrupt_circumstance' type-name='unit_thought_type'/>
        <int32_t name='actor_index' ref-target='agreement_party'/>
        <int32_t name='influencer_index' ref-target='agreement_party'/>
        <int32_t name='intermediary_index' ref-target='agreement_party'/>
        <int32_t name='target_id' ref-target='historical_entity'/>
        <int32_t name='position_id' comment="bay12: related_eppid; position index in the entity's Own entity_position vector"/>
    </struct-type>

    <struct-type type-name='agreement_details_data_plot_assassination' original-name='agreement_subject_assassinatest'>
        <int32_t name='actor_index' ref-target='agreement_party'/>
        <int32_t name='influencer_index' ref-target='agreement_party'/>
        <int32_t name='intermediary_index' ref-target='agreement_party'/>
        <int32_t name='target_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_plot_abduct' original-name='agreement_subject_abductst'>
        <int32_t name='actor_index' ref-target='agreement_party'/>
        <int32_t name='influencer_index' ref-target='agreement_party'/>
        <int32_t name='intermediary_index' ref-target='agreement_party'/>
        <int32_t name='target_id' ref-target='historical_figure'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_plot_conviction' original-name='agreement_subject_foiled_conspiracyst'>
        <stl-vector name='criminal_indices' type-name='int32_t' ref-target='agreement_party'/>
        <enum name='corruption_action' type-name='intrigue_corruption_action_type'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_plot_infiltration_coup' original-name='agreement_subject_infiltrate_societyst'>
        <int32_t name='actor_index' ref-target='agreement_party'/>
        <int32_t name='influencer_index' ref-target='agreement_party'/>
        <int32_t name='target' ref-target='historical_entity'/>
        <uint32_t name='flags'/> bay12: INTRIGUE_PLOT_INFILTRATE_SOCIETY_FLAG_* ?
    </struct-type>

    <struct-type type-name='agreement_details_data_plot_frame_treason' original-name='agreement_subject_frame_for_crimest'>
        <int32_t name='actor_index' ref-target='agreement_party'/>
        <int32_t name='influencer_index' ref-target='agreement_party'/>
        <int32_t name='victim_id' ref-target='historical_figure'/>
        <int32_t name='fool_id' ref-target='historical_figure'/>
        <enum name='crime' type-name='crime_type'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_plot_induce_war' original-name='agreement_subject_start_war_with_entityst'>
        <int32_t name='actor_index' ref-target='agreement_party'/>
        <int32_t name='influencer_index' ref-target='agreement_party'/>
        <int32_t name='attacker' ref-target='historical_entity'/>
        <int32_t name='defender' ref-target='historical_entity'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_plot_sabotage' original-name='agreement_subject_sabotagest'>
        <int32_t name='plotter_index' ref-target='agreement_party'/>
        <int32_t name='actor_index' ref-target='agreement_party'/>
        <int32_t name='intermediary_index' ref-target='agreement_party'/>
        <int32_t name='victim_id' ref-target='historical_figure'/>
        <int32_t name='victim_civ' ref-target='historical_entity'/>
        <int32_t name='victim_site' ref-target='world_site'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_plot_steal_artifact' original-name='agreement_subject_steal_artifactst'>
        <int32_t name='actor_index' ref-target='agreement_party'/>
        <int32_t name='influencer_index' ref-target='agreement_party'/>
        <int32_t name='intermediary_index' ref-target='agreement_party'/>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_promise_position' original-name='agreement_subject_promise_of_positionst'>
        <int32_t name='beneficiary_index' ref-target='agreement_party'/>
        <int32_t name='actor_index' ref-target='agreement_party'/>
        <int32_t name='promisee_index' ref-target='agreement_party'/>
        <int32_t name='influencer_index' ref-target='agreement_party'/>
        <stl-vector name='intermediary_indices' type-name='int32_t' ref-target='agreement_party'/>
        <int32_t name='entity_id' ref-target='historical_entity'/>
    </struct-type>

    <bitfield-type type-name='agreement_subject_build_location_flag' base-type='uint32_t'> bay12: AGREEMENT_SUBJECT_BUILD_LOCATION_FLAG_*
        <flag-bit name='warned_is_ready'/>
    </bitfield-type>

    <struct-type type-name='agreement_details_data_location' original-name='agreement_subject_build_locationst'>
        <int32_t name='applicant' ref-target='agreement_party'/>
        <int32_t name='government' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
        <enum name='type' base-type='int32_t' type-name='abstract_building_type'/>
        <enum name='deity_type' type-name='religious_practice_type'/>
        <compound name='deity_data' type-name='religious_practice_data'/>
        <enum name='profession' type-name='profession'/>
        <int32_t name='tier' comment='1 = temple or guildhall, 2 = temple complex or grand guildhall; matches location_tier in abstract_building_contents'/>
        <bitfield name='flags' base-type='uint32_t' type-name='agreement_subject_build_location_flag'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_offer_service' original-name='agreement_subject_offer_servicest'>
        <int32_t name='requesting_party' ref-target='agreement_party'/>
        <int32_t name='serving_party' ref-target='agreement_party'/>
        <int32_t name='served_entity' ref-target='historical_entity'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_retrieve_artifact' original-name='agreement_subject_retrieve_artifactst'>
        <int32_t name='retrieving_party' ref-target='agreement_party'/>
        <int32_t name='requesting_party' ref-target='agreement_party'/>
        <int32_t name='artifact' ref-target='artifact_record'/>
        <int32_t name='artifact_site' ref-target='world_site'/>
        <int32_t name='receiving_entity' ref-target='historical_entity'/>
    </struct-type>

    <struct-type type-name='agreement_details' original-name='agreement_subjectst' key-field='id'>
        <int32_t name='id'/>
        <int32_t name='year'/>
        <int32_t name='year_tick'/>

        <compound name='data' is-union='true'>
            <pointer name='JoinParty' type-name='agreement_details_data_join_party'/>
            <pointer name='DemonicBinding' type-name='agreement_details_data_demonic_binding'/>
            <pointer name='Residency' type-name='agreement_details_data_residency'/>
            <pointer name='Citizenship' type-name='agreement_details_data_citizenship'/>
            <pointer name='Parley' type-name='agreement_details_data_parley'/>
            <pointer name='PositionCorruption' type-name='agreement_details_data_position_corruption'/>
            <pointer name='PlotStealArtifact' type-name='agreement_details_data_plot_steal_artifact'/>
            <pointer name='PromisePosition' type-name='agreement_details_data_promise_position'/>
            <pointer name='PlotAssassination' type-name='agreement_details_data_plot_assassination'/>
            <pointer name='PlotAbduct' type-name='agreement_details_data_plot_abduct'/>
            <pointer name='PlotSabotage' type-name='agreement_details_data_plot_sabotage'/>
            <pointer name='PlotConviction' type-name='agreement_details_data_plot_conviction'/>
            <pointer name='Location' type-name='agreement_details_data_location'/>
            <pointer name='PlotInfiltrationCoup' type-name='agreement_details_data_plot_infiltration_coup'/>
            <pointer name='PlotFrameTreason' type-name='agreement_details_data_plot_frame_treason'/>
            <pointer name='PlotInduceWar' type-name='agreement_details_data_plot_induce_war'/>
            <pointer name='OfferService' type-name='agreement_details_data_offer_service'/>
            <pointer name='RetrieveArtifact' type-name='agreement_details_data_retrieve_artifact'/>
        </compound>

        <enum name='type' base-type='int32_t' type-name='agreement_details_type'/>
    </struct-type>

    <bitfield-type type-name='agreement_flag' base-type='uint32_t' since='v0.42.01'> bay12: AGREEMENT_FLAG_*
        <flag-bit name='petition_not_accepted' comment='this gets unset by accepting a petition'/>
        <flag-bit name='convicted_accepted' comment="concluded"/>
    </bitfield-type>

    <struct-type type-name='agreement' key-field='id' original-name='agreementst'
                 instance-vector='$global.world.agreements.all'>
        <int32_t name='id'/>

        <stl-vector name='parties' pointer-type='agreement_party'/>
        <int32_t name='next_party_id'/>
        <stl-vector name='details' pointer-type='agreement_details'/>
        <int32_t name='next_details_id'/>

        <int32_t name='smm_x'/>
        <int32_t name='smm_y'/>

        <bitfield name='flags' since='v0.42.01' base-type='uint32_t' type-name='agreement_flag'/>
    </struct-type>

    <struct-type type-name='agreement_handlerst'>
        <stl-vector name='all' pointer-type='agreement'/>
        <stl-vector name='order_load' pointer-type='agreement' has-bad-pointers='true'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
