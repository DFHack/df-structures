<data-definition>
    <struct-type type-name='file_compressorst' custom-methods='true'>
        Note: the assign operator is manually implemented

        <bool name='compressed'/>
        <stl-fstream name='f'/>

        <pointer name='in_buffer' type-name='uint8_t' is-array='true'/>
        <long name='in_buffersize'/>
        <long name='in_buffer_amount_loaded'/>
        <long name='in_buffer_position'/>

        <pointer name='out_buffer' type-name='uint8_t' is-array='true'/>
        <long name='out_buffersize'/>
        <int32_t name='out_buffer_amount_written'/>
    </struct-type>

    <enum-type type-name='interface_breakdown_types'> bay12: InterfaceBreakdownTypes, no base type
        <enum-item name='NONE'/>
        <enum-item name='QUIT'/>
        <enum-item name='STOPSCREEN'/>
        <enum-item name='TOFIRST'/>
    </enum-type>

    <enum-type type-name='interface_push_types'> bay12: InterfacePushType, no base type
        <enum-item name='AS_PARENT'/>
        <enum-item name='AS_CHILD'/>
        <enum-item name='AT_BACK'/>
        <enum-item name='AT_FRONT'/>
    </enum-type>

    <class-type type-name='abstract_interfacest'>
        <virtual-methods>
            <vmethod name='get_rect' ret-type='extentst'/>
            <vmethod name='feed'>
                <pointer name='events'><stl-set type-name='interface_key'/></pointer>
            </vmethod>
            <vmethod name='logic'/>
            <vmethod name='render'> <uint32_t name='curtick'/> </vmethod>
            <vmethod name='arrange' since='v50.10'/>
            <vmethod name='remove_child'>
                <pointer name='w'/>
            </vmethod>
            <vmethod name='clear'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='viewscreen' original-name='viewscreenst' inherits-from='abstract_interfacest' custom-methods='true'>
        <pointer name='child' type-name='viewscreen'/>
        <pointer name='parent' type-name='viewscreen'/>
        <enum base-type='int8_t' name='breakdown_level' type-name='interface_breakdown_types' init-value='NONE'/>
        <int8_t name='option_key_pressed'/>
        <compound type-name='widget_container' name='widgets'/>

        <virtual-methods>
            <vmethod name='resize'><int32_t name='w'/><int32_t name='h'/></vmethod>
            <vmethod name='set_port_flags'/>
            <vmethod is-destructor='true'/>
        </virtual-methods>

        <custom-methods>
            <cmethod name='feed_key'/>
        </custom-methods>
    </class-type>

    <struct-type type-name='interfacest'>
        <int32_t name='original_fps'/>

        <compound name='view' type-name='viewscreen'/>
        <uint32_t name='flag'/>
        <int32_t name='shutdown_interface_tickcount'/>
        <int32_t name='shutdown_interface_for_ms'/>
        <pointer type-name='widget_textbox' name='cur_textbox'/>
    </struct-type>

    <struct-type type-name='scrollbarst'>
        <int32_t name='sel'/>
        <int32_t name='sel_min'/>
        <int32_t name='sel_max'/>
        <int32_t name='page_size'/>
        <int32_t name='print_sy'/>
        <int32_t name='print_ey'/>

        <int32_t name='scroller_sy'/>
        <int32_t name='scroller_ey'/>
    </struct-type>

    <struct-type type-name='extentst'>
        <int32_t name='x1'/>
        <int32_t name='y1'/>
        <int32_t name='x2'/>
        <int32_t name='y2'/>
    </struct-type>

    <class-type type-name='widget' original-name='widgets::widget' inherits-from='abstract_interfacest'>
        <pointer name='parent' type-name='abstract_interfacest'/>
        <compound type-name='extentst' name='rect'/>
        <stl-vector name='custom_feed'> <stl-function/> </stl-vector>
        <stl-vector name='custom_logic'> <stl-function/> </stl-vector>
        <stl-vector name='custom_render'> <stl-function/> </stl-vector>
        <stl-vector name='custom_activated'> <stl-function/> </stl-vector>
        <stl-string name='name'/>
        <bitfield name='flag' base-type='int8_t'> bay12: WidgetFlag
            <flag-bit name='VISIBILITY_ACTIVE'/>
            <flag-bit name='VISIBILITY_VISIBLE'/> plus ACTUALLY_VISIBLE for both of the above
            <flag-bit name='CAN_KEY_ACTIVATE'/>
            <flag-bit name='GLOBAL_POSITIONING'/>
        </bitfield>
        <int32_t name='offset_bottom'/>
        <int32_t name='offset_left'/>
        <int32_t name='offset_right'/>
        <int32_t name='offset_top'/>
        <s-float name='anchor_top'/>
        <s-float name='anchor_bottom'/>
        <s-float name='anchor_left'/>
        <s-float name='anchor_right'/>
        <int32_t name='min_w'/>
        <int32_t name='min_h'/>
        <stl-variant name='tooltip' raw-type='std::string, std::function&lt;void()&gt;'/>
        <enum name='tooltip_type' base-type='int8_t'> bay12: TooltipType
            <enum-item name='NONE' value='-1'/>
            <enum-item name='REPLACE_MINIMAP'/>
            <enum-item name='ABOVE'/>
            <enum-item name='BELOW'/>
        </enum>
        <bool name='displaying_tooltip'/>
        <stl-string name='search_string'/>
        <stl-set name='activation_hotkeys' type-name='interface_key'/>

        <virtual-methods>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='widget_character' original-name='widgets::character' inherits-from='widget'>
        <int8_t name='c'/>
        <int16_t name='fg'/>
        <int16_t name='bg'/>
        <bool name='bright'/>
        <uint32_t name='flag'/>
    </class-type>

    <class-type type-name='widget_text' original-name='widgets::text' inherits-from='widget'>
        <stl-string name='str'/>
        <int16_t name='fg'/>
        <int16_t name='bg'/>
        <bool name='bright'/>
        <enum type-name='justification' name='just'/>
        <int32_t name='space'/>
        <uint32_t name='flag'/>
    </class-type>

    <class-type type-name='widget_text_truncated' original-name='widgets::text_truncated' inherits-from='widget_text'>
        <stl-string name='original_str'/>
        <bitfield name='truncate_mode_flags' base-type='int32_t'> bay12: TRUNCATE_MODE_*
            <flag-bit name='abbreviate'/>
            <flag-bit name='ellipses'/>
        </bitfield>
    </class-type>

    <class-type type-name='widget_text_multiline' original-name='widgets::text_multiline' inherits-from='widget_text'/>

    <bitfield-type type-name='override_tile_type' base-type='uint8_t'> bay12: OVERRIDE_*
        <flag-bit name='OVERRIDE_CHAR'/>
        <flag-bit name='OVERRIDE_TILE'/>
        <flag-bit name='OVERRIDE_TOP_TILE'/>
        <flag-bit name='OVERRIDE_LOWER_TILE'/>
        <flag-bit name='OVERRIDE_TOP_LOWER_TILE'/>
        <flag-bit name='OVERRIDE_ANCHORED_TILE'/>
        <flag-bit name='OVERRIDE_TOP_ANCHORED_TILE'/>
    </bitfield-type>

    <class-type type-name='widget_nineslice' original-name='widgets::nineslice' inherits-from='widget'>
        <pointer type-name='int32_t' name='selected_texpos'/>
        <bitfield type-name='override_tile_type' name='flag' init-value='override_tile_type::mask_OVERRIDE_CHAR'/>
    </class-type>

    <class-type type-name='widget_nineslice_horizontal' original-name='widgets::nineslize_horizontal' inherits-from='widget_nineslice'/>

    <class-type type-name='widget_anchored_tile' original-name='widgets::anchored_tile' inherits-from='widget_nineslice'>
        <long name='texp'/>
        <long name='offset_x'/>
        <long name='offset_y'/>
        <bool name='use_color'/>
    </class-type>

    <class-type type-name='widget_keybinding_display' original-name='widgets::keybinding_display' inherits-from='widget'>
        <int32_t name='binding'/>
    </class-type>

    <class-type type-name='widget_graphics_switcher' original-name='widgets::graphics_switcher' inherits-from='widget'>
        <stl-shared-ptr type-name='widget' name='graphics_widget'/>
        <stl-shared-ptr type-name='widget' name='ascii_widget'/>
    </class-type>

    <struct-type type-name='widget_menu' original-name='widgets::menu'>
        <stl-map name='lines'/>
        <int32_t name='selection'/>
        <int32_t name='last_displayheight'/>
        <bool name='bleached'/>
        <stl-map name='colors'/>
    </struct-type>

    <enum-type type-name='textbox_type'> bay12: TextboxType, no base type
        <enum-item name='FILTER'/>
        <enum-item name='NAME'/>
        <enum-item name='NONE'/>
    </enum-type>

    <class-type type-name='widget_textbox' original-name='widgets::textbox' inherits-from='widget'>
        <stl-string name='str'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: STRINGENTRY_*
            <flag-bit name='LETTERS'/>
            <flag-bit name='SPACE'/>
            <flag-bit name='NUMBERS'/>
            <flag-bit name='CAPS'/>
            <flag-bit name='SYMBOLS'/>
            <flag-bit name='FILENAME'/>
            <flag-bit name='REMOVEKEYS'/>
        </bitfield>
        <stl-function name='callback' comment='arguments are textbox*'/>
        <int16_t name='fg'/>
        <int16_t name='bg'/>
        <int8_t name='bright'/>
        <int32_t name='maxlen'/>
        <enum type-name='textbox_type' name='textbox_type' init-value='FILTER'/>
    </class-type>

    <class-type type-name='widget_dropdown' original-name='widgets::dropdown' inherits-from='widget'>
        <size_t name='cur_selected'/>
        <stl-vector type-name='stl-string' name='options'/>
        <stl-function name='callback' comment='std::function&lt;void(size_t, dropdown *)&gt;'/>
        <bool name='open'/>
    </class-type>

    <class-type type-name='widget_folder' original-name='widgets::folder' inherits-from='widget'>
        <compound type-name='widget' name='open'/>
        <bool name='last_visible'/>
        <stl-unordered-map name='controlled_set' comment='std::unordered_set&lt;std::shared_ptr&lt;widget&gt;&gt;'/>
        <bool name='controlled_visible'/>
        <compound type-name='widget_text' name='label'/>
        <stl-weak-ptr type-name='widget_container'/>
    </class-type>

    <struct-type type-name='filter_entry'>
        <stl-shared-ptr type-name='widget_text' name='label'/>
        <stl-unordered-map name='filtered_set' comment='std::unordered_set&lt;std::shared_ptr&lt;widget&gt;&gt;'/>
    </struct-type>

    <class-type type-name='widget_filter' original-name='widgets::filter' inherits-from='widget'>
        <compound type-name='filter_entry' name='all_filter'/>
        <stl-vector type-name='filter_entry' name='filters'/>
        <int32_t name='filter_idx'/>
        <stl-weak-ptr type-name='widget_container' name='container_parent'/>
        <virtual-methods>
            <vmethod name='set_filtered'> <int32_t name='idx'/> </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='indiv_filter' original-name='widgets::multifilter::indiv_filter' inherits-from='widget_filter'/>

    <class-type type-name='multifilter' original-name='widgets::multifilter' inherits-from='widget'>
        <stl-vector name='filters'>
            <stl-shared-ptr type-name='indiv_filter'/>
        </stl-vector>
        <stl-weak-ptr type-name='widget_container' name='container_parent'/>
    </class-type>

    <class-type type-name='widget_interface_main_button' original-name='widgets::interface_main_button' inherits-from='widget'>
        <int32_t name='which_button'/>
    </class-type>

    <class-type type-name='widget_interface_small_button' original-name='widgets::interface_small_button' inherits-from='widget'>
        <int32_t name='which_button'/>
    </class-type>

    <class-type type-name='widget_interface_pets_livestock_button' original-name='widgets::interface_pets_livestock_button' inherits-from='widget'>
        <int32_t name='which_button'/>
    </class-type>

    <class-type type-name='widget_better_button' original-name='widgets::better_button' inherits-from='widget'>
        <stl-function name='display_string'> <stl-string/> </stl-function>
        <stl-function name='texpos'> <pointer type-name='int32_t'/> </stl-function>
        <stl-function name='callback'/>
        <stl-function name='check_truth'> <bool/> </stl-function>
    </class-type>

    <class-type type-name='widget_container' original-name='widgets::container' inherits-from='widget'>
        <stl-map name='children_by_name' comment='std::map&lt;std::string,std::shared_ptr&lt;widget&gt;&gt;'/>
        <stl-vector name='children'>
            <stl-shared-ptr type-name='widget'/>
        </stl-vector>
    </class-type>

    <class-type type-name='widget_stack' original-name='widgets::widget_stack' inherits-from='widget_container'>
        <bool name='do_pop'/>
        <stl-shared-ptr type-name='widget' name='deferred_replacement'/>
    </class-type>

    <class-type type-name='widget_rows_container' original-name='widgets::rows_container' inherits-from='widget_container'>
        <int32_t name='padding'/>
    </class-type>

    <class-type type-name='widget_columns_container' original-name='widgets::columns_container' inherits-from='widget_container'>
        <int32_t name='padding'/>
    </class-type>

    <class-type type-name='widget_tabs' original-name='widgets::tabs' inherits-from='widget_container'>
        <size_t name='cur_idx'/>
        <stl-vector name='tab_labels' type-name='stl-string'/>
        <stl-vector name='rows' comment='actually std::pair of size_t, size_t'/>
        <enum name='tab_type'> bay12: TabType
            <enum-item name='DEFAULT'/>
            <enum-item name='SHORT'/>
            <enum-item name='SHORT_SUB'/>
            <enum-item name='SHORT_SUBSUB'/>
        </enum>
    </class-type>

    <class-type type-name='widget_scroll_rows' original-name='widgets::scroll_rows' inherits-from='widget_rows_container'>
        <int32_t name='scroll'/>
        <int32_t name='num_visible'/>
        <bool name='scrolling'/>
        <compound type-name='scrollbarst' name='scrollbar'/>
        <int8_t name='scrollbar_display_flags'/>
    </class-type>

    <class-type type-name='widget_radio_rows' original-name='widgets::radio_rows' inherits-from='widget'>
        <pointer type-name='widget' name='selected'/>
        <int32_t name='selected_idx' init-value='0'/>
        <compound type-name='widget_scroll_rows' name='rows'/>
        <stl-map name='select_callback' comment='std::map&lt;size_t, std::function&lt;void(widget *)&gt;&gt;'/>
    </class-type>

    <class-type type-name='widget_table' original-name='widgets::table' inherits-from='widget_container'>
        <stl-shared-ptr type-name='widget_columns_container' name='labels'/>
        <stl-shared-ptr type-name='widget_scroll_rows' name='entries'/>
        <stl-shared-ptr type-name='widget' name='key_display'/>
        <int32_t name='key_row'/>
        <int32_t name='key_col'/>
        <bool name='keyboard_controlled' init-value='true'/>
    </class-type>

    <class-type type-name='widget_params_container' original-name='widgets::params_container' inherits-from='widget_container'>
        <stl-shared-ptr type-name='widget_text' name='text'/>
        <stl-shared-ptr type-name='world_gen_param_valuest' name='param'/>
    </class-type>

    <class-type type-name='widget_report_popup' original-name='widgets::report_popup' inherits-from='widget'>
        <int32_t name='unid'/>
        <int32_t name='unid_cached'/>
        <int16_t name='uac'/>
        <stl-shared-ptr type-name='widget_scroll_rows' name='texts'/>
        <stl-shared-ptr type-name='widget_better_button' name='pause_button'/>
        <stl-shared-ptr type-name='widget_text_multiline' name='explanation'/>
        <bool name='pause_on_new'/>
        <size_t name='last_length'/>
    </class-type>

    <class-type type-name='widget_recenter_button' original-name='widgets::recenter_button' inherits-from='widget'>
        <int16_t name='x'/>
        <int16_t name='y'/>
        <int16_t name='z'/>
    </class-type>

    <class-type type-name='widget_sheet_button' original-name='widgets::sheet_button' inherits-from='widget'>
        <virtual-methods>
            <vmethod name='set_up_tooltip'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='widget_unit_sheet_button' original-name='widgets::unit_sheet_button' inherits-from='widget_sheet_button'>
        <int32_t name='unid'/>
    </class-type>

    <class-type type-name='widget_item_sheet_button' original-name='widgets::item_sheet_button' inherits-from='widget_sheet_button'>
        <int32_t name='itid'/>
    </class-type>

    <class-type type-name='widget_job_details_button' original-name='widgets::job_details_button' inherits-from='widget'>
        <pointer name='jb'/>
        <int32_t name='context'/>
    </class-type>

    <enum-type type-name='unit_list_options'> bay12: unit_list_options
        <enum-item name='NONE'/>
        <enum-item name='PORTRAIT'/>
        <enum-item name='NAME_PROF'/>
        <enum-item name='RECENTER'/>
        <enum-item name='SHEET'/>
        <enum-item name='CUR_JOB'/>
        <enum-item name='ACTIVITY_DETAILS'/>
        <enum-item name='HAPPINESS'/>
        <enum-item name='SPECIALIZED'/>
        <enum-item name='WORK_DETAILS'/>
        <enum-item name='SKILLS'/>
        <enum-item name='SELECTED'/>
        <enum-item name='SHOW_GENDER'/>
        <enum-item name='CUSTOM_BUILD'/>
        <enum-item name='FORCE_JOB_WIDTH'/>
        <enum-item name='ACTIVATE_ON_CURSOR'/>
    </enum-type>

    <bitfield-type type-name='unit_list_flag' base-type='uint8_t'> bay12: UNIT_LIST_FLAG_*
        <flag-bit name='show_gender'/>
        <flag-bit name='custom_build'/>
        <flag-bit name='force_job_width'/>
        <flag-bit name='activate_on_cursor'/>
    </bitfield-type>

    <bitfield-type type-name='unit_list_sort_flag'>
        <flag-bit name='NEEDS_RESORTED'/>
    </bitfield-type>

    <class-type type-name='widget_unit_portrait' original-name='widgets::unit_portrait' inherits-from='widget'>
        <pointer name='u' type-name='unit'/>
    </class-type>

    <class-type type-name='widget_creature_portrait' original-name='widgets::creature_portrait' inherits-from='widget'>
        <int16_t name='race'/>
        <int16_t name='ccaste'/>
    </class-type>

    <class-type type-name='widget_item_portrait' original-name='widgets::item_portrait' inherits-from='widget'>
        <pointer name='i' type-name='item'/>
    </class-type>

    <class-type type-name='widget_unit_name' original-name='widgets::unit_name' inherits-from='widget'>
        <pointer name='u' type-name='unit'/>
        <bool name='show_gender'/>
        <bool name='show_profession'/>
        <bool name='one_line_only'/>
    </class-type>

    <class-type type-name='widget_item_name' original-name='widgets::item_name' inherits-from='widget'>
        <pointer name='it' type-name='item'/>
    </class-type>

    <struct-type type-name='sort_entry'>
        <stl-function type-name='bool' name='fn' comment='std::function&lt;bool(const Entry &amp;,const Entry &amp;)&gt;'/>
        <stl-string name='ident'/>
    </struct-type>

    <struct-type type-name='item_or_unit'>
        <pointer/>
        <bool/>
    </struct-type>

    <class-type type-name='widget_unit_list' original-name='widgets::unit_list' inherits-from='widget_container'>
        <stl-vector name='deferred_units_builds'>
            <stl-weak-ptr type-name='widget_container'/>
            <pointer/>
            <bool/>
        </stl-vector>
        <stl-shared-ptr type-name='widget' name='no_unit_entry'/>
        <stl-vector type-name='sort_entry' name='sorting_by' comment='std::vector&lt;sort_entry&lt;item_or_unit&gt;&gt;'/>
        <stl-vector name='always_sorting_by'> <stl-function type-name='bool'/> </stl-vector>
        <stl-vector name='partitions'> <stl-function type-name='bool'/> </stl-vector>
        <stl-unordered-map name='ascending_sort'/> std::unordered_map&lt;std::string,bool&gt;
        <bitfield type-name='unit_list_sort_flag' name='sort_flags' base-type='uint8_t'/>
        <bitfield type-name='unit_list_flag' name='flags' base-type='uint8_t'/>
        <stl-vector name='filter_func'> <stl-function type-name='bool'/> </stl-vector>
        <stl-vector name='preprocess_unit_func'> <stl-function/> </stl-vector>
        <stl-vector name='postprocess_unit_func'> <stl-function/> </stl-vector>
        <stl-vector name='preprocess_item_func'> <stl-function/> </stl-vector>
        <stl-vector name='postprocess_item_func'> <stl-function/> </stl-vector>
        <stl-function name='close_callback'/>
        <stl-vector type-name='unit_list_options' name='options'/>
        <stl-vector type-name='item_or_unit' name='entry_list'/>
        <stl-unordered-map name='selected' comment='std::unordered_set&lt;void *&gt;'/>
        <stl-unordered-map type-name='stl-string' name='job_sort_str' comment='std::unordered_map&lt;void *,std::string&gt;'/>
        <int32_t name='cursor_idx'/>
        <stl-function name='is_selected' comment='std::function&lt;bool(item_or_unit)&gt;'/>
        <stl-vector name='on_select_change'>
            <stl-function comment='std::function&lt;void(item_or_unit,bool)&gt;'/>
        </stl-vector>
        <enum type-name='unit_list_options' name='skill_type'/>
        <stl-mutex name='mtx'/>
        <static-array type-name='int32_t' count='149' index-enum='job_skill' name='skills'/>
        <stl-string name='filter_str'/>
    </class-type>

    <class-type type-name='widget_sort_widget' original-name='widgets::sort_widget' inherits-from='widget' comment='template&lt;T, Entry&gt;'>
        <bool name='display_text'/>
        <pointer name='list' comment='T*'/>
        <stl-function type-name='bool' name='sort_fun'/> std::function&lt;bool(const Entry &amp;, const Entry &amp;)&gt;
    </class-type>

    <class-type type-name='widget_unit_sort_widget' inherits-from='widget_sort_widget' comment='template specialization using unit_list + unit_list::item_or_unit'/>

    <class-type type-name='MacroScreenLoad' inherits-from='viewscreen'>
        <compound name='menu' type-name='widget_menu'/>
        <int32_t name='width'/>
        <int32_t name='height'/>
    </class-type>

    <class-type type-name='MacroScreenSave' inherits-from='viewscreen'>
        <compound name='id' type-name='widget_textbox'/>
    </class-type>

    <enum-type type-name='region_permission_type'> bay12: RegionPermission
        <enum-item name='ADVENTURE_MAIN'/>
        <enum-item name='UNUSED11'/> used as index-enum, so name all entries
        <enum-item name='UNUSED12'/>
        <enum-item name='DWARF_MAIN'/>
        <enum-item name='UNUSED0'/>
        <enum-item name='UNUSED1'/>
        <enum-item name='UNUSED2'/>
        <enum-item name='UNUSED3'/>
        <enum-item name='UNUSED4'/>
        <enum-item name='UNUSED5'/>
        <enum-item name='UNUSED6'/>
        <enum-item name='UNUSED7'/>
        <enum-item name='UNUSED8'/>
        <enum-item name='UNUSED9'/>
        <enum-item name='UNUSED10'/>
    </enum-type>

    <struct-type type-name='region_headerst'>
        <compound type-name='language_name' name='name'/>
        <stl-string name='display_name'/>
        <static-array name='permission' count='15' type-name='int8_t' index-enum='region_permission_type'/>
        <compound name='last_id' comment='when loading, DF sets *_next_id to these fields plus 1'> not a compound
            <int32_t name='unit'/>
            <int32_t name='soul'/>
            <int32_t name='item'/>
            <int32_t name='entity'/>
            <int32_t name='nemesis'/>
            <int32_t name='artifact'/>
            <int32_t name='building'/>
            <int32_t name='machine'/>
            <int32_t name='hist_figure'/>
            <int32_t name='hist_event'/>
            <int32_t name='hist_event_collection'/>
            <int32_t name='unit_chunk'/>
            <int32_t name='art_image_chunk'/>
            <int32_t name='task'/>
            <int32_t name='squad'/>
            <int32_t name='formation'/>
            <int32_t name='activity'/>
            <int32_t name='interaction_instance'/>
            <int32_t name='written_content'/>
            <int32_t name='identity'/>
            <int32_t name='incident'/>
            <int32_t name='crime'/>
            <int32_t name='vehicle'/>
            <int32_t name='army'/>
            <int32_t name='army_controller'/>
            <int32_t name='army_tracking_info'/>
            <int32_t name='cultural_identity'/>
            <int32_t name='agreement'/>
            <int32_t name='poetic_form' since='v0.42.01'/>
            <int32_t name='musical_form' since='v0.42.01'/>
            <int32_t name='dance_form' since='v0.42.01'/>
            <int32_t name='scale' since='v0.42.01'/>
            <int32_t name='rhythm' since='v0.42.01'/>
            <int32_t name='occupation' since='v0.42.01'/>
            <int32_t name='belief_system' since='v0.44.01'/>
            <int32_t name='image_set' since='v0.47.01'/>
            <int32_t name='divination_set' since='v0.47.01'/>
        </compound>
        <compound type-name='shared_world_headerst' name='world_header'/>
        <stl-string name='filename_noext'/>
    </struct-type>

    <enum-type type-name='embark_finder_option' base-type='int16_t'> bay12: FindSiteParamType
        <enum-item name='DimensionX'/>
        <enum-item name='DimensionY'/>
        <enum-item name='Savagery'/>
        <enum-item name='Spirit'/>
        <enum-item name='Elevation'/>
        <enum-item name='Temperature'/>
        <enum-item name='Rain'/>
        <enum-item name='Drainage'/>
        <enum-item name='FluxStone'/>
        <enum-item name='AquiferLight'/>
        <enum-item name='AquiferHeavy'/>
        <enum-item name='River'/>
        <enum-item name='UndergroundRiver'/>
        <enum-item name='UndergroundPool'/>
        <enum-item name='MagmaPool'/>
        <enum-item name='MagmaPipe'/>
        <enum-item name='Chasm'/>
        <enum-item name='BottomlessPit'/>
        <enum-item name='OtherFeatures'/>
        <enum-item name='Soil'/>
        <enum-item name='Clay'/>
        <enum-item name='Sand'/>
    </enum-type>

    <struct-type type-name='random_object_batchst'>
        <int32_t name='start_inorganic_number'/>
        <int32_t name='end_inorganic_number'/>
        <int32_t name='start_plant_number'/>
        <int32_t name='end_plant_number'/>
        <int32_t name='start_item_number'/>
        <int32_t name='end_item_number'/>
        <int32_t name='start_creature_number'/>
        <int32_t name='end_creature_number'/>
        <int32_t name='start_entity_number'/>
        <int32_t name='end_entity_number'/>
        <int32_t name='start_reaction_number'/>
        <int32_t name='end_reaction_number'/>
        <int32_t name='start_interaction_number'/>
        <int32_t name='end_interaction_number'/>
        <int32_t name='start_language_translation_number'/>
        <int32_t name='end_language_translation_number'/>
    </struct-type>

    <struct-type type-name='region_object_datast'>
        <stl-vector pointer-type='random_object_batchst' name='batch'/>
        <stl-vector name='custom_inorganic'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_plants'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_items'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_creatures'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_entities'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_reactions'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_interactions'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_languages'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='inorganics' pointer-type='stl-string'/>
        <stl-vector name='plants' pointer-type='stl-string'/>
        <stl-vector name='bodies' pointer-type='stl-string'/>
        <stl-vector name='bodyglosses' pointer-type='stl-string'/>
        <stl-vector name='creatures' pointer-type='stl-string'/>
        <stl-vector name='items' pointer-type='stl-string'/>
        <stl-vector name='buildings' pointer-type='stl-string'/>
        <stl-vector name='entities' pointer-type='stl-string'/>
        <stl-vector name='words' pointer-type='stl-string'/>
        <stl-vector name='symbols' pointer-type='stl-string'/>
        <stl-vector name='translations' pointer-type='stl-string'/>
        <stl-vector name='colors' pointer-type='stl-string'/>
        <stl-vector name='shapes' pointer-type='stl-string'/>
        <stl-vector name='patterns' pointer-type='stl-string'/>
        <stl-vector name='reactions' pointer-type='stl-string'/>
        <stl-vector name='material_templates' pointer-type='stl-string'/>
        <stl-vector name='tissue_templates' pointer-type='stl-string'/>
        <stl-vector name='body_detail_plans' pointer-type='stl-string'/>
        <stl-vector name='creature_variations' pointer-type='stl-string'/>
        <stl-vector name='interactions' pointer-type='stl-string'/>
        <stl-vector name='text_sets' pointer-type='stl-string'/>
        <stl-vector name='musics' pointer-type='stl-string'/>
        <stl-vector name='sounds' pointer-type='stl-string'/>
        <stl-vector name='mod_ids' pointer-type='stl-string'/>
        <stl-vector name='mod_versions' type-name='int32_t'/>
        <stl-vector name='mod_compatible_versions' type-name='int32_t'/>
        <stl-vector name='mod_folder_paths' pointer-type='stl-string'/>
        <stl-vector name='mod_names' pointer-type='stl-string'/>
        <stl-vector name='mod_display_versions' pointer-type='stl-string'/>
    </struct-type>

    <struct-type type-name='worldgen_parms' original-name='world_gen_paramst'>
        <stl-string name='title'/>
        <stl-string name='seed' since='v0.34.01'/>
        <stl-string name='history_seed' since='v0.34.01'/>
        <stl-string name='name_seed' since='v0.34.01'/>
        <stl-string name='creature_seed' since='v0.34.01'/>
        <int32_t name='dim_x'/>
        <int32_t name='dim_y'/>
        <stl-string name='custom_name'/>
        <bool name='has_seed'/>
        <bool name='has_history_seed'/>
        <bool name='has_name_seed'/>
        <bool name='has_creature_seed'/>
        <int32_t name='embark_points'/>
        <int32_t name='peak_number_min'/>
        <int32_t name='partial_ocean_edge_min'/>
        <int32_t name='complete_ocean_edge_min'/>
        <int32_t name='volcano_min'/>
        <static-array name='region_counts' count='3'>
            <static-array type-name='int32_t' count='10' index-enum='world_region_type'/>
        </static-array>
        <static-array type-name='int32_t' name='river_mins' count='2'/>
        <int32_t name='subregion_max'/>
        <int32_t name='cavern_layer_count'/>
        <int32_t name='cavern_layer_openness_min'/>
        <int32_t name='cavern_layer_openness_max'/>
        <int32_t name='cavern_layer_passage_density_min'/>
        <int32_t name='cavern_layer_passage_density_max'/>
        <int32_t name='cavern_layer_water_min'/>
        <int32_t name='cavern_layer_water_max'/>
        <bool name='have_bottom_layer_1'/>
        <bool name='have_bottom_layer_2'/>
        <int32_t name='levels_above_ground'/>
        <int32_t name='levels_above_layer_1'/>
        <int32_t name='levels_above_layer_2'/>
        <int32_t name='levels_above_layer_3'/>
        <int32_t name='levels_above_layer_4'/>
        <int32_t name='levels_above_layer_5'/>
        <int32_t name='levels_at_bottom'/>
        <int32_t name='cave_min_size'/>
        <int32_t name='cave_max_size'/>
        <int32_t name='mountain_cave_min'/>
        <int32_t name='non_mountain_cave_min'/>
        <int32_t name='mythical_site_num'/>
        <int32_t name='total_civ_number'/>
        <int32_t name='rain_ranges_1'/>
        <int32_t name='rain_ranges_0'/>
        <int32_t name='rain_ranges_2'/>
        <int32_t name='drainage_ranges_1'/>
        <int32_t name='drainage_ranges_0'/>
        <int32_t name='drainage_ranges_2'/>
        <int32_t name='savagery_ranges_1'/>
        <int32_t name='savagery_ranges_0'/>
        <int32_t name='savagery_ranges_2'/>
        <int32_t name='volcanism_ranges_1'/>
        <int32_t name='volcanism_ranges_0'/>
        <int32_t name='volcanism_ranges_2'/>
        <static-array count='4' name='ranges'>
            <static-array type-name='int32_t' count='24' index-enum='worldgen_range_type'/>
        </static-array>
        <int32_t name='beast_end_year'/>
        <int32_t name='end_year'/>
        <int32_t name='beast_end_year_percent'/>
        <int32_t name='total_civ_population'/>
        <int32_t name='site_cap'/>
        <int32_t name='elevation_ranges_1'/>
        <int32_t name='elevation_ranges_0'/>
        <int32_t name='elevation_ranges_2'/>
        <int32_t name='mineral_scarcity'/>
        <int32_t name='megabeast_cap'/>
        <int32_t name='semimegabeast_cap'/>
        <int32_t name='titan_number'/>
        <static-array type-name='int32_t' name='titan_attack_trigger' count='3'/>
        <int32_t name='demon_number'/>
        <int32_t name='night_troll_number'/>
        <int32_t name='bogeyman_number'/>
        <int32_t name='nightmare_number' since='v0.47.01'/>
        <int32_t name='vampire_number'/>
        <int32_t name='werebeast_number'/>
        <static-array type-name='int32_t' name='werebeast_attack_trigger' count='3' since='v0.47.01'/>
        <int32_t name='secret_number'/>
        <int32_t name='regional_interaction_number'/>
        <int32_t name='disturbance_interaction_number'/>
        <int32_t name='evil_cloud_number'/>
        <int32_t name='evil_rain_number'/>
        <int8_t name='generate_divine_materials' since='v0.40.01'/>
        <int8_t name='use_mythical_materials' since='v0.51.01'/>
        <int8_t name='allow_mythical_healing' since='v0.51.01'/>
        <int8_t name='allow_divination' since='v0.47.01'/>
        <int8_t name='allow_demonic_experiments' since='v0.47.01'/>
        <int8_t name='allow_necromancer_experiments' since='v0.47.01'/>
        <int8_t name='allow_necromancer_lieutenants' since='v0.47.01'/>
        <int8_t name='allow_necromancer_ghouls' since='v0.47.01'/>
        <int8_t name='allow_necromancer_summons' since='v0.47.01'/>
        <int32_t name='good_sq_counts_0'/>
        <int32_t name='evil_sq_counts_0'/>
        <int32_t name='good_sq_counts_1'/>
        <int32_t name='evil_sq_counts_1'/>
        <int32_t name='good_sq_counts_2'/>
        <int32_t name='evil_sq_counts_2'/>
        <static-array type-name='int32_t' name='elevation_frequency' count='6'/>
        <static-array type-name='int32_t' name='rain_frequency' count='6'/>
        <static-array type-name='int32_t' name='drainage_frequency' count='6'/>
        <static-array type-name='int32_t' name='savagery_frequency' count='6'/>
        <static-array type-name='int32_t' name='temperature_frequency' count='6'/>
        <static-array type-name='int32_t' name='volcanism_frequency' count='6'/>
        <pointer type-name='worldgen_parms_ps' name='ps'/>
        <int32_t name='reveal_all_history'/>
        <int32_t name='cull_historical_figures'/>
        <int32_t name='erosion_cycle_count'/>
        <int32_t name='periodically_erode_extremes'/>
        <int32_t name='orographic_precipitation'/>
        <int32_t name='playable_civilization_required'/>
        <int32_t name='all_caves_visible'/>
        <int32_t name='show_embark_tunnel'/>
        <int32_t name='pole'/>
        <bool name='immune_to_resize'/>
    </struct-type>

    <struct-type type-name='worldgen_parms_ps' original-name='world_gen_param_presetst'>
        <int32_t name='width'/>
        <int32_t name='height'/>
        <static-array count='24' name='data' index-enum='worldgen_range_type'>
            <pointer is-array='true'><pointer is-array='true' type-name='int16_t'/></pointer>
        </static-array>
    </struct-type>

    <struct-type type-name='region_snapshotst'>
        <int32_t name='year'/>
        <compound name='territory' type-name='entity_territoryst'/>
        <stl-vector name='site_id' type-name='int32_t' ref-target='world_site'/>
        <stl-vector name='site_population' type-name='int32_t'/>
    </struct-type>

    <struct-type type-name='region_print_datast'>
        <pointer name='rss' type-name='region_snapshotst'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: REGION_PRINT_DATA_FLAG_*
            <flag-bit name='use_territory'/>
            <flag-bit name='use_territory_civs'/>
            <flag-bit name='use_site_info'/>
            <flag-bit name='use_notes'/>
            <flag-bit name='use_find_results'/>
            <flag-bit name='show_embark_restrictions'/>
            <flag-bit name='show_cliffs'/>
            <flag-bit name='show_elevation'/>
            <flag-bit name='triple_zoomed'/>
            <flag-bit name='show_travel_restriction_site'/>
        </bitfield>
        <int32_t name='relevant_id'/>
        <pointer name='highlight_civ_id'><stl-vector type-name='int32_t' ref-target='historical_entity'/></pointer>
        <pointer name='mission_report' type-name='mission_report'/>
        <int32_t name='mission_path_data_index'/>
        <int32_t name='mission_path_data_path_index'/>
        <pointer name='indicator_data' type-name='rpd_indicator_datast'/>
        <static-array name='legend_entity_id' type-name='int32_t' count='50' ref-target='historical_entity'/>
        <int32_t name='legend_entity_id_num'/>
        <int32_t name='mm_cent_x'/>
        <int32_t name='mm_cent_y'/>
        <int32_t name='smm_cent_x'/>
        <int32_t name='smm_cent_y'/>
        <int32_t name='cent_z'/>
        <int32_t name='embark_rectangle_sx'/>
        <int32_t name='embark_rectangle_ex'/>
        <int32_t name='embark_rectangle_sy'/>
        <int32_t name='embark_rectangle_ey'/>
        <static-array type-name='int32_t' count='22' index-enum='embark_finder_option'/>
        <pointer name='find_metal_ore'><stl-vector type-name='int16_t' ref-target='inorganic_raw'/></pointer>
        <pointer name='skip_metal_ore'><stl-vector type-name='int16_t' ref-target='inorganic_raw'/></pointer>
        <int32_t name='highlight_site_id' ref-target='world_site'/>

        <int32_t name='line_start_x'/>
        <int32_t name='line_start_y'/>
        <int32_t name='line_end_x'/>
        <int32_t name='line_end_y'/>
        <bool name='draw_entire_line'/>
    </struct-type>

    <struct-type type-name='rpd_indicator_datast'>
        <static-array name='line_s_xy' count='1000'><int32_t name='x'/><int32_t name='y'/></static-array>
        <static-array name='line_e_xy' count='1000'><int32_t name='x'/><int32_t name='y'/></static-array>
        <static-array name='line_char' type-name='uint8_t' count='1000'/>
        <static-array name='line_f' type-name='uint8_t' count='1000'/>
        <static-array name='line_b' type-name='uint8_t' count='1000'/>
        <static-array name='line_br' type-name='uint8_t' count='1000'/>
        <int32_t name='line_num'/>

        <static-array name='marker_xy' count='1000'><int32_t name='x'/><int32_t name='y'/></static-array>
        <static-array name='marker_char' type-name='int8_t' count='1000'/>
        <static-array name='marker_f' type-name='int8_t' count='1000'/>
        <static-array name='marker_b' type-name='int8_t' count='1000'/>
        <static-array name='marker_br' type-name='int8_t' count='1000'/>
        <int32_t name='marker_num'/>
    </struct-type>

</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
