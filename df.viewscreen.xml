<data-definition>
    <struct-type type-name='file_compressorst' custom-methods='true'>
        Note: the assign operator is manually implemented

        <bool name='compressed'/>
        <stl-fstream name='f'/>

        <pointer name='in_buffer' type-name='uint8_t' is-array='true'/>
        <long name='in_buffersize'/>
        <long name='in_buffer_amount_loaded'/>
        <long name='in_buffer_position'/>

        <pointer name='out_buffer' type-name='uint8_t' is-array='true'/>
        <long name='out_buffersize'/>
        <int32_t name='out_buffer_amount_written'/>
    </struct-type>

    <enum-type type-name='interface_breakdown_types'> bay12: InterfaceBreakdownTypes, no base type
        <enum-item name='NONE'/>
        <enum-item name='QUIT'/>
        <enum-item name='STOPSCREEN'/>
        <enum-item name='TOFIRST'/>
    </enum-type>

    <enum-type type-name='interface_push_types'> bay12: InterfacePushType, no base type
        <enum-item name='AS_PARENT'/>
        <enum-item name='AS_CHILD'/>
        <enum-item name='AT_BACK'/>
        <enum-item name='AT_FRONT'/>
    </enum-type>

    <class-type type-name='abstract_interfacest'>
        <virtual-methods>
            <vmethod name='get_rect' ret-type='extentst'/>
            <vmethod name='feed'>
                <pointer name='events'><stl-set type-name='interface_key'/></pointer>
            </vmethod>
            <vmethod name='logic'/>
            <vmethod name='render'> <uint32_t name='curtick'/> </vmethod>
            <vmethod name='arrange' since='v50.10'/>
            <vmethod name='remove_child'>
                <pointer name='w'/>
            </vmethod>
            <vmethod name='clear'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='viewscreen' original-name='viewscreenst' inherits-from='abstract_interfacest' custom-methods='true'>
        <pointer name='child' type-name='viewscreen'/>
        <pointer name='parent' type-name='viewscreen'/>
        <enum base-type='int8_t' name='breakdown_level' type-name='interface_breakdown_types' init-value='NONE'/>
        <int8_t name='option_key_pressed'/>
        <compound type-name='widget_container' name='widgets'/>

        <virtual-methods>
            <vmethod name='resize'><int32_t name='w'/><int32_t name='h'/></vmethod>
            <vmethod name='set_port_flags'/>
            <vmethod is-destructor='true'/>
        </virtual-methods>

        <custom-methods>
            <cmethod name='feed_key'/>
        </custom-methods>
    </class-type>

    <struct-type type-name='interfacest'>
        <int32_t name='original_fps'/>

        <compound name='view' type-name='viewscreen'/>
        <uint32_t name='flag'/>
        <int32_t name='shutdown_interface_tickcount'/>
        <int32_t name='shutdown_interface_for_ms'/>
        <pointer type-name='widget_textbox' name='cur_textbox'/>
    </struct-type>

    technically still here, though nothing uses it
    <class-type type-name='layer_object' original-name='layer_objectst'>
        <bool name='enabled'/>
        <bool name='active'/>

        <virtual-methods>
            No destructor anywhere:
            <vmethod ret-type='int32_t' name='getFirstVisible'/>
            <vmethod ret-type='int32_t' name='getLastVisible'/>
            <vmethod ret-type='int32_t' name='getX1'/>
            <vmethod ret-type='int32_t' name='getY1'/>
            <vmethod ret-type='int32_t' name='getX2'/>

            <vmethod ret-type='int32_t' name='getY2'/>
            <vmethod ret-type='int32_t' name='getPageSize'/>
            <vmethod ret-type='int32_t' name='getListCursor'/>
            <vmethod name='setListCursor'> <int32_t/> </vmethod>
            <vmethod name='feed'>
                <pointer name='events'><stl-set type-name='interface_key'/></pointer>
            </vmethod>

            <vmethod ret-type='bool' name='isSetMouseLRCur'/>
            <vmethod ret-type='bool' name='isSetMouseLCur'/>
            <vmethod ret-type='bool' name='isSetMouseRCur'/>
            <vmethod ret-type='int32_t' name='getMouseLCur'/>
            <vmethod ret-type='int32_t' name='getMouseRCur'/>

            <vmethod name='getMouseLClickPos'> <pointer type-name='int32_t' name='x'/> <pointer type-name='int32_t' name='y'/> </vmethod>
            <vmethod name='getMouseRClickPos'> <pointer type-name='int32_t' name='x'/> <pointer type-name='int32_t' name='y'/> </vmethod>
            <vmethod ret-type='int32_t' name='getListLength'/>
            <vmethod name='setListLength'> <int32_t/> </vmethod>
            <vmethod ret-type='int32_t' name='getMouseX'/>

            <vmethod ret-type='int32_t' name='getMouseY'/>
            <vmethod ret-type='int32_t' name='getMouseXOld'/>
            <vmethod ret-type='int32_t' name='getMouseYOld'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='layer_object_listst' inherits-from='layer_object'>
        <int32_t name='cursor'/>
        <int32_t name='num_entries'/>
        <int32_t name='x1'/>
        <int32_t name='y1'/>
        <int32_t name='page_size'/>
        <int32_t name='x2'/>
        <int32_t name='y2'/>
        <int32_t name='mouse_l_cur'/>
        <int32_t name='mouse_r_cur'/>
        <bool name='rclick_scrolls'/>
        <uint32_t name='flag' comment='for standardscrolling'/>
        <enum name='key_lclick' type-name='interface_key'/>
        <enum name='key_rclick' type-name='interface_key'/>
    </class-type>

    <class-type type-name='layer_object_buttonst' inherits-from='layer_object'>
        <int32_t name='x1'/>
        <int32_t name='y1'/>
        <int32_t name='x2'/>
        <int32_t name='y2'/>
        <int32_t name='has_mouse_lclick'/>
        <int32_t name='has_mouse_rclick'/>
        <int32_t name='mouse_lclick_x'/>
        <int32_t name='mouse_lclick_y'/>
        <int32_t name='mouse_rclick_x'/>
        <int32_t name='mouse_rclick_y'/>
        <int32_t name='mouse_x'/>
        <int32_t name='mouse_y'/>
        <int32_t name='mouse_x_old'/>
        <int32_t name='mouse_y_old'/>
        <bool name='handle_mouselbtndown'/>
        <bool name='handle_mouserbtndown'/>
    </class-type>

    <struct-type type-name='scrollbarst'>
        <int32_t name='sel'/>
        <int32_t name='sel_min'/>
        <int32_t name='sel_max'/>
        <int32_t name='page_size'/>
        <int32_t name='print_sy'/>
        <int32_t name='print_ey'/>

        <int32_t name='scroller_sy'/>
        <int32_t name='scroller_ey'/>
    </struct-type>

    <struct-type type-name='extentst'>
        <int32_t name='x1'/>
        <int32_t name='y1'/>
        <int32_t name='x2'/>
        <int32_t name='y2'/>
    </struct-type>

    <class-type type-name='widget' original-name='widgets::widget' inherits-from='abstract_interfacest'>
        <pointer name='parent' type-name='abstract_interfacest'/>
        <compound type-name='extentst' name='rect'/>
        <stl-vector name='custom_feed'> <stl-function/> </stl-vector>
        <stl-vector name='custom_logic'> <stl-function/> </stl-vector>
        <stl-vector name='custom_render'> <stl-function/> </stl-vector>
        <stl-vector name='custom_activated'> <stl-function/> </stl-vector>
        <stl-string name='name'/>
        <bitfield name='visibility_flags' base-type='int8_t'> bay12: WidgetFlag
            <flag-bit name='VISIBILITY_ACTIVE'/>
            <flag-bit name='VISIBILITY_VISIBLE'/> plus ACTUALLY_VISIBLE for both of the above
            <flag-bit name='CAN_KEY_ACTIVATE'/>
            <flag-bit name='GLOBAL_POSITIONING'/>
        </bitfield>
        <int32_t name='offset_bottom'/>
        <int32_t name='offset_left'/>
        <int32_t name='offset_right'/>
        <int32_t name='offset_top'/>
        <s-float name='anchor_top'/>
        <s-float name='anchor_bottom'/>
        <s-float name='anchor_left'/>
        <s-float name='anchor_right'/>
        <int32_t name='min_w'/>
        <int32_t name='min_h'/>
        <stl-variant name='tooltip' raw-type='std::string, std::function&lt;void()&gt;'/>
        <enum name='tooltip_type' base-type='int8_t'> bay12: TooltipType
            <enum-item name='NONE' value='-1'/>
            <enum-item name='REPLACE_MINIMAP'/>
            <enum-item name='ABOVE'/>
            <enum-item name='BELOW'/>
        </enum>
        <bool name='displaying_tooltip'/>
        <stl-string name='search_string'/>
        <stl-set name='activation_hotkeys' type-name='interface_key'/>

        <virtual-methods>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='widget_character' original-name='widgets::character' inherits-from='widget'>
        <int8_t name='c'/>
        <int16_t name='fg'/>
        <int16_t name='bg'/>
        <bool name='bright'/>
        <uint32_t name='flag'/>
    </class-type>

    <class-type type-name='widget_text' original-name='widgets::text' inherits-from='widget'>
        <stl-string name='str'/>
        <int16_t name='fg'/>
        <int16_t name='bg'/>
        <bool name='bright'/>
        <enum type-name='justification' name='just'/>
        <int32_t name='space'/>
        <uint32_t name='flag'/>
    </class-type>

    <class-type type-name='widget_text_truncated' original-name='widgets::text_truncated' inherits-from='widget_text'>
        <stl-string name='original_str'/>
        <bitfield name='truncate_mode_flags' base-type='int32_t'> bay12: TRUNCATE_MODE_*
            <flag-bit name='abbreviate'/>
            <flag-bit name='ellipses'/>
        </bitfield>
    </class-type>

    <class-type type-name='widget_text_multiline' original-name='widgets::text_multiline' inherits-from='widget_text'/>

    <bitfield-type type-name='override_tile_type' base-type='uint8_t'> bay12: OVERRIDE_*
        <flag-bit name='OVERRIDE_CHAR'/>
        <flag-bit name='OVERRIDE_TILE'/>
        <flag-bit name='OVERRIDE_TOP_TILE'/>
        <flag-bit name='OVERRIDE_LOWER_TILE'/>
        <flag-bit name='OVERRIDE_TOP_LOWER_TILE'/>
        <flag-bit name='OVERRIDE_ANCHORED_TILE'/>
        <flag-bit name='OVERRIDE_TOP_ANCHORED_TILE'/>
    </bitfield-type>

    <class-type type-name='widget_nineslice' original-name='widgets::nineslice' inherits-from='widget'>
        <pointer type-name='int32_t' name='selected_texpos'/>
        <bitfield type-name='override_tile_type' name='flag' init-value='override_tile_type::mask_OVERRIDE_CHAR'/>
    </class-type>

    <class-type type-name='widget_nineslice_horizontal' original-name='widgets::nineslize_horizontal' inherits-from='widget_nineslice'/>

    <class-type type-name='widget_anchored_tile' original-name='widgets::anchored_tile' inherits-from='widget_nineslice'>
        <long name='texp'/>
        <long name='offset_x'/>
        <long name='offset_y'/>
        <bool name='use_color'/>
    </class-type>

    <class-type type-name='widget_keybinding_display' original-name='widgets::keybinding_display' inherits-from='widget'>
        <int32_t name='binding'/>
    </class-type>

    <class-type type-name='widget_graphics_switcher' original-name='widgets::graphics_switcher' inherits-from='widget'>
        <stl-shared-ptr type-name='widget' name='graphics_widget'/>
        <stl-shared-ptr type-name='widget' name='ascii_widget'/>
    </class-type>

    <struct-type type-name='widget_menu' original-name='widgets::menu'>
        <stl-map name='lines'/>
        <int32_t name='selection'/>
        <int32_t name='last_displayheight'/>
        <bool name='bleached'/>
        <stl-map name='colors'/>
    </struct-type>

    <enum-type type-name='textbox_type'> bay12: TextboxType, no base type
        <enum-item name='FILTER'/>
        <enum-item name='NAME'/>
        <enum-item name='NONE'/>
    </enum-type>

    <class-type type-name='widget_textbox' original-name='widgets::textbox' inherits-from='widget'>
        <stl-string name='str'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: STRINGENTRY_*
            <flag-bit name='LETTERS'/>
            <flag-bit name='SPACE'/>
            <flag-bit name='NUMBERS'/>
            <flag-bit name='CAPS'/>
            <flag-bit name='SYMBOLS'/>
            <flag-bit name='FILENAME'/>
            <flag-bit name='REMOVEKEYS'/>
        </bitfield>
        <stl-function name='callback' comment='arguments are textbox*'/>
        <int16_t name='fg'/>
        <int16_t name='bg'/>
        <int8_t name='bright'/>
        <int32_t name='maxlen'/>
        <enum type-name='textbox_type' name='textbox_type' init-value='FILTER'/>
    </class-type>

    <class-type type-name='widget_dropdown' original-name='widgets::dropdown' inherits-from='widget'>
        <size_t name='cur_selected'/>
        <stl-vector type-name='stl-string' name='options'/>
        <stl-function name='callback' comment='std::function&lt;void(size_t, dropdown *)&gt;'/>
        <bool name='open'/>
    </class-type>

    <class-type type-name='widget_folder' original-name='widgets::folder' inherits-from='widget'>
        <compound type-name='widget' name='open'/>
        <bool name='last_visible'/>
        <stl-unordered-map name='controlled_set' comment='std::unordered_set&lt;std::shared_ptr&lt;widget&gt;&gt;'/>
        <bool name='controlled_visible'/>
        <compound type-name='widget_text' name='label'/>
        <stl-weak-ptr type-name='widget_container'/>
    </class-type>

    <struct-type type-name='filter_entry'>
        <stl-shared-ptr type-name='widget_text' name='label'/>
        <stl-unordered-map name='filtered_set' comment='std::unordered_set&lt;std::shared_ptr&lt;widget&gt;&gt;'/>
    </struct-type>

    <class-type type-name='widget_filter' original-name='widgets::filter' inherits-from='widget'>
        <compound type-name='filter_entry' name='all_filter'/>
        <stl-vector type-name='filter_entry' name='filters'/>
        <int32_t name='filter_idx'/>
        <stl-weak-ptr type-name='widget_container' name='container_parent'/>
        <virtual-methods>
            <vmethod name='set_filtered'> <int32_t name='idx'/> </vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='indiv_filter' original-name='widgets::multifilter::indiv_filter' inherits-from='widget_filter'/>

    <class-type type-name='multifilter' original-name='widgets::multifilter' inherits-from='widget'>
        <stl-vector name='filters'>
            <stl-shared-ptr type-name='indiv_filter'/>
        </stl-vector>
        <stl-weak-ptr type-name='widget_container' name='container_parent'/>
    </class-type>

    <class-type type-name='widget_interface_main_button' original-name='widgets::interface_main_button' inherits-from='widget'>
        <int32_t name='which_button'/>
    </class-type>

    <class-type type-name='widget_interface_small_button' original-name='widgets::interface_small_button' inherits-from='widget'>
        <int32_t name='which_button'/>
    </class-type>

    <class-type type-name='widget_interface_pets_livestock_button' original-name='widgets::interface_pets_livestock_button' inherits-from='widget'>
        <int32_t name='which_button'/>
    </class-type>

    <class-type type-name='widget_better_button' original-name='widgets::better_button' inherits-from='widget'>
        <stl-function name='display_string'> <stl-string/> </stl-function>
        <stl-function name='texpos'> <pointer type-name='int32_t'/> </stl-function>
        <stl-function name='callback'/>
        <stl-function name='check_truth'> <bool/> </stl-function>
    </class-type>

    <class-type type-name='widget_container' original-name='widgets::container' inherits-from='widget'>
        <stl-map name='children_by_name' comment='std::map&lt;std::string,std::shared_ptr&lt;widget&gt;&gt;'/>
        <stl-vector name='children'>
            <stl-shared-ptr type-name='widget'/>
        </stl-vector>
    </class-type>

    <class-type type-name='widget_stack' original-name='widgets::widget_stack' inherits-from='widget_container'>
        <bool name='do_pop'/>
        <stl-shared-ptr type-name='widget' name='deferred_replacement'/>
    </class-type>

    <class-type type-name='widget_rows_container' original-name='widgets::rows_container' inherits-from='widget_container'>
        <int32_t name='padding'/>
    </class-type>

    <class-type type-name='widget_columns_container' original-name='widgets::columns_container' inherits-from='widget_container'>
        <int32_t name='padding'/>
    </class-type>

    <class-type type-name='widget_tabs' original-name='widgets::tabs' inherits-from='widget_container'>
        <size_t name='cur_idx'/>
        <stl-vector name='tab_labels' type-name='stl-string'/>
        <stl-vector name='rows' comment='actually std::pair of size_t, size_t'/>
        <enum name='tab_type'> bay12: TabType
            <enum-item name='DEFAULT'/>
            <enum-item name='SHORT'/>
            <enum-item name='SHORT_SUB'/>
            <enum-item name='SHORT_SUBSUB'/>
        </enum>
    </class-type>

    <class-type type-name='widget_scroll_rows' original-name='widgets::scroll_rows' inherits-from='widget_rows_container'>
        <int32_t name='scroll'/>
        <int32_t name='num_visible'/>
        <bool name='scrolling'/>
        <compound type-name='scrollbarst' name='scrollbar'/>
        <int8_t name='scrollbar_display_flags'/>
    </class-type>

    <class-type type-name='widget_radio_rows' original-name='widgets::radio_rows' inherits-from='widget'>
        <pointer type-name='widget' name='selected'/>
        <int32_t name='selected_idx' init-value='0'/>
        <compound type-name='widget_scroll_rows' name='rows'/>
        <stl-map name='select_callback' comment='std::map&lt;size_t, std::function&lt;void(widget *)&gt;&gt;'/>
    </class-type>

    <class-type type-name='widget_table' original-name='widgets::table' inherits-from='widget_container'>
        <stl-shared-ptr type-name='widget_columns_container' name='labels'/>
        <stl-shared-ptr type-name='widget_scroll_rows' name='entries'/>
        <stl-shared-ptr type-name='widget' name='key_display'/>
        <int32_t name='key_row'/>
        <int32_t name='key_col'/>
        <bool name='keyboard_controlled' init-value='true'/>
    </class-type>

    <class-type type-name='widget_params_container' original-name='widgets::params_container' inherits-from='widget_container'>
        <stl-shared-ptr type-name='widget_text' name='text'/>
        <stl-shared-ptr type-name='world_gen_param_valuest' name='param'/>
    </class-type>

    <class-type type-name='widget_report_popup' original-name='widgets::report_popup' inherits-from='widget'>
        <int32_t name='unid'/>
        <int32_t name='unid_cached'/>
        <int16_t name='uac'/>
        <stl-shared-ptr type-name='widget_scroll_rows' name='texts'/>
        <stl-shared-ptr type-name='widget_better_button' name='pause_button'/>
        <stl-shared-ptr type-name='widget_text_multiline' name='explanation'/>
        <bool name='pause_on_new'/>
        <size_t name='last_length'/>
    </class-type>

    <class-type type-name='widget_recenter_button' original-name='widgets::recenter_button' inherits-from='widget'>
        <int16_t name='x'/>
        <int16_t name='y'/>
        <int16_t name='z'/>
    </class-type>

    <class-type type-name='widget_sheet_button' original-name='widgets::sheet_button' inherits-from='widget'>
        <virtual-methods>
            <vmethod name='set_up_tooltip'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='widget_unit_sheet_button' original-name='widgets::unit_sheet_button' inherits-from='widget_sheet_button'>
        <int32_t name='unid'/>
    </class-type>

    <class-type type-name='widget_item_sheet_button' original-name='widgets::item_sheet_button' inherits-from='widget_sheet_button'>
        <int32_t name='itid'/>
    </class-type>

    <class-type type-name='widget_job_details_button' original-name='widgets::job_details_button' inherits-from='widget'>
        <pointer name='jb'/>
        <int32_t name='context'/>
    </class-type>

    <enum-type type-name='unit_list_options'> bay12: unit_list_options
        <enum-item name='NONE'/>
        <enum-item name='PORTRAIT'/>
        <enum-item name='NAME_PROF'/>
        <enum-item name='RECENTER'/>
        <enum-item name='SHEET'/>
        <enum-item name='CUR_JOB'/>
        <enum-item name='ACTIVITY_DETAILS'/>
        <enum-item name='HAPPINESS'/>
        <enum-item name='SPECIALIZED'/>
        <enum-item name='WORK_DETAILS'/>
        <enum-item name='SKILLS'/>
        <enum-item name='SELECTED'/>
        <enum-item name='SHOW_GENDER'/>
        <enum-item name='CUSTOM_BUILD'/>
        <enum-item name='FORCE_JOB_WIDTH'/>
        <enum-item name='ACTIVATE_ON_CURSOR'/>
    </enum-type>

    <bitfield-type type-name='unit_list_flag' base-type='uint8_t'> bay12: UNIT_LIST_FLAG_*
        <flag-bit name='show_gender'/>
        <flag-bit name='custom_build'/>
        <flag-bit name='force_job_width'/>
        <flag-bit name='activate_on_cursor'/>
    </bitfield-type>

    <bitfield-type type-name='unit_list_sort_flag'>
        <flag-bit name='NEEDS_RESORTED'/>
    </bitfield-type>

    <class-type type-name='widget_unit_portrait' original-name='widgets::unit_portrait' inherits-from='widget'>
        <pointer name='u' type-name='unit'/>
    </class-type>

    <class-type type-name='widget_creature_portrait' original-name='widgets::creature_portrait' inherits-from='widget'>
        <int16_t name='race'/>
        <int16_t name='ccaste'/>
    </class-type>

    <class-type type-name='widget_item_portrait' original-name='widgets::item_portrait' inherits-from='widget'>
        <pointer name='i' type-name='item'/>
    </class-type>

    <class-type type-name='widget_unit_name' original-name='widgets::unit_name' inherits-from='widget'>
        <pointer name='u' type-name='unit'/>
        <bool name='show_gender'/>
        <bool name='show_profession'/>
        <bool name='one_line_only'/>
    </class-type>

    <class-type type-name='widget_item_name' original-name='widgets::item_name' inherits-from='widget'>
        <pointer name='it' type-name='item'/>
    </class-type>

    <struct-type type-name='sort_entry'>
        <stl-function type-name='bool' name='fn' comment='std::function&lt;bool(const Entry &amp;,const Entry &amp;)&gt;'/>
        <stl-string name='ident'/>
    </struct-type>

    <struct-type type-name='item_or_unit'>
        <pointer/>
        <bool/>
    </struct-type>

    <class-type type-name='widget_unit_list' original-name='widgets::unit_list' inherits-from='widget_container'>
        <stl-vector name='deferred_units_builds'>
            <stl-weak-ptr type-name='widget_container'/>
            <pointer/>
            <bool/>
        </stl-vector>
        <stl-shared-ptr type-name='widget' name='no_unit_entry'/>
        <stl-vector type-name='sort_entry' name='sorting_by' comment='std::vector&lt;sort_entry&lt;item_or_unit&gt;&gt;'/>
        <stl-vector name='always_sorting_by'> <stl-function type-name='bool'/> </stl-vector>
        <stl-vector name='partitions'> <stl-function type-name='bool'/> </stl-vector>
        <stl-unordered-map name='ascending_sort'/> std::unordered_map&lt;std::string,bool&gt;
        <bitfield type-name='unit_list_sort_flag' name='sort_flags' base-type='uint8_t'/>
        <bitfield type-name='unit_list_flag' name='flags' base-type='uint8_t'/>
        <stl-vector name='filter_func'> <stl-function type-name='bool'/> </stl-vector>
        <stl-vector name='preprocess_unit_func'> <stl-function/> </stl-vector>
        <stl-vector name='postprocess_unit_func'> <stl-function/> </stl-vector>
        <stl-vector name='preprocess_item_func'> <stl-function/> </stl-vector>
        <stl-vector name='postprocess_item_func'> <stl-function/> </stl-vector>
        <stl-function name='close_callback'/>
        <stl-vector type-name='unit_list_options' name='options'/>
        <stl-vector type-name='item_or_unit' name='entry_list'/>
        <stl-unordered-map name='selected' comment='std::unordered_set&lt;void *&gt;'/>
        <stl-unordered-map type-name='stl-string' name='job_sort_str' comment='std::unordered_map&lt;void *,std::string&gt;'/>
        <int32_t name='cursor_idx'/>
        <stl-function name='is_selected' comment='std::function&lt;bool(item_or_unit)&gt;'/>
        <stl-vector name='on_select_change'>
            <stl-function comment='std::function&lt;void(item_or_unit,bool)&gt;'/>
        </stl-vector>
        <enum type-name='unit_list_options' name='skill_type'/>
        <stl-mutex name='mtx'/>
        <static-array type-name='int32_t' count='149' index-enum='job_skill' name='skills'/>
        <stl-string name='filter_str'/>
    </class-type>

    <class-type type-name='widget_sort_widget' original-name='widgets::sort_widget' inherits-from='widget' comment='template&lt;T, Entry&gt;'>
        <bool name='display_text'/>
        <pointer name='list' comment='T*'/>
        <stl-function type-name='bool' name='sort_fun'/> std::function&lt;bool(const Entry &amp;, const Entry &amp;)&gt;
    </class-type>

    <class-type type-name='widget_unit_sort_widget' inherits-from='widget_sort_widget' comment='template specialization using unit_list + unit_list::item_or_unit'/>

    <class-type type-name='MacroScreenLoad' inherits-from='viewscreen'>
        <compound name='menu' type-name='widget_menu'/>
        <int32_t name='width'/>
        <int32_t name='height'/>
    </class-type>

    <class-type type-name='MacroScreenSave' inherits-from='viewscreen'>
        <compound name='id' type-name='widget_textbox'/>
    </class-type>

    <struct-type type-name='shared_world_headerst'>
        <uint32_t name='id1' comment='based on tick at start of game'/>
        <uint32_t name='id2' comment='based on tick at creation time'/>
        <stl-string name='world_name'/>
        <stl-string name='timeline_name'/>
        <stl-string name='manual_name'/>
        <enum base-type='int32_t' name='save_type'> bay12: SaveTypeType
            <enum-item name='NONE' value='-1'/>
            <enum-item name='ACTIVE'/>
            <enum-item name='INACTIVE'/>
            <enum-item name='MANUAL'/>
            <enum-item name='AUTO'/>
        </enum>
        <int32_t name='year'/>
        <int32_t name='season_count'/>
        <int32_t name='forts_played'/>
        <int32_t name='advs_played'/>
    </struct-type>

    <enum-type type-name='region_permission_type'> bay12: RegionPermission
        <enum-item name='ADVENTURE_MAIN'/>
        <enum-item name='UNUSED11'/> used as index-enum, so name all entries
        <enum-item name='UNUSED12'/>
        <enum-item name='DWARF_MAIN'/>
        <enum-item name='UNUSED0'/>
        <enum-item name='UNUSED1'/>
        <enum-item name='UNUSED2'/>
        <enum-item name='UNUSED3'/>
        <enum-item name='UNUSED4'/>
        <enum-item name='UNUSED5'/>
        <enum-item name='UNUSED6'/>
        <enum-item name='UNUSED7'/>
        <enum-item name='UNUSED8'/>
        <enum-item name='UNUSED9'/>
        <enum-item name='UNUSED10'/>
    </enum-type>

    <struct-type type-name='region_headerst'>
        <compound type-name='language_name' name='name'/>
        <stl-string name='display_name'/>
        <static-array name='permission' count='15' type-name='int8_t' index-enum='region_permission_type'/>
        <compound name='last_id' comment='when loading, DF sets *_next_id to these fields plus 1'> not a compound
            <int32_t name='unit'/>
            <int32_t name='soul'/>
            <int32_t name='item'/>
            <int32_t name='entity'/>
            <int32_t name='nemesis'/>
            <int32_t name='artifact'/>
            <int32_t name='building'/>
            <int32_t name='machine'/>
            <int32_t name='hist_figure'/>
            <int32_t name='hist_event'/>
            <int32_t name='hist_event_collection'/>
            <int32_t name='unit_chunk'/>
            <int32_t name='art_image_chunk'/>
            <int32_t name='task'/>
            <int32_t name='squad'/>
            <int32_t name='formation'/>
            <int32_t name='activity'/>
            <int32_t name='interaction_instance'/>
            <int32_t name='written_content'/>
            <int32_t name='identity'/>
            <int32_t name='incident'/>
            <int32_t name='crime'/>
            <int32_t name='vehicle'/>
            <int32_t name='army'/>
            <int32_t name='army_controller'/>
            <int32_t name='army_tracking_info'/>
            <int32_t name='cultural_identity'/>
            <int32_t name='agreement'/>
            <int32_t name='poetic_form' since='v0.42.01'/>
            <int32_t name='musical_form' since='v0.42.01'/>
            <int32_t name='dance_form' since='v0.42.01'/>
            <int32_t name='scale' since='v0.42.01'/>
            <int32_t name='rhythm' since='v0.42.01'/>
            <int32_t name='occupation' since='v0.42.01'/>
            <int32_t name='belief_system' since='v0.44.01'/>
            <int32_t name='image_set' since='v0.47.01'/>
            <int32_t name='divination_set' since='v0.47.01'/>
        </compound>
        <compound type-name='shared_world_headerst' name='world_header'/>
        <stl-string name='filename_noext'/>
    </struct-type>

    <class-type type-name='viewscreen_adopt_regionst' inherits-from='viewscreen'>
        <compound type-name='file_compressorst' name='compressor'/>
        <enum base-type='int32_t' name='cur_step'> bay12: AdoptRegionStageType
            <enum-item name='OpeningFile'/>
            <enum-item name='ProcessingRawData'/>
            <enum-item name='AllocatingSpace'/>
            <enum-item name='LoadingItems'/>
            <enum-item name='LoadingBuildings'/>
            <enum-item name='LoadingEntities'/>
            <enum-item name='LoadingCoinInformation'/>
            <enum-item name='LoadingMapData'/>
            <enum-item name='LoadingCivilizedPopulations'/>
            <enum-item name='LoadingHistory'/>
            <enum-item name='LoadingParameters'/>
            <enum-item name='LoadingArtifacts'/>
            <enum-item name='LoadingActiveHistoricalFigures'/>
            <enum-item name='LoadingSquads'/>
            <enum-item name='LoadingFormations'/>
            <enum-item name='LoadingActivities'/>
            <enum-item name='LoadingInteractions'/>
            <enum-item name='LoadingWrittenContent'/>
            <enum-item name='LoadingIdentities'/>
            <enum-item name='LoadingIncidents'/>
            <enum-item name='LoadingCrimes'/>
            <enum-item name='LoadingVehicles'/>
            <enum-item name='LoadingArmies'/>
            <enum-item name='LoadingArmyControllers'/>
            <enum-item name='LoadingTrackingInformation'/>
            <enum-item name='LoadingCulturalIdentities'/>
            <enum-item name='LoadingAgreements'/>
            <enum-item name='LoadingArtForms'/>
            <enum-item name='LoadingOccupations'/>
            <enum-item name='LoadingBeliefSystems'/>
            <enum-item name='LoadingImageSets'/>
            <enum-item name='LoadingDivinationSets'/>
            <enum-item name='ClosingFile'/>
            <enum-item name='RebuildingTemporaryInformation'/>
            <enum-item name='PreparingGame'/>
            <enum-item name='Failed'/>
        </enum>
        <enum type-name='save_version' name='save_version'/>
        <compound type-name='region_headerst' name='cur_save'/>
        <compound type-name='region_object_datast' name='rod'/>
        <int32_t name='progress' comment='0..35'/>
    </class-type>

    <enum-type type-name='embark_finder_option' base-type='int16_t'> bay12: FindSiteParamType
        <enum-item name='DimensionX'/>
        <enum-item name='DimensionY'/>
        <enum-item name='Savagery'/>
        <enum-item name='Spirit'/>
        <enum-item name='Elevation'/>
        <enum-item name='Temperature'/>
        <enum-item name='Rain'/>
        <enum-item name='Drainage'/>
        <enum-item name='FluxStone'/>
        <enum-item name='AquiferLight'/>
        <enum-item name='AquiferHeavy'/>
        <enum-item name='River'/>
        <enum-item name='UndergroundRiver'/>
        <enum-item name='UndergroundPool'/>
        <enum-item name='MagmaPool'/>
        <enum-item name='MagmaPipe'/>
        <enum-item name='Chasm'/>
        <enum-item name='BottomlessPit'/>
        <enum-item name='OtherFeatures'/>
        <enum-item name='Soil'/>
        <enum-item name='Clay'/>
        <enum-item name='Sand'/>
    </enum-type>

    <struct-type type-name='embark_location' original-name='starter_infost'>
        <compound name='region_pos' type-name='coord2d'/>

        <int16_t name="reclaim_site" ref-target='world_site'/>
        <int16_t name="reclaim_idx"/>
        <compound name='embark_pos_min' type-name='coord2d'/>
        <compound name='embark_pos_max' type-name='coord2d'/>
    </struct-type>

    <enum-type type-name='embark_neighbor_state_type' base-type='int32_t'> bay12: EmbarkNeighborStateType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='WAR'/>
        <enum-item name='HOSTILE'/>
        <enum-item name='NO_COMM'/>
        <enum-item name='NO_TRADE'/>
        <enum-item name='NORMAL'/>
    </enum-type>

    <class-type type-name='viewscreen_choose_start_sitest' inherits-from='viewscreen'>
        <enum name='page'> bay12: ChooseStartSiteViewMode, no base type!
            <enum-item name='Biome'/>
            <enum-item name='Neighbors'/>
            <enum-item name='Civilization'/>
            <enum-item name='Elevation'/>
            <enum-item name='Cliffs'/>
            <enum-item name='Reclaim'/>
            <enum-item name='ReclaimDetails'/>
            <enum-item name='Find'/>
            <enum-item name='Notes'/>
        </enum>

        <compound name='location' type-name='embark_location'/>

        <int32_t name='animating_quick_start_timer'/>
        <int32_t name='setting_up_map_timer'/>

        <int32_t name='region_cent_x'/>
        <int32_t name='region_cent_y'/>
        <bool name='mouse_scrolling_map'/>
        <int32_t name='mouse_anchor_mx'/>
        <int32_t name='mouse_anchor_my'/>
        <int32_t name='mouse_anchor_pmx'/>
        <int32_t name='mouse_anchor_pmy'/>

        <int32_t name='neighbor_hover_ax'/>
        <int32_t name='neighbor_hover_ay'/>
        <int32_t name='neighbor_hover_mm_sx'/>
        <int32_t name='neighbor_hover_mm_sy'/>
        <int32_t name='neighbor_hover_mm_ex'/>
        <int32_t name='neighbor_hover_mm_ey'/>
        <stl-vector pointer-type='historical_entity' name='def_candidate'/>
        <stl-vector pointer-type='world_site' name='def_candidate_nearst'/>
        <stl-vector type-name='int32_t' name='def_candidate_mindist'/>
        <stl-vector type-name='embark_neighbor_state_type' name='def_candidate_state'/>

        <bool name='zoomed_in'/>
        <int32_t name='zoom_cent_x'/>
        <int32_t name='zoom_cent_y'/>
        <bool name='show_cliffs'/>
        <bool name='show_elevation'/>

        <bool name='choosing_civilization'/>
        <int32_t name='scroll_position_civ'/>
        <bool name='scrolling_civ'/>

        <bool name='choosing_reclaim'/>
        <int32_t name='scroll_position_reclaim'/>
        <bool name='scrolling_reclaim'/>

        <bool name='choosing_embark'/>
        <int32_t name='embark_dx'/>
        <int32_t name='embark_dy'/>
        <int32_t name='warn_mm_startx'/>
        <int32_t name='warn_mm_endx'/>
        <int32_t name='warn_mm_starty'/>
        <int32_t name='warn_mm_endy'/>

        <bool name='doing_site_finder'/>
        <int32_t name='scroll_position_param'/>
        <bool name='scrolling_param'/>

        <int32_t name="biome_idx"/>
        <bool name="biome_highlighted"/>

        <bitfield name='warn_flags' base-type='int16_t'> bay12: WARN_FLAG_*
            <flag-bit name='GENERIC'/>
            <flag-bit name='WATER_TABLE'/>
            <flag-bit name='HEAVY_WATER_TABLE'/>
            <flag-bit name='SALT_WATER'/>
            <flag-bit name='LARGE'/>
            <flag-bit name='SMALL'/>
            <flag-bit name='DEAD_CIV'/>
            <flag-bit name='SAVAGE'/>
            <flag-bit name='EVIL'/>
            <flag-bit name='UNDEAD'/>
        </bitfield>

        <int32_t name='selected_reclaim'/>
        <int32_t name='selected_civ'/>
        <stl-vector pointer-type='historical_entity' name='start_civ'/>
        <stl-vector type-name='int32_t' name='start_civ_nem_num'/>
        <stl-vector type-name='int32_t' name='start_civ_entpop_num'/>
        <stl-vector type-name='int32_t' name='start_civ_site_num'/>
        <compound name='reclaim_detail_box' type-name='curses_text_boxst'/>
        <pointer name="reclaim_detail_he" type-name="history_event" has-bad-pointers='true' since='v0.40.01'/>
        <pointer name="reclaim_detail_she" type-name="history_event" has-bad-pointers='true' since='v0.40.01'/>
        <int32_t name="reclaim_detail_box_last_processing_dimx" since='v0.40.01'/>

        <int32_t name="find_cur_best_value"/>
        <int32_t name="find_block_x"/>
        <int32_t name="find_block_y"/>
        <int32_t name="find_block_dx" init-value='-1' comment='to world width / 16'/>
        <int32_t name="find_block_dy" comment='to world height / 16'/>
        <int32_t name="find_select" refers-to='$$._parent.enabled_options[$]'/>
        <static-array type-name='int32_t' name="find_param"
                      count="22" index-enum='embark_finder_option'/>
        <static-array type-name='bool' name="find_missed_param"
                      count="22" index-enum='embark_finder_option'/>

        <stl-vector type-name='int16_t' name='find_missed_metal_ore'/>
        <stl-vector type-name='int32_t' name='find_param_list'/>
        <stl-vector type-name='int16_t' name='find_metal_ore'/>
        <stl-vector type-name='int16_t' name='skip_metal_ore'/>

        <enum name='find_results' base-type='int16_t'> not a real enum
            <enum-item name='None' value='-1'/>
            <enum-item name='NoResult'/>
            <enum-item name='Partial'/>
            <enum-item name='Suitable'/>
        </enum>

        <int16_t name='find_ax'/>
        <int16_t name='find_ay'/>
        <int16_t name='find_mm_sx'/>
        <int16_t name='find_mm_ex'/>
        <int16_t name='find_mm_sy'/>
        <int16_t name='find_mm_ey'/>

        <stl-vector name="note_index" type-name='int32_t' refers-to='$global.world.world_data.embark_notes[$]'/>
        <compound name="text_box" type-name='curses_text_boxst'/>
        <bool name='notes_entering_text'/>
        <int32_t name='notes_list_select'/>
        <int16_t name="notes_cur_sym"/>
        <int16_t name="notes_sym_select_1"/>
        <int16_t name="notes_sym_select_2"/>
        <int16_t name="notes_sym_select_3"/>
        <int32_t name="notes_selected_note"/>
    </class-type>

    <class-type type-name='viewscreen_dungeonmodest' inherits-from='viewscreen'>
        <int32_t name="x"/>
        <int32_t name="y"/>
        <int32_t name="z"/>
    </class-type>

    <class-type type-name='viewscreen_dwarfmodest' inherits-from='viewscreen'>
        <int8_t name='shown_site_name'/> display site name next frame

        <int16_t name='jeweler_mat_count'/> jewelers workshop orders
        <stl-vector type-name='int32_t' name='jeweler_cutgem'  index-refers-to='(material-by-id 0 $)'/> number of free items for job
        <stl-vector type-name='int32_t' name='jeweler_encrust' index-refers-to='(material-by-id 0 $)'/> index list +3 (green/clear/crystal glass)

        <stl-vector name='unit_labors_sidemenu'> For sidemenu unit/prefs/labor
            <enum type-name='unit_labor' base-type='int32_t'/> When negative, labor category
        </stl-vector>
        <stl-vector name='unit_labors_sidemenu_uplevel'>
            <enum type-name='unit_labor' base-type='int32_t'/>
        </stl-vector>
        <int32_t name='unit_labors_sidemenu_uplevel_idx'/>
        <int8_t name='sideSubmenu'/> determine if ESC is Done or Back

        <int8_t name='keyRepeat'/>

        <stl-vector name='trained_animals' pointer-type='unit'/>
        <int32_t name='trained_animal_idx'/>
        <int32_t name='number_assigned_hunt'/> for current unit
        <int32_t name='number_assigned_war'/>
    </class-type>

    <class-type type-name='viewscreen_export_regionst' inherits-from='viewscreen'>
        <bool name='play_now'/>
        <enum base-type='int32_t' name='state'> bay12: ExportRegionStageType
            <enum-item name='Initializing'/>
            <enum-item name='PreliminaryCleaning'/>
            <enum-item name='OffloadingUnits'/>
            <enum-item name='OffloadingArtImages'/>
            <enum-item name='OffloadingFile'/>
            <enum-item name='CharacterizingRawData'/>
            <enum-item name='SortingWorldInformation'/>
            <enum-item name='AllocatingSpace'/>
            <enum-item name='SavingItems'/>
            <enum-item name='SavingBuildings'/>
            <enum-item name='SavingEntities'/>
            <enum-item name='SavingCoinInformation'/>
            <enum-item name='SavingMapData'/>
            <enum-item name='SavingCivilizedPopulations'/>
            <enum-item name='SavingHistory'/>
            <enum-item name='SavingParameters'/>
            <enum-item name='SavingArtifacts'/>
            <enum-item name='SavingActiveHistoricalFigures'/>
            <enum-item name='SavingSquads'/>
            <enum-item name='SavingFormations'/>
            <enum-item name='SavingActivities'/>
            <enum-item name='SavingInteractions'/>
            <enum-item name='SavingWrittenContent'/>
            <enum-item name='SavingIdentities'/>
            <enum-item name='SavingIncidents'/>
            <enum-item name='SavingCrimes'/>
            <enum-item name='SavingVehicles'/>
            <enum-item name='SavingArmies'/>
            <enum-item name='SavingArmyControllers'/>
            <enum-item name='SavingTrackingInfo'/>
            <enum-item name='SavingCulturalIdentities'/>
            <enum-item name='SavingAgreements'/>
            <enum-item name='SavingArtForms'/>
            <enum-item name='SavingOccupations'/>
            <enum-item name='SavingBeliefSystems'/>
            <enum-item name='SavingImageSets'/>
            <enum-item name='SavingDivinationSets'/>
            <enum-item name='ClosingFile'/>
            <enum-item name='SynchronizingFolders'/>
        </enum>
        <int32_t name='progress' comment='0..40'/>
        <compound name='units_progress' type-name='nemesis_offload'/>
        <compound type-name='file_compressorst' name='compressor'/>
        <stl-string name='folder_name'/>
        <stl-string name='timeline_name'/>
    </class-type>

    <class-type type-name='viewscreen_game_cleanerst' inherits-from='viewscreen'>
        <enum name='state'> bay12: GameClean, no base type
            <enum-item name='CleaningGameObjects'/>
            <enum-item name='CleaningStrandedObjects'/>
            <enum-item name='CleaningPlayObjects'/>
        </enum>
    </class-type>

    <class-type type-name='viewscreen_initial_prepst' inherits-from='viewscreen'>
        <int32_t name='render_count'/>
        <int32_t name='logic_step'/>
        <stl-future name='process'/>
    </class-type>

    <class-type type-name='world_gen_param_basest'>
        <stl-string name='text'/>
        <virtual-methods>
            <vmethod name='get_text'><pointer name='num' type-name='stl-string'/></vmethod>
            <vmethod ret-type='bool' name='has_string_entry'/>
            <vmethod ret-type='bool' name='nullifiable'/>
            <vmethod ret-type='bool' name='togglealble'/>
            <vmethod ret-type='bool' name='has_max_min'/>
            <vmethod ret-type='bool' name='has_increase_decrease'/>
            <vmethod ret-type='int32_t' name='get_min'/>
            <vmethod ret-type='int32_t' name='get_max'/>

            <vmethod name='set_value'><pointer name='value_str' type-name='stl-string'/></vmethod>
            <vmethod name='nullify'/>
            <vmethod name='toggle'/>
            <vmethod name='decrease'/>
            <vmethod name='increase'/>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='world_gen_param_seedst' inherits-from='world_gen_param_basest'>
        <pointer name='val_ptr' type-name='stl-string'/>
    </class-type>

    <class-type type-name='world_gen_param_valuest' inherits-from='world_gen_param_basest'>
        <stl-string name='null_text'/>
        <bool name='can_be_nullified'/>
        <stl-vector pointer-type='stl-string' name='value_text'/>
    </class-type>

    <class-type type-name='world_gen_param_charst' inherits-from='world_gen_param_valuest'>
        <pointer type-name='int8_t' name='val_ptr'/>
        <int8_t name='min'/>
        <int8_t name='max'/>
        <int8_t name='null_value'/>
        <stl-vector type-name='int8_t' name='value_val'/>
        <bool name='can_toggle'/>
    </class-type>

    <class-type type-name='world_gen_param_memberst' inherits-from='world_gen_param_valuest'>
        <pointer type-name='int32_t' name='val_ptr'/>
        <int32_t name='min'/>
        <int32_t name='max'/>
        <int32_t name='null_value'/>
        <stl-vector type-name='int32_t' name='value_val'/>
        <bool name='does_have_min_max'/>
    </class-type>

    <class-type type-name='world_gen_param_flagst' inherits-from='world_gen_param_valuest'>
        <pointer type-name='uint32_t' name='val_ptr'/>
        <uint32_t name='bit'/>
        <stl-vector type-name='uint32_t' name='value_val'/>
    </class-type>

    <class-type type-name='world_gen_param_flagarrayst' inherits-from='world_gen_param_valuest'>
        <pointer name='val_ptr'><df-flagarray/></pointer>
        <int32_t name='flag'/>
        <stl-vector type-name='int32_t' name='value_val'/>
    </class-type>

    <struct-type type-name='legend_pagest'>
        <stl-string name='header'/>
        <enum name='mode' base-type='int32_t'> bay12: LegendsModeType
            <enum-item name='NONE' value='-1'/>
            <enum-item name='MAIN'/>
            <enum-item name='HFS'/>
            <enum-item name='SITES'/>
            <enum-item name='ARTIFACTS'/>
            <enum-item name='BOOKS'/>
            <enum-item name='SUBREGIONS'/>
            <enum-item name='ENTITIES'/>
            <enum-item name='ART'/>
            <enum-item name='ABS'/>
            <enum-item name='ERA'/>
            <enum-item name='HEC'/>
            <enum-item name='MAPS'/>
            <enum-item name='FEATURE_LAYERS'/>
            <enum-item name='POPULATIONS'/>
        </enum>
        <int32_t name='index'/>
        <compound type-name='markup_text_boxst' name='text_box'/>

        <int32_t name='scroll_position_list'/>
        <bool name='scrolling_list'/>
        <pointer name='lptr'><stl-vector type-name='int32_t'/></pointer>

        <int32_t name='scroll_position_text'/>
        <bool name='scrolling_text'/>

        <stl-string name='filter_str'/>
        <bool name='entering_filter'/>
    </struct-type>

    <class-type type-name='viewscreen_legendsst' inherits-from='viewscreen'>
        <int32_t name='unhid_sum'/>
        <int32_t name='init_stage'/>
        <int32_t name='init_cur_era'/>
        <int32_t name='init_cur_era_num'/>
        <int32_t name='init_cur_era_denom'/>
        <int32_t name='init_sub_stage'/>
        <stl-vector type-name='int32_t' name='histfigs' ref-target='historical_figure'/>
        <stl-vector type-name='int32_t' name='sites' ref-target='world_site'/>
        <stl-vector type-name='int32_t' name='artifacts' ref-target='artifact_record'/>
        <stl-vector type-name='int32_t' name='codices' ref-target='written_content'/>
        <stl-vector type-name='int32_t' name='regions' ref-target='world_region'/>
        <stl-vector type-name='int32_t' name='layers' ref-target='world_underground_region'/>
        <stl-vector type-name='int32_t' name='entities' ref-target='historical_entity'/>
        <stl-vector type-name='int32_t' name='structure_sites' ref-target='world_site'/>
        <stl-vector type-name='int32_t' name='structures_indices'/> index into world_site.buildings
        <stl-vector type-name='int32_t' name='entity_population'/>

        <stl-vector type-name='int16_t' name='main_choice'/>
        <stl-vector type-name='int32_t' name='era_choice_index'/>
        <stl-vector type-name='int32_t' name='era_choice_num'/>
        <stl-vector type-name='int32_t' name='era_choice_denom'/>
        <stl-vector type-name='int32_t' name='hec_id' ref-target='history_event_collection'/>

        <bool name='showing_all_era_collections'/>

        <stl-vector name='region_snapshot' pointer-type='region_snapshotst'/>
        <int16_t name='region_view_x'/>
        <int16_t name='region_view_y'/>
        <int16_t name='region_view_mode'/>
        <int16_t name='civ_site_view'/>
        <int16_t name='region_view_snapshot_index'/>

        <stl-vector name='histfigs_filtered' type-name='int32_t' comment='index into histfigs'/>
        <stl-vector name='sites_filtered' type-name='int32_t' comment='index into sites'/>
        <stl-vector name='artifacts_filtered' type-name='int32_t' comment='index into artifacts'/>
        <stl-vector name='codices_filtered' type-name='int32_t'  comment='index into codices'/>
        <stl-vector name='regions_filtered' type-name='int32_t' comment='index into regions'/>
        <stl-vector name='layers_filtered' type-name='int32_t' comment='index into layers'/>
        <stl-vector name='entity_populations_filtered' type-name='int32_t'/>
        <stl-vector name='entities_filtered' type-name='int32_t' comment='index into entities'/>
        <stl-vector name='structures_filtered' type-name='int32_t' comment='index into structures'/>

        <int32_t name='total_codices'/>
        <int32_t name='total_artifacts'/>

        <stl-vector pointer-type='legend_pagest' name='page'/>
        <int32_t name='active_page_index'/>
        <int32_t name='page_scroll'/>
        <stl-future name='xml_dump_future'/>
        <bool name='dumping_xml'/>
    </class-type>

    <struct-type type-name='savegame_headerst'>
        almost the same, but not quite the same, as region_headerst's list
        <int32_t name='max_unit_id'/>
        <int32_t name='max_soul_id'/>
        <int32_t name='max_item_id'/>
        <int32_t name='max_civ_id'/>
        <int32_t name='max_nem_id'/>
        <int32_t name='max_artifact_id'/>
        <int32_t name='max_job_id'/>
        <int32_t name='max_schedule_id'/>
        <int32_t name='max_proj_id'/>
        <int32_t name='max_building_id'/>
        <int32_t name='max_machine_id'/>
        <int32_t name='max_flow_guide_id'/>
        <int32_t name='max_histfig_id'/>
        <int32_t name='max_histevent_id'/>
        <int32_t name='max_histeventcol_id'/>
        <int32_t name='max_unitchunk_id'/>
        <int32_t name='max_art_imagechunk_id'/>
        <int32_t name='max_task_id'/>
        <int32_t name='max_squad_id'/>
        <int32_t name='max_formation_id'/>
        <int32_t name='max_activity_id'/>
        <int32_t name='max_interaction_instance_id'/>
        <int32_t name='max_written_content_id'/>
        <int32_t name='max_identity_id'/>
        <int32_t name='max_incident_id'/>
        <int32_t name='max_crime_id'/>
        <int32_t name='max_vehicle_id'/>
        <int32_t name='max_army_id'/>
        <int32_t name='max_army_controller_id'/>
        <int32_t name='max_army_tracking_info_id'/>
        <int32_t name='max_cultural_identity_id'/>
        <int32_t name='max_agreement_id'/>
        <int32_t name='max_poetic_form_id'/>
        <int32_t name='max_musical_form_id'/>
        <int32_t name='max_dance_form_id'/>
        <int32_t name='max_scale_id'/>
        <int32_t name='max_rhythm_id'/>
        <int32_t name='max_occupation_id'/>
        <int32_t name='max_belief_system_id'/>
        <int32_t name='max_image_set_id'/>
        <int32_t name='max_divination_set_id'/>

        <enum type-name='game_type' name='gametype' base-type='int16_t'/>
        <stl-string name='fort_name'/>
        <stl-string name='world_name'/>
        <int32_t name='year'/>

        <compound type-name='shared_world_headerst' name='world_header'/>

        <stl-string name='filename_noext'/>
    </struct-type>

    <struct-type type-name='random_object_batchst'>
        <int32_t name='start_inorganic_number'/>
        <int32_t name='end_inorganic_number'/>
        <int32_t name='start_plant_number'/>
        <int32_t name='end_plant_number'/>
        <int32_t name='start_item_number'/>
        <int32_t name='end_item_number'/>
        <int32_t name='start_creature_number'/>
        <int32_t name='end_creature_number'/>
        <int32_t name='start_entity_number'/>
        <int32_t name='end_entity_number'/>
        <int32_t name='start_reaction_number'/>
        <int32_t name='end_reaction_number'/>
        <int32_t name='start_interaction_number'/>
        <int32_t name='end_interaction_number'/>
        <int32_t name='start_language_translation_number'/>
        <int32_t name='end_language_translation_number'/>
    </struct-type>

    <struct-type type-name='region_object_datast'>
        <stl-vector pointer-type='random_object_batchst' name='batch'/>
        <stl-vector name='custom_inorganic'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_plants'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_items'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_creatures'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_entities'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_reactions'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_interactions'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='generated_languages'>
            <pointer>
                <stl-vector pointer-type='stl-string' name='raws'/>
            </pointer>
        </stl-vector>
        <stl-vector name='inorganics' pointer-type='stl-string'/>
        <stl-vector name='plants' pointer-type='stl-string'/>
        <stl-vector name='bodies' pointer-type='stl-string'/>
        <stl-vector name='bodyglosses' pointer-type='stl-string'/>
        <stl-vector name='creatures' pointer-type='stl-string'/>
        <stl-vector name='items' pointer-type='stl-string'/>
        <stl-vector name='buildings' pointer-type='stl-string'/>
        <stl-vector name='entities' pointer-type='stl-string'/>
        <stl-vector name='words' pointer-type='stl-string'/>
        <stl-vector name='symbols' pointer-type='stl-string'/>
        <stl-vector name='translations' pointer-type='stl-string'/>
        <stl-vector name='colors' pointer-type='stl-string'/>
        <stl-vector name='shapes' pointer-type='stl-string'/>
        <stl-vector name='patterns' pointer-type='stl-string'/>
        <stl-vector name='reactions' pointer-type='stl-string'/>
        <stl-vector name='material_templates' pointer-type='stl-string'/>
        <stl-vector name='tissue_templates' pointer-type='stl-string'/>
        <stl-vector name='body_detail_plans' pointer-type='stl-string'/>
        <stl-vector name='creature_variations' pointer-type='stl-string'/>
        <stl-vector name='interactions' pointer-type='stl-string'/>
        <stl-vector name='text_sets' pointer-type='stl-string'/>
        <stl-vector name='musics' pointer-type='stl-string'/>
        <stl-vector name='sounds' pointer-type='stl-string'/>
        <stl-vector name='mod_ids' pointer-type='stl-string'/>
        <stl-vector name='mod_versions' type-name='int32_t'/>
        <stl-vector name='mod_compatible_versions' type-name='int32_t'/>
        <stl-vector name='mod_folder_paths' pointer-type='stl-string'/>
        <stl-vector name='mod_names' pointer-type='stl-string'/>
        <stl-vector name='mod_display_versions' pointer-type='stl-string'/>
    </struct-type>

    <class-type type-name='viewscreen_loadgamest' inherits-from='viewscreen'>
        <enum name='cur_step' base-type='int32_t'> bay12: LoadGameStageType
            <enum-item name='OpeningFile'/>
            <enum-item name='ProcessingRawData'/>
            <enum-item name='AllocatingSpace'/>
            <enum-item name='LoadingItems'/>
            <enum-item name='LoadingUnits'/>
            <enum-item name='LoadingJobs'/>
            <enum-item name='LoadingSchedules'/>
            <enum-item name='LoadingProjectiles'/>
            <enum-item name='LoadingBuildings'/>
            <enum-item name='LoadingMachines'/>
            <enum-item name='LoadingFlowGuides'/>
            <enum-item name='LoadingEffects'/>
            <enum-item name='LoadingEntities'/>
            <enum-item name='LoadingLocalAnimalPopulations'/>
            <enum-item name='LoadingEvents'/>
            <enum-item name='LoadingMandates'/>
            <enum-item name='LoadingWorkQuotas'/>
            <enum-item name='LoadingWorldEvents'/>
            <enum-item name='LoadingCoinInformation'/>
            <enum-item name='LoadingSquads'/>
            <enum-item name='LoadingFormations'/>
            <enum-item name='LoadingActivities'/>
            <enum-item name='LoadingInteractions'/>
            <enum-item name='LoadingWrittenContent'/>
            <enum-item name='LoadingIdentities'/>
            <enum-item name='LoadingIncidents'/>
            <enum-item name='LoadingCrimes'/>
            <enum-item name='LoadingVehicles'/>
            <enum-item name='LoadingArmies'/>
            <enum-item name='LoadingArmyControllers'/>
            <enum-item name='LoadingTrackingInformation'/>
            <enum-item name='LoadingCulturalIdentities'/>
            <enum-item name='LoadingAgreements'/>
            <enum-item name='LoadingArtForms'/>
            <enum-item name='LoadingOccupations'/>
            <enum-item name='LoadingBeliefSystems'/>
            <enum-item name='LoadingImageSets'/>
            <enum-item name='LoadingDivinationSets'/>
            <enum-item name='LoadingAnnouncements'/>
            <enum-item name='LoadingFortressInformation'/>
            <enum-item name='LoadingWorldInformation'/>
            <enum-item name='LoadingArtifacts'/>
            <enum-item name='LoadingActiveHistoricalFigures'/>
            <enum-item name='LoadingAdventure'/>
            <enum-item name='LoadingGeneralInformation'/>
            <enum-item name='ClosingFile'/>
            <enum-item name='RebuildingTemporaryInformation'/>
            <enum-item name='RebuildingMoreTemporaryInformation'/>
            <enum-item name='PreparingGameScreen'/>
            <enum-item name='HandlingCompatibilityIssues'/>
            <enum-item name='Finishing'/>
            <enum-item name='Failed'/>
        </enum>
        <int32_t name='progress' since='v0.40.01'/>
        <compound type-name='file_compressorst' name='compressor'/>
        <compound type-name='region_object_datast' name='rod'/>
        <int32_t name='save_version'/>
        <compound name='cur_save' type-name='savegame_headerst'/>
    </class-type>

    <struct-type type-name='worldgen_parms' original-name='world_gen_paramst'>
        <stl-string name='title'/>
        <stl-string name='seed' since='v0.34.01'/>
        <stl-string name='history_seed' since='v0.34.01'/>
        <stl-string name='name_seed' since='v0.34.01'/>
        <stl-string name='creature_seed' since='v0.34.01'/>
        <int32_t name='dim_x'/>
        <int32_t name='dim_y'/>
        <stl-string name='custom_name'/>
        <bool name='has_seed'/>
        <bool name='has_history_seed'/>
        <bool name='has_name_seed'/>
        <bool name='has_creature_seed'/>
        <int32_t name='embark_points'/>
        <int32_t name='peak_number_min'/>
        <int32_t name='partial_ocean_edge_min'/>
        <int32_t name='complete_ocean_edge_min'/>
        <int32_t name='volcano_min'/>
        <static-array name='region_counts' count='3'>
            <static-array type-name='int32_t' count='10' index-enum='world_region_type'/>
        </static-array>
        <static-array type-name='int32_t' name='river_mins' count='2'/>
        <int32_t name='subregion_max'/>
        <int32_t name='cavern_layer_count'/>
        <int32_t name='cavern_layer_openness_min'/>
        <int32_t name='cavern_layer_openness_max'/>
        <int32_t name='cavern_layer_passage_density_min'/>
        <int32_t name='cavern_layer_passage_density_max'/>
        <int32_t name='cavern_layer_water_min'/>
        <int32_t name='cavern_layer_water_max'/>
        <bool name='have_bottom_layer_1'/>
        <bool name='have_bottom_layer_2'/>
        <int32_t name='levels_above_ground'/>
        <int32_t name='levels_above_layer_1'/>
        <int32_t name='levels_above_layer_2'/>
        <int32_t name='levels_above_layer_3'/>
        <int32_t name='levels_above_layer_4'/>
        <int32_t name='levels_above_layer_5'/>
        <int32_t name='levels_at_bottom'/>
        <int32_t name='cave_min_size'/>
        <int32_t name='cave_max_size'/>
        <int32_t name='mountain_cave_min'/>
        <int32_t name='non_mountain_cave_min'/>
        <int32_t name='total_civ_number'/>
        <int32_t name='rain_ranges_1'/>
        <int32_t name='rain_ranges_0'/>
        <int32_t name='rain_ranges_2'/>
        <int32_t name='drainage_ranges_1'/>
        <int32_t name='drainage_ranges_0'/>
        <int32_t name='drainage_ranges_2'/>
        <int32_t name='savagery_ranges_1'/>
        <int32_t name='savagery_ranges_0'/>
        <int32_t name='savagery_ranges_2'/>
        <int32_t name='volcanism_ranges_1'/>
        <int32_t name='volcanism_ranges_0'/>
        <int32_t name='volcanism_ranges_2'/>
        <static-array count='4' name='ranges'>
            <static-array type-name='int32_t' count='24' index-enum='worldgen_range_type'/>
        </static-array>
        <int32_t name='beast_end_year'/>
        <int32_t name='end_year'/>
        <int32_t name='beast_end_year_percent'/>
        <int32_t name='total_civ_population'/>
        <int32_t name='site_cap'/>
        <int32_t name='elevation_ranges_1'/>
        <int32_t name='elevation_ranges_0'/>
        <int32_t name='elevation_ranges_2'/>
        <int32_t name='mineral_scarcity'/>
        <int32_t name='megabeast_cap'/>
        <int32_t name='semimegabeast_cap'/>
        <int32_t name='titan_number'/>
        <static-array type-name='int32_t' name='titan_attack_trigger' count='3'/>
        <int32_t name='demon_number'/>
        <int32_t name='night_troll_number'/>
        <int32_t name='bogeyman_number'/>
        <int32_t name='nightmare_number' since='v0.47.01'/>
        <int32_t name='vampire_number'/>
        <int32_t name='werebeast_number'/>
        <static-array type-name='int32_t' name='werebeast_attack_trigger' count='3' since='v0.47.01'/>
        <int32_t name='secret_number'/>
        <int32_t name='regional_interaction_number'/>
        <int32_t name='disturbance_interaction_number'/>
        <int32_t name='evil_cloud_number'/>
        <int32_t name='evil_rain_number'/>
        <int8_t name='generate_divine_materials' since='v0.40.01'/>
        <int8_t name='allow_divination' since='v0.47.01'/>
        <int8_t name='allow_demonic_experiments' since='v0.47.01'/>
        <int8_t name='allow_necromancer_experiments' since='v0.47.01'/>
        <int8_t name='allow_necromancer_lieutenants' since='v0.47.01'/>
        <int8_t name='allow_necromancer_ghouls' since='v0.47.01'/>
        <int8_t name='allow_necromancer_summons' since='v0.47.01'/>
        <int32_t name='good_sq_counts_0'/>
        <int32_t name='evil_sq_counts_0'/>
        <int32_t name='good_sq_counts_1'/>
        <int32_t name='evil_sq_counts_1'/>
        <int32_t name='good_sq_counts_2'/>
        <int32_t name='evil_sq_counts_2'/>
        <static-array type-name='int32_t' name='elevation_frequency' count='6'/>
        <static-array type-name='int32_t' name='rain_frequency' count='6'/>
        <static-array type-name='int32_t' name='drainage_frequency' count='6'/>
        <static-array type-name='int32_t' name='savagery_frequency' count='6'/>
        <static-array type-name='int32_t' name='temperature_frequency' count='6'/>
        <static-array type-name='int32_t' name='volcanism_frequency' count='6'/>
        <pointer type-name='worldgen_parms_ps' name='ps'/>
        <int32_t name='reveal_all_history'/>
        <int32_t name='cull_historical_figures'/>
        <int32_t name='erosion_cycle_count'/>
        <int32_t name='periodically_erode_extremes'/>
        <int32_t name='orographic_precipitation'/>
        <int32_t name='playable_civilization_required'/>
        <int32_t name='all_caves_visible'/>
        <int32_t name='show_embark_tunnel'/>
        <int32_t name='pole'/>
        <bool name='immune_to_resize'/>
    </struct-type>

    <struct-type type-name='worldgen_parms_ps' original-name='world_gen_param_presetst'>
        <int32_t name='width'/>
        <int32_t name='height'/>
        <static-array count='24' name='data' index-enum='worldgen_range_type'>
            <pointer is-array='true'><pointer is-array='true' type-name='int16_t'/></pointer>
        </static-array>
    </struct-type>

    <class-type type-name='viewscreen_new_regionst' inherits-from='viewscreen'>
        <stl-vector name='worldgen_presets' pointer-type='worldgen_parms'/>
        <int8_t name='doing_params'/>
        <bool name='param_list_open'/>
        <int32_t name='scroll_position_param_list'/>
        <bool name='scrolling_param_list'/>
        <int32_t name='scroll_position_params'/>
        <bool name='scrolling_params'/>

        <bool name='entering_param_name'/>
        <int32_t name='sel_param'/>
        <stl-string name='enter_seed'/>
        <bool name='editing_seed'/>
        <bool name='editing_name'/>
        <bool name='editing_title'/>
        <bool name='confirm_delete'/>
        <bool name='confirm_new_dims'/>
        <int16_t name='new_dimx'/>
        <int16_t name='new_dimy'/>

        <int8_t name='confirming_abort_save'/>
        <int8_t name='confirming_start_save'/>
        <int8_t name='params_need_save'/>
        <bool name='entering_value_str'/>
        <int32_t name='entering_value_index'/>
        <stl-string name='value_str'/>
        <stl-vector pointer-type='world_gen_param_basest' name='member'/>
        <ulong name='last_saved_tc'/>
        <ulong name='last_loaded_tc'/>

        <int8_t name='doing_simple_params'/>
        <int32_t name='simple_sel'/>
        <int32_t name='simple_world_size'/>
        <int32_t name='simple_history'/>
        <int32_t name='simple_civ_num'/>
        <int32_t name='simple_site_cap'/>
        <int32_t name='simple_beast'/>
        <int32_t name='simple_savagery'/>
        <int32_t name='simple_minerals'/>

        <int8_t name='abort_world_gen_dialogue'/>
        <int8_t name='reject_dialogue'/>
        <int16_t name='reject_dialogue_type'/> bay12: MapRejectType
        <compound name='text_box' type-name='curses_text_boxst'/>
        <bool name='mouse_scrolling_map'/>
        <int32_t name='mouse_anchor_mx'/>
        <int32_t name='mouse_anchor_my'/>
        <int32_t name='mouse_anchor_pmx'/>
        <int32_t name='mouse_anchor_pmy'/>

        <bool name='raw_load'/>
        <int32_t name='stage_count'/>
        <int32_t name='raw_load_stage'/> bay12: NewRegionRawLoadStageType

        <bool name='doing_mods'/>
        <int32_t name='scroll_position_available_mods'/>
        <bool name='scrolling_available_mods'/>
        <int32_t name='scroll_position_selected_mods'/>
        <bool name='scrolling_selected_mods'/>

        <stl-vector pointer-type='stl-string' name='base_available_id'/>
        <stl-vector type-name='int32_t' name='base_available_numeric_version'/>
        <stl-vector type-name='int32_t' name='base_available_earliest_compat_numeric_version'/>
        <stl-vector pointer-type='stl-string' name='base_available_src_dir'/>
        <stl-vector pointer-type='stl-string' name='base_available_name'/>
        <stl-vector pointer-type='stl-string' name='base_available_displayed_version'/>
        <stl-vector pointer-type='mod_headerst' name='base_available_mod_header'/>

        <stl-vector pointer-type='stl-string' name='object_load_order_id'/>
        <stl-vector type-name='int32_t' name='object_load_order_numeric_version'/>
        <stl-vector type-name='int32_t' name='object_load_order_earliest_compat_numeric_version'/>
        <stl-vector pointer-type='stl-string' name='object_load_order_src_dir'/>
        <stl-vector pointer-type='stl-string' name='object_load_order_name'/>
        <stl-vector pointer-type='stl-string' name='object_load_order_displayed_version'/>
        <stl-vector pointer-type='mod_headerst' name='object_load_order_mod_header'/>

        <stl-vector pointer-type='stl-string' name='available_id'/>
        <stl-vector type-name='int32_t' name='available_numeric_version'/>
        <stl-vector type-name='int32_t' name='available_earliest_compat_numeric_version'/>
        <stl-vector pointer-type='stl-string' name='available_src_dir'/>
        <stl-vector pointer-type='stl-string' name='available_name'/>
        <stl-vector pointer-type='stl-string' name='available_displayed_version'/>
        <stl-vector pointer-type='mod_headerst' name='available_mod_header'/>

        <compound name='hover_mod_description' type-name='curses_text_boxst'/>
        <stl-string name='last_hover_mod_id'/>
        <int32_t name='last_hover_mod_version'/>
        <int32_t name='last_hover_width'/>
    </class-type>

    <struct-type type-name='nemesis_offload' original-name='offload_unit_infost'>
        <stl-vector name='nemesis_save_file_id' type-name='int32_t'/>
        <stl-vector name='nemesis_member_idx' type-name='int16_t'/>
        <stl-vector name='units' pointer-type='unit'/>

        <pointer type-name='unit_chunk' name='cur_unit_chunk'/>
        <int32_t name='cur_unit_chunk_num' init-value='-1'/>
        <int32_t name='units_offloaded' init-value='-1'/>
    </struct-type>

    <class-type type-name='viewscreen_savegamest' inherits-from='viewscreen'>
        <stl-string name='confirm_string'/>
        <compound name='saver' type-name='saverst'/>
        <compound type-name='file_compressorst' name='compressor'/>
        <stl-string name='folder_name'/>
        <stl-string name='timeline_name'/>
        <stl-string name='manual_name'/>
        <int32_t name='save_type'/> bay12: SaveTypeType, also referenced above
    </class-type>

    <enum-type type-name='adventurer_attribute_level' base-type='int32_t'>
        <enum-item name='VeryLow'/>
        <enum-item name='Low'/>
        <enum-item name='BelowAverage'/>
        <enum-item name='Average'/>
        <enum-item name='AboveAverage'/>
        <enum-item name='High'/>
        <enum-item name='Superior'/>
    </enum-type>

    <struct-type type-name='startup_charactersheet_petst'>
        <compound type-name='language_name' name='name'/>

        <int16_t name='race' ref-target='creature_raw'/>
        <int16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>
        <int16_t name='type'/>
    </struct-type>

    <enum-type type-name='adv_background_option_type' base-type='int32_t'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='SQUAD_EPPID'/>
        <enum-item name='REGULAR_UNIT'/>
    </enum-type>

    <enum-type type-name='setup_adventure_type' base-type='int32_t'> bay12: SetupAdventureType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='DIFFICULTY'/>
        <enum-item name='RACE'/>
        <enum-item name='SUBRACE'/>
        <enum-item name='NEMESIS'/>
        <enum-item name='ENTITY'/>
        <enum-item name='DOING_SUB'/>
        <enum-item name='SUB_SKILLS'/>
        <enum-item name='SUB_APPEARANCE'/>
        <enum-item name='SUB_PERSONALITY'/>
        <enum-item name='SUB_BACKGROUND'/>
        <enum-item name='SUB_EQUIPMENT'/>
        <enum-item name='SUB_MOUNTS_AND_PETS'/>
        <enum-item name='FINAL_CONFIRMATION'/>
    </enum-type>

    <struct-type type-name='setup_character_info' comment='startup_charactersheetst'>
        <compound type-name='language_name' name='name'/>
        <int16_t name='race' ref-target='creature_raw'/>
        <int16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>
        <static-array name='skilllevel' count='149' index-enum='job_skill'>
            <enum type-name='skill_rating'/>
        </static-array>
        <int32_t name='quick_entity_id' ref-target='historical_entity'/>
        <int32_t name='entity_population_id'/>
        <int32_t name='breed_id' ref-target='breed'/>
        <int32_t name='cultural_identity_id' ref-target='cultural_identity'/>
        <int32_t name='nemesis_index' ref-target='nemesis_record'/>
        <enum name='start_mil_type' type-name='profession' base-type='int32_t'/> Toady directly used the enum here
        <enum name='start_civ_type' type-name='profession' base-type='int32_t'/> rather than the matching typedef
        <int16_t name='skill_picks_left'/>

        <static-array count='6' name='phys_att_range_val' index-enum='physical_attribute_type'>
            <enum type-name='adventurer_attribute_level' base-type='int32_t'/>
        </static-array>
        <static-array count='13' name='ment_att_range_val' index-enum='mental_attribute_type'>
            <enum type-name='adventurer_attribute_level' base-type='int32_t'/>
        </static-array>

        <enum base-type='int16_t' name='difficulty' comment='chosen_destiny'>
            <enum-item name='Peasant'/>
            <enum-item name='Hero'/>
            <enum-item name='Demigod'/>
        </enum>

        <int32_t name='start_site_id' ref-target='world_site' since='v0.47.01'/>
        <int32_t name='background_start_squad_epp_id' since='v0.47.01'/>
        <enum type-name='profession' name='background_unit' since='v0.47.01'/>
        <static-array name='background_skill_bonus' type-name='int32_t' count='149' index-enum='job_skill' since='v0.47.01'/>

        <int32_t name='worship_hfid' ref-target='historical_figure'/>
        <int32_t name='worship_enid' ref-target='historical_entity' since='v0.40.01'/>
        <int32_t name='worship_strength' since='v0.40.01'/>

        <compound name='pform' type-name='unit_appearance'/>
        <int32_t name='birth_year'/>
        <int32_t name='birth_season_count'/>
        <int32_t name='age_death_year'/>
        <int32_t name='age_death_season_count'/>
        <compound type-name='unit_personality' name='pers'/>
        <bool name='is_from_wilderpop_or_feature'/>

        <uint32_t name='flag' comment='none used'/>
        <enum type-name='setup_adventure_type' name='sub_mode'/>
        <static-array name='visited_mode' type-name='bool' count='12' index-enum='setup_adventure_type'/>

        <int32_t name='selected_att'/>
        <bool name='scrolling_att'/>
        <int32_t name='selected_skill'/>
        <bool name='scrolling_skill'/>
        <int32_t name='att_points'/>
        <stl-vector name='posskill'>
            <enum base-type='int16_t' type-name='job_skill'/>
        </stl-vector>
        <int32_t name='ip'/>

        <bool name='entering_name'/>
        <stl-string name='old_name'/>
        <compound name='background_text' type-name='curses_text_boxst'/>
        <stl-vector name='goodsite' pointer-type='world_site'/>
        <int32_t name='active_column'/>
        <stl-vector type-name='adv_background_option_type' name='background_option'/>
        <stl-vector name='background_option_squad_epp_id'>
            <int32_t init-value='-1'/>
        </stl-vector>
        <stl-vector type-name='profession' name='background_option_unit'/>
        <stl-vector type-name='religious_practice_type' name='religious_practice_option'/>
        <stl-vector type-name='religious_practice_data' name='religious_practice_id'/>
        <stl-vector type-name='int32_t' name='pos_caste'/>
        <compound name='background_desc' type-name='curses_text_boxst'/>

        <int32_t name='desc_st_index'/>
        <int32_t name='desc_bo_index'/>
        <int32_t name='desc_rp_index'/>

        <int32_t name='scroll_st'/>
        <bool name='scrolling_st'/>
        <int32_t name='scroll_bo'/>
        <bool name='scrolling_bo'/>
        <int32_t name='scroll_rp'/>
        <bool name='scrolling_rp'/>

        <compound name='appearance_text' type-name='curses_text_boxst'/>
        <bool name='appearance_offscreen_randomized'/>
        <bool name='appearance_was_fully_randomized'/>
        <int32_t name='portrait_texpos_selected'/>
        <int32_t name='portrait_texpos'/>

        <int32_t name='pers_scroll_y'/>
        <compound name='personal_values_text' type-name='curses_text_boxst'/>
        <compound name='personality_text' type-name='curses_text_boxst'/>
        <compound name='civ_values_text' type-name='curses_text_boxst'/>

        <bool name='doing_specific_personality'/>
        <int32_t name='scroll_position_specific_personality'/>
        <bool name='scrolling_specific_personality'/>
        <int32_t name='selected_specific_pers_item'/>
        <static-array name='min_pers' type-name='int16_t' index-enum='personality_facet_type' count='50'/>
        <static-array name='max_pers' type-name='int16_t' index-enum='personality_facet_type' count='50'/>
        <static-array name='civ_value_level' type-name='int32_t' index-enum='value_type' count='33'/>

        <int32_t name='eqpet_points'/>
        <static-array name='s_item' index-enum='entity_sell_category' count='107'><stl-vector pointer-type='item_actual'/></static-array>

        <compound type-name='embark_item_choice' name='etl'/>
        <int32_t name='itype'/>
        <int32_t name='istype'/>
        <int32_t name='imat'/>
        <int32_t name='imatg'/>

        <static-array name='item_expander_on' index-enum='entity_sell_category' count='107' type-name='bool'/>
        <int32_t name='scroll_position_item'/>
        <enum name='current_category' type-name='entity_sell_category'/>
        <int32_t name='scroll_position_category'/>
        <int32_t name='scroll_position_category_item'/>
        <bool name='scrolling_item'/>
        <bool name='scrolling_category'/>
        <bool name='scrolling_category_item'/>
        <stl-string name='item_filter'/>
        <bool name='entering_item_filter'/>

        <int32_t name='selected_pet_l'/>
        <bool name='scrolling_pet_l'/>
        <int32_t name='selected_pet_r'/>
        <bool name='scrolling_pet_r'/>
        <int32_t name='pet_side'/>
        <stl-vector name='pet' pointer-type='startup_charactersheet_petst'/>
    </struct-type>

    <struct-type type-name='embark_item_choice' original-name='entity_trade_listst'>
        <static-array name='list' count='107' index-enum='entity_sell_category'>
            <stl-vector>
                <pointer> bay12: itinfost
                    <enum base-type='int16_t' name='item_type' type-name='item_type'/>
                    <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
                    <int16_t name='mattype' ref-target='material' aux-value='$$.matindex'/>
                    <int32_t name='matindex'/>
                    <int8_t name="on" comment='1 if new, -1 if added'/>
                </pointer>
            </stl-vector>
        </static-array>
        <stl-vector name='race' type-name='int32_t' ref-target='creature_raw'
                    index-refers-to='$$._parent.caste[$].ref-target'/>
        <stl-vector name='caste' type-name='int16_t'
                    ref-target='caste_raw' aux-value='$$._parent.race[$._key]'/>
        <stl-vector name='profession' index-refers-to='$$._parent.caste[$].ref-target'>
            <enum base-type='int16_t' type-name='profession'/>
        </stl-vector>
    </struct-type>

    <struct-type type-name='embark_profile' original-name='embark_profilest'>
        <stl-string name='name'/>
        <stl-vector name='skill_type' type-name='job_skill'/>
        <stl-vector name='skill_dwarf_idx' type-name='int16_t'/>
        <stl-vector name='skill_level' type-name='int16_t'/>

        <stl-vector name='reclaim_dwarf_idx' type-name='int16_t'/>
        <stl-vector name='reclaim_prof_soldier' type-name='profession'/>
        <stl-vector name='reclaim_prof_civilian' type-name='profession'/>

        <stl-vector name='item_type' type-name='int16_t'/>
        <stl-vector name='item_subtype' type-name='int16_t'/>
        <stl-vector name='mat_type' type-name='int16_t'/>
        <stl-vector name='mat_index' type-name='int32_t'/>
        <stl-vector name='item_count' type-name='int32_t'/>

        <stl-vector name='pet_race' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='pet_caste' type-name='int16_t' ref-target='caste_raw'/>
        <stl-vector name='pet_profession' type-name='profession'/>
        <stl-vector name='pet_count' type-name='int32_t'/>
    </struct-type>

    <enum-type type-name='embark_skill_tab_type' base-type='int32_t'> bay12: EmbarkSkillTabType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='CRUCIAL'/>
        <enum-item name='LABOR'/>
        <enum-item name='COMBAT'/>
        <enum-item name='OTHER'/>
    </enum-type>

    <struct-type type-name='setup_race_selectionst'>
        <int32_t name='race' ref-target='creature_raw'/>
        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int32_t name='tier_count'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: SETUP_RACE_SELECTION_FLAG_*
            <flag-bit name='is_regionpop'/>
        </bitfield>
    </struct-type>

    <class-type type-name='viewscreen_setupadventurest' inherits-from='viewscreen'>
        <enum name='mode' type-name='setup_adventure_type'/>
        <stl-vector pointer-type='setup_race_selectionst' name='race_selection'/>

        <int32_t name='chosen_destiny'/>
        <int32_t name='chosen_difficulty'/>
        <static-array name='destiny_desc' count='3' type-name='curses_text_boxst'/>
        <compound name='difficulty_desc' type-name='curses_text_boxst'/>

        <int32_t name='chosen_race'/>
        <bool name='chosen_is_from_wilderpop_or_feature'/>
        <int32_t name='sheet_page'/>

        <stl-vector type-name='int32_t' name='valid_race'/>
        <stl-vector type-name='int32_t' name='highlight_entity_id'/>
        <int32_t name='selected_race'/>
        <int32_t name='scroll_position_race'/>
        <bool name='scrolling_race'/>

        <stl-vector type-name='int32_t' name='valid_subrace'/>
        <int32_t name='selected_subrace'/>
        <int32_t name='scroll_position_subrace'/>
        <bool name='scrolling_subrace'/>

        <stl-vector type-name='int32_t' name='nemesis_index'/>
        <int32_t name='selected_nem'/>
        <int32_t name='scroll_position_nem'/>
        <bool name='scrolling_nem'/>

        <stl-vector type-name='int32_t' name='valid_civ_id'/>
        <int32_t name='selected_civ_id'/>
        <int32_t name='scroll_position_civ_id'/>
        <bool name='scrolling_civ_id'/>

        <stl-vector pointer-type='setup_character_info' name='csheet'/>
        <int32_t name='active_sheet_index'/>

        <stl-vector type-name='int32_t' name='final_start_site_id_cand'/>
        <int32_t name='selected_final_start_site_index'/>
        <int32_t name='scroll_final'/>
        <bool name='scrolling_final'/>

        <compound name='dungeon_mode_start_sheet'> bay12: dungeon_mode_start_sheetst
            <stl-vector pointer-type='setup_character_info' name='csheet'/>
            <int32_t name='start_site_id'/>
        </compound>
    </class-type>

    <class-type type-name='viewscreen_setupdwarfgamest' inherits-from='viewscreen'>
        <static-string size='768' name='title'/>
        <stl-vector name='dwarf_info' pointer-type='setup_character_info'/>
        <static-array count='4' name='embark_skills' index-enum='embark_skill_tab_type'>
            <stl-vector><enum type-name='job_skill' base-type='int16_t'/></stl-vector>
        </static-array>
        <stl-vector name='reclaim_professions'><enum type-name='profession' base-type='int16_t'/></stl-vector>

        <int32_t name='preparing_map_timer'/>
        <bool name='preparing_map_timer_quick_start'/>

        <compound type-name='difficultyst' name='difficulty'/>
        <bool name='doing_custom_settings'/>
        <int32_t name='scroll_position_params'/>
        <bool name='scrolling_params'/>
        <bool name='entering_value_str'/>
        <int32_t name='entering_value_index'/>
        <stl-string name='value_str'/>
        <stl-vector name='member' pointer-type='world_gen_param_basest'/>

        <int32_t name='mode'/>
        <int32_t name='selected_u'/>
        <int32_t name='scroll'/>
        <int32_t name='selected_i'/>

        <enum name='current_skill_tab' type-name='embark_skill_tab_type'/>
        <bool name='scrolling_skill_list'/>

        <int32_t name='selected_sk'/>
        <int32_t name='selected_pet'/>
        <int32_t name='side_u'/>
        <int32_t name='side_i'/>
        <int32_t name='y'/>
        <int8_t name='initial_selection'/>
        <bool name='embark_confirmation'/>
        <bool name='scrolling_pet_list'/>
        <int32_t name='chosen_pet_selected'/>
        <bool name='scrolling_chosen_pet_list'/>

        <stl-vector type-name='int8_t' name='embark_profile_type'/>
        <stl-vector name='embark_profile' pointer-type='embark_profile'/>
        <int32_t name='scroll_position_initial_selection'/>
        <bool name='scrolling_initial_selection'/>

        <stl-vector pointer-type='stl-string' name='objection'/>
        <int8_t name='viewing_objections'/>
        <int32_t name='scroll_position_objections'/>
        <bool name='scrolling_objections'/>

        <int8_t name='saving_profile'/>
        <stl-string name='profile_name'/>
        <int8_t name='saving_profile_warning'/>

        <compound type-name='embark_item_choice' name='etl'/>
        <static-array name='s_item' index-enum='entity_sell_category' count='107'><stl-vector pointer-type='item_actual'/></static-array>
        <static-array name='item_expander_on' index-enum='entity_sell_category' count='107' type-name='bool'/>
        <int32_t name='scroll_position_item'/>
        <enum name='current_category' type-name='entity_sell_category'/>
        <int32_t name='scroll_position_category'/>
        <int32_t name='scroll_position_category_item'/>
        <bool name='scrolling_item'/>
        <bool name='scrolling_category'/>
        <bool name='scrolling_category_item'/>
        <stl-string name='item_filter'/>
        <bool name='entering_item_filter'/>

        <stl-vector type-name='int16_t' name='availpetrace_num'/>
        <stl-vector type-name='int32_t' name='chosen_pet_index'/>
        <stl-vector type-name='int32_t' name='chosen_pet_num'/>
        <compound name='fort_name' type-name='language_name'/>
        <compound name='group_name' type-name='language_name'/>
        <bool name='update_header'/>
        <compound type-name='art_image' name='start_symbol'/>
        <compound type-name='embark_location' name='si'/>
        <stl-vector pointer-type='unit' name='s_unit'/>
        <int32_t name='wagon_num'/>
        <int32_t name='points_remaining'/>

        Set remotely via pointers:
        <enum name='add_item_type' type-name='item_type'/>
        <int16_t name='add_item_subtype' refers-to='(item-subtype-target $$._parent.add_item_type $)'/>
        <int16_t name='add_mattype' ref-target='material' aux-value='$$.add_matindex'/>
        <int32_t name='add_matindex'/>
        <uint32_t name='adding_item_flag'/>
    </class-type>

    <class-type type-name='viewscreen_choose_game_typest' inherits-from='viewscreen'>
        <stl-vector type-name="game_type" name="gametypes"/>
    </class-type>

    <enum-type type-name='save_game_sort_type' base-type='uint8_t'> bay12: SaveGameSort
        <enum-item name='Name'/>
        <enum-item name='Folder'/>
    </enum-type>

    <class-type type-name='viewscreen_titlest' inherits-from='viewscreen'>
        <static-string name='str_histories' size='768'/>
        <static-string name='str' size='768'/>

        <bool name='clean_first'/>
        <int16_t name='mode'/>
        <int32_t name='selected'/>
        <int32_t name='selected_r'/>
        <int8_t name='game_start_proceed'/>
        <stl-vector name="menu_line_id">
            <enum name="menu_line_id"> bay12: MainChoice
                <enum-item name="Continue"/>
                <enum-item name="Start"/>
                <enum-item name="NewWorld"/>
                <enum-item name="TestingArena"/>
                <enum-item name="Mods" since="v50.01"/>
                <enum-item name="Settings"/>
                <enum-item name="AboutDF"/>
                <enum-item name="Quit"/>
            </enum>
        </stl-vector>
        <stl-vector type-name="game_type" name="gametype"/>
        <stl-vector pointer-type='stl-string' name='gametype_str'/>
        <stl-vector pointer-type='region_headerst' name='region_choice'/>
        <int32_t name='scroll_position_region_choice'/>
        <bool name='scrolling_region_choice'/>
        <stl-vector pointer-type='savegame_headerst' name='savegame_header'/>
        <stl-vector pointer-type='savegame_headerst' name='savegame_header_world'/>
        <int32_t name='scroll_position_world_choice'/>
        <bool name='scrolling_world_choice'/>
        <stl-vector pointer-type='savegame_headerst' name='savegame_header_game'/>
        <int32_t name='scroll_position_game_choice'/>
        <bool name='scrolling_game_choice'/>
        <stl-vector pointer-type='stl-string' name='arena_choice'/>
        <stl-vector pointer-type='stl-string' name='dungeon_choice'/>
        <stl-vector pointer-type='stl-string' name='tutorial_choice'/>
        <stl-string name="str_copyright"/>
        <stl-string name="str_version"/>

        <stl-string name='src_dir'/>
        <int32_t name='stage_count'/>

        <bool name='game_start_arena'/>
        <int32_t name='load_arena_stage'/>

        <bool name='game_start_tutorial'/>
        <int32_t name='load_tutorial_stage'/>

        <bool name='game_start_dungeon'/>
        <int32_t name='load_dungeon_stage'/>

        <bool name='managing_mods'/>
        <stl-vector pointer-type='mod_headerst' name='mod'/>
        <int32_t name='scroll_position_mods'/>
        <bool name='scrolling_mods'/>
        <compound name='hover_mod_description' type-name='curses_text_boxst'/>
        <stl-string name='last_hover_mod_id'/>
        <int32_t name='last_hover_mod_version'/>
        <int32_t name='last_hover_width'/>

        <bool name='uploading_mods'/>
        <int32_t name='scroll_position_upload_mods'/>
        <bool name='scrolling_upload_mods'/>
        <compound name='hover_upload_mod_description' type-name='curses_text_boxst'/>
        <stl-string name='last_hover_upload_mod_id'/>
        <int32_t name='last_hover_upload_mod_version'/>
        <int32_t name='last_hover_upload_width'/>
        <bool name='deleting_region'/>
        <bool name='deleting_savegame_game'/>
        <bool name='deleting_savegame_world'/>
        <pointer type-name='savegame_headerst' name='deleting_savegame_header'/>
        <pointer type-name='region_headerst' name='deleting_region_header'/>
        <stl-vector pointer-type='stl-string' name='credit_line'/>
        <stl-vector type-name='int32_t' name='credit_line_type'/>
        <int32_t name='scroll_position_about'/>
        <bool name='scrolling_about'/>
        <enum type-name='save_game_sort_type' name='cur_sort'/>
        <bool name='sort_ascending'/>
    </class-type>

    <class-type type-name='viewscreen_update_regionst' inherits-from='viewscreen'>
        <int32_t name='year'/>
        <int32_t name='year_tick'/>
    </class-type>

    <enum-type type-name='world_view_mode_type' base-type='int32_t'> bay12: WorldViewModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='NORMAL'/>
        <enum-item name='CIVILIZATIONS'/>
        <enum-item name='MISSIONS_LIST'/>
        <enum-item name='MISSION_DETAILS'/>
        <enum-item name='NEWS'/>
        <enum-item name='REPORTS'/>
        <enum-item name='CITIZENS'/>
        <enum-item name='ARTIFACTS'/>
    </enum-type>

    <struct-type type-name='region_snapshotst'>
        <int32_t name='year'/>
        <compound name='territory' type-name='entity_territoryst'/>
        <stl-vector name='site_id' type-name='int32_t' ref-target='world_site'/>
        <stl-vector name='site_population' type-name='int32_t'/>
    </struct-type>

    <struct-type type-name='region_print_datast'>
        <pointer name='rss' type-name='region_snapshotst'/>
        <bitfield name='flags' base-type='uint32_t'> bay12: REGION_PRINT_DATA_FLAG_*
            <flag-bit name='use_territory'/>
            <flag-bit name='use_territory_civs'/>
            <flag-bit name='use_site_info'/>
            <flag-bit name='use_notes'/>
            <flag-bit name='use_find_results'/>
            <flag-bit name='show_embark_restrictions'/>
            <flag-bit name='show_cliffs'/>
            <flag-bit name='show_elevation'/>
            <flag-bit name='triple_zoomed'/>
        </bitfield>
        <int32_t name='relevant_id'/>
        <pointer name='highlight_civ_id'><stl-vector type-name='int32_t' ref-target='historical_entity'/></pointer>
        <pointer name='mission_report' type-name='mission_report'/>
        <int32_t name='mission_path_data_index'/>
        <int32_t name='mission_path_data_path_index'/>
        <pointer name='indicator_data' type-name='rpd_indicator_datast'/>
        <static-array name='legend_entity_id' type-name='int32_t' count='50' ref-target='historical_entity'/>
        <int32_t name='legend_entity_id_num'/>
        <int32_t name='mm_cent_x'/>
        <int32_t name='mm_cent_y'/>
        <int32_t name='smm_cent_x'/>
        <int32_t name='smm_cent_y'/>
        <int32_t name='cent_z'/>
        <int32_t name='embark_rectangle_sx'/>
        <int32_t name='embark_rectangle_ex'/>
        <int32_t name='embark_rectangle_sy'/>
        <int32_t name='embark_rectangle_ey'/>
        <static-array type-name='int32_t' count='22' index-enum='embark_finder_option'/>
        <pointer name='find_metal_ore'><stl-vector type-name='int16_t' ref-target='inorganic_raw'/></pointer>
        <pointer name='skip_metal_ore'><stl-vector type-name='int16_t' ref-target='inorganic_raw'/></pointer>
        <int32_t name='highlight_site_id' ref-target='world_site'/>

        <int32_t name='line_start_x'/>
        <int32_t name='line_start_y'/>
        <int32_t name='line_end_x'/>
        <int32_t name='line_end_y'/>
        <bool name='draw_entire_line'/>
    </struct-type>

    <struct-type type-name='rpd_indicator_datast'>
        <static-array name='line_s_xy' count='1000'><int32_t name='x'/><int32_t name='y'/></static-array>
        <static-array name='line_e_xy' count='1000'><int32_t name='x'/><int32_t name='y'/></static-array>
        <static-array name='line_char' type-name='uint8_t' count='1000'/>
        <static-array name='line_f' type-name='uint8_t' count='1000'/>
        <static-array name='line_b' type-name='uint8_t' count='1000'/>
        <static-array name='line_br' type-name='uint8_t' count='1000'/>
        <int32_t name='line_num'/>

        <static-array name='marker_xy' count='1000'><int32_t name='x'/><int32_t name='y'/></static-array>
        <static-array name='marker_char' type-name='int8_t' count='1000'/>
        <static-array name='marker_f' type-name='int8_t' count='1000'/>
        <static-array name='marker_b' type-name='int8_t' count='1000'/>
        <static-array name='marker_br' type-name='int8_t' count='1000'/>
        <int32_t name='marker_num'/>
    </struct-type>

    <class-type type-name='viewscreen_worldst' inherits-from='viewscreen'>
        <int32_t name='region_cent_x'/>
        <int32_t name='region_cent_y'/>
        <bool name='mouse_scrolling_map'/>
        <int32_t name='mouse_anchor_mx'/>
        <int32_t name='mouse_anchor_my'/>
        <int32_t name='mouse_anchor_pmx'/>
        <int32_t name='mouse_anchor_pmy'/>

        <enum name='view_mode' type-name='world_view_mode_type'/>

        <pointer type-name='historical_figure' name='military_goals_hf'/>
        <pointer type-name='historical_figure' name='meet_workers_hf'/>

        <int32_t name='focus_ax'/>
        <int32_t name='focus_ay'/>
        <pointer type-name='world_site' name='focus_site'/>
        <stl-vector pointer-type='artifact_record' name='focus_site_artifact'/>
        <stl-vector pointer-type='historical_figure' name='focus_site_prisoner'/>
        <bool name='focus_site_messenger_candidate'/>
        <stl-vector pointer-type='nemesis_record' name='focus_site_requestable_worker'/>

        <stl-vector pointer-type='historical_entity' name='civlist'/>
        <pointer type-name='historical_entity' name='last_hover_ent'/>
        <stl-vector pointer-type='nemesis_record' name='relnem'/>
        <stl-vector type-name='int32_t' name='relnem_precedence'/>
        <stl-vector name='relag' pointer-type='meeting_event'/>
        <stl-vector type-name='int8_t' name='relag_pending'/>
        <int32_t name='scroll_position_civlist'/>
        <bool name='scrolling_civlist'/>

        <stl-vector pointer-type='army_controller' name='army_controller'/>
        <pointer type-name='army_controller' name='last_hover_ac'/>
        <int32_t name='selected_ac'/>
        <bool name='scrolling_ac'/>
        <int32_t name='scroll_position_ac'/>

        <stl-vector pointer-type='squad' name='squad'/>
        <stl-vector type-name='uint32_t' name='squad_flag'/>
        <stl-vector pointer-type='entity_position_assignment' name='messenger_epp'/>
        <stl-vector pointer-type='historical_entity' name='messenger_ent'/>
        <stl-vector type-name='uint32_t' name='messenger_flag'/>
        <int32_t name='scroll_position_squad'/>
        <bool name='scrolling_squad'/>
        <int32_t name='scroll_position_messenger'/>
        <bool name='scrolling_messenger'/>

        <stl-vector pointer-type='nemesis_record' name='request_nem'/>
        <int32_t name='scroll_position_request_nem'/>
        <bool name='scrolling_request_nem'/>
        <stl-vector name='rumor_master' pointer-type='entity_event'/>
        <compound name='rumor_rpd' type-name='region_print_datast'/>
        <compound name='rumor_rpd_indicator_data' type-name='rpd_indicator_datast'/>
        <int32_t name='last_hover_rumor_x'/>
        <int32_t name='last_hover_rumor_y'/>
        <bool name='focused_on_last_hover_rumor'/>
        <compound name='rumor_text' type-name='curses_text_boxst'/>
        <int32_t name='scroll_position_rumor'/>
        <bool name='scrolling_rumor'/>

        <stl-vector type-name='int32_t' name='mission_report_index'/>
        <stl-vector type-name='int32_t' name='tribute_report_index'/>
        <int32_t name='scroll_position_report'/>
        <bool name='scrolling_report'/>

        <pointer name='active_mission_report' type-name='mission_report'/>
        <int32_t name='mission_cursor_x'/>
        <int32_t name='mission_cursor_y'/>
        <int32_t name='mission_path_data_index'/>
        <int32_t name='mission_path_data_path_index'/>
        <int32_t name='mission_heid_data_index'/>
        <int32_t name='mission_heid_data_heid_index'/>
        <compound name='mission_text_box' type-name='curses_text_boxst'/>
        <stl-vector type-name='int32_t' name='mission_text_box_color'/>
        <int32_t name='mission_timer_year'/>
        <int32_t name='mission_timer_season_count'/>
        <int32_t name='mission_timer_season_count_inc'/>
        <bool name='report_paused'/>
        <int32_t name='mission_fade_in_timer'/>
        <int32_t name='mission_fade_start_ind'/>
        <int32_t name='scroll_position_mission'/>
        <bool name='scrolling_mission'/>

        <pointer name='active_tribute_report' type-name='spoils_report'/>
        <int32_t name='scroll_position_tribute'/>
        <bool name='scrolling_tribute'/>

        <stl-vector pointer-type='historical_figure' name='hf'/>
        <int32_t name='scroll_position_citizens'/>
        <bool name='scrolling_citizens'/>
        <pointer type-name='historical_figure' name='last_hover_hf'/>

        <stl-vector pointer-type='artifact_record' name='artifact'/>
        <stl-vector pointer-type='artifact_rumor_locationst' name='artifact_arl'/>
        <int32_t name='scroll_position_artifacts'/>
        <bool name='scrolling_artifacts'/>
        <pointer type-name='artifact_record' name='last_hover_artifact'/>
        <compound name='artifact_description' type-name='curses_text_boxst'/>
        <pointer type-name='artifact_claim' name='artifact_eac'/>
        <pointer type-name='historical_figure' name='artifact_rpa_holder'/>
        <pointer type-name='historical_figure' name='artifact_fac_holder'/>
    </class-type>

    <class-type type-name='viewscreen_new_arenast' inherits-from='viewscreen'>
        <bool name='raw_load'/>
        <int32_t name='progress'/>
        <int32_t name='cur_step'/> bay12: NewRegionRawLoadStage
        <int32_t name='scroll_position_arena_profile'/>
        <bool name='scrolling_arena_profile'/>
        <bool name='doing_mods'/>
        <int32_t name='scroll_position_available_mods'/>
        <bool name='scrolling_available_mods'/>
        <int32_t name='scroll_position_selected_mods'/>
        <bool name='scrolling_selected_mods'/>

        <stl-vector pointer-type='stl-string' name='base_available_id'/>
        <stl-vector type-name='int32_t' name='base_available_numeric_version'/>
        <stl-vector type-name='int32_t' name='base_available_earliest_compat_numeric_version'/>
        <stl-vector pointer-type='stl-string' name='base_available_src_dir'/>
        <stl-vector pointer-type='stl-string' name='base_available_name'/>
        <stl-vector pointer-type='stl-string' name='base_available_displayed_version'/>
        <stl-vector pointer-type='mod_headerst' name='base_available_mod_header'/>

        <stl-vector pointer-type='stl-string' name='object_load_order_id'/>
        <stl-vector type-name='int32_t' name='object_load_order_numeric_version'/>
        <stl-vector type-name='int32_t' name='object_load_order_earliest_compat_numeric_version'/>
        <stl-vector pointer-type='stl-string' name='object_load_order_src_dir'/>
        <stl-vector pointer-type='stl-string' name='object_load_order_name'/>
        <stl-vector pointer-type='stl-string' name='object_load_order_displayed_version'/>
        <stl-vector pointer-type='mod_headerst' name='object_load_order_mod_header'/>

        <stl-vector pointer-type='stl-string' name='available_id'/>
        <stl-vector type-name='int32_t' name='available_numeric_version'/>
        <stl-vector type-name='int32_t' name='available_earliest_compat_numeric_version'/>
        <stl-vector pointer-type='stl-string' name='available_src_dir'/>
        <stl-vector pointer-type='stl-string' name='available_name'/>
        <stl-vector pointer-type='stl-string' name='available_displayed_version'/>
        <stl-vector pointer-type='mod_headerst' name='available_mod_header'/>

        <compound name='hover_mod_description' type-name='curses_text_boxst'/>
        <stl-string name='last_hover_mod_id'/>
        <int32_t name='last_hover_mod_version'/>
        <int32_t name='last_hover_width'/>
    </class-type>

</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
