<data-definition>
    <struct-type type-name='entity_occasion_info'>
        <stl-vector name="occasions" pointer-type='entity_occasion' since='v0.42.01'/>
        <int32_t name="next_occasion_id"/>
        <static-array name='events' type-name='int32_t' count='10' ref-target='history_event'/>
        <int32_t name='count' comment="number of elements used in array above"/>
    </struct-type>
    <struct-type type-name='entity_occasion' comment="some festivals are annual, some single time. unk_1=0 plus unk_3=0 seems to match with single time, which doesn't make much sense. Only frequency seen is yearly">
        <int32_t name="id"/>
        <int32_t name='unk_1' comment="0 and 1 seen"/>
        <int32_t name='site' ref-target='world_site'/>
        <int32_t name='unk_2' init-value='-1' comment="only -1 seen, but based on other cases, might be an abstract building"/>
        <compound name='name' type-name='language_name'/>
        <int32_t name='start_year_tick'/>
        <int32_t name='end_year_tick'/>
        <int32_t name='unk_3' comment="0-2 seen"/>
        <int32_t name="event" ref-target='history_event'/>
        <int32_t name='unk_4' init-value='-1' comment="only seen with unk_3=2, but is usually not set"/>
        <stl-vector name='schedule' pointer-type='entity_occasion_schedule'/>
        <int32_t name='unk_5' init-value='0' comment="only value seen"/>
    </struct-type>
    <enum-type type-name='occasion_schedule_type' base-type='int32_t'>
        <enum-item name='DANCE_PERFORMANCE'/>
        <enum-item name='MUSICAL_PERFORMANCE'/>
        <enum-item name='POETRY_RECITAL'/>
        <enum-item name='STORYTELLING'/>
        <enum-item name='DANCE_COMPETITION'/>
        <enum-item name='MUSICAL_COMPETITION'/>
        <enum-item name='POETRY_COMPETITION'/>
        <enum-item name='FOOT_RACE'/>
        <enum-item />
        <enum-item />
        <enum-item name='WRESTLING_COMPETITION'/>
        <enum-item name='THROWING_COMPETITION'/>
        <enum-item name='GLADIATORY_COMPETITION'/>
        <enum-item name='PROCESSION'/>
        <enum-item name='CEREMONY'/>
    </enum-type>
    <struct-type type-name='entity_occasion_schedule'>
        <enum name='type' base-type='int32_t' type-name='occasion_schedule_type'/>
        <int32_t name='reference' comment="art form / event / item_type /procession start abstract building"/>
        <int32_t name='reference2' comment="item_subtype / procession stop abstract building"/>
        <int32_t name='unk_1'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3'/>
        <stl-vector name='features' pointer-type='entity_occasion_schedule_feature' />
        <int32_t name='start_year_tick'/>
        <int32_t name='end_year_tick'/>
    </struct-type>
    <enum-type type-name='occasion_schedule_feature' base-type='int32_t'>
        <enum-item />
        <enum-item />
        <enum-item name='STORYTELLING'/>
        <enum-item name='POETRY_RECITAL'/>
        <enum-item name='MUSICAL_PERFORMANCE'/>
        <enum-item name='DANCE_PERFORMANCE'/>
        <enum-item />
        <enum-item name='CRIERS_IN_FRONT'/>
        <enum-item name='ORDER_OF_PRECEDENCE'/>
        <enum-item name='BANNERS'/>
        <enum-item name='IMAGES'/>
        <enum-item />
        <enum-item />
        <enum-item name='ACROBATS'/>
        <enum-item name='INCENSE_BURNING'/>
        <enum-item name='COSTUMES'/>
        <enum-item name='CANDLES'/>
        <enum-item name='THE_GIVING_OF_ITEMS'/>
        <enum-item name='THE_SACRIFICE_OF_ITEMS'/>
    </enum-type>
    <struct-type type-name='entity_occasion_schedule_feature'>
        <enum name='feature' base-type='int32_t' type-name='occasion_schedule_feature'/>
        <int32_t name='reference' />
        <int32_t name='unk_1'/>
        <int32_t name='unk_2'/>
        <int32_t name='unk_3'/>
    </struct-type>
    <struct-type type-name='entity_activity_statistics'>
        <compound name='food'>
            <int32_t name='total'/>
            <int32_t name='meat'/>
            <int32_t name='fish'/>
            <int32_t name='other'/>
            <int32_t name='seeds'/>
            <int32_t name='plant'/>
            <int32_t name='drink'/>
        </compound>
        <static-array name='unit_counts' type-name='int16_t' count='152' index-enum='profession'/>
        <int16_t name='population'/>
        <int16_t name='unk_1'/>
        <int16_t name='unk_2' comment='in 0.23, omnivores'/>
        <int16_t name='unk_3' comment='in 0.23, carnivores'/>
        <int16_t name='trained_animals'/>
        <int16_t name='other_animals'/>
        <int16_t name='unk_4' comment='in 0.23, potential soldiers'/>
        <int32_t name='unk_5' comment='in 0.23, combat aptitude'/>
        <static-array name='item_counts' type-name='int32_t' count='112' index-enum='item_type'/>
        <stl-vector name='created_weapons' type-name='int32_t' index-refers-to='$global.world.raws.itemdefs.weapons[$]'/>
        <compound name='wealth'>
            <int32_t name='total'/>
            <int32_t name='weapons'/>
            <int32_t name='armor'/>
            <int32_t name='furniture'/>
            <int32_t name='other'/>
            <int32_t name='architecture'/>
            <int32_t name='displayed'/>
            <int32_t name='held'/>
            <int32_t name='imported'/>
            <int32_t name='unk_1'/>
            <int32_t name='exported'/>
        </compound>
        <static-array name='recent_jobs' count='7'>
            <static-array count='260' type-name='int32_t' index-enum='job_type'/>
        </static-array>
        <int32_t name='excavated_tiles' comment='unhidden, subterranean, and excluding map features'/>
        <static-array count='5' type-name='int32_t' name='death_history'/>
        <static-array count='5' type-name='int32_t' name='insanity_history'/>
        <static-array count='5' type-name='int32_t' name='execution_history'/>
        <static-array count='5' type-name='int32_t' name='noble_death_history'/>
        <int32_t name='total_deaths'/>
        <int32_t name='total_insanities'/>
        <int32_t name='total_executions'/>
        <int32_t name='num_artifacts'/>
        <int32_t name='unk_6' comment='in 0.23, total siegers'/>
        <stl-vector name='discovered_creature_foods' type-name='bool' index-refers-to='(find-creature $)'/>
        <stl-vector name='discovered_creatures' type-name='bool' index-refers-to='(find-creature $)'/>
        <stl-vector name='discovered_plant_foods' type-name='bool' index-refers-to='(find-plant-raw $)'/>
        <stl-vector name='discovered_plants' type-name='bool' index-refers-to='(find-plant-raw $)' comment='allows planting of seeds'/>
        <int16_t name='discovered_water_features'/>
        <int16_t name='discovered_subterranean_features'/>
        <int16_t name='discovered_chasm_features' comment='unused since 40d'/>
        <int16_t name='discovered_magma_features'/>
        <int16_t name='discovered_feature_layers' comment='back in 40d, this counted HFS'/>
        <int32_t name='migrant_wave_idx' comment='when >= 2, no migrants'/>
        <stl-vector name='found_minerals' type-name='int32_t' ref-target='inorganic_raw'
                    comment="Added after 'you have struck' announcement"/>
        <bitfield name='found_misc'>
            <flag-bit name='deep_special'/>
        </bitfield>
    </struct-type>

    <struct-type type-name='caravan_state'>
        <int32_t name='total_capacity'/>
        <int32_t name='unk_1'/>
        <enum name='trade_state' base-type='int8_t'>
            <enum-item name='None'/>
            <enum-item name='Approaching'/>
            <enum-item name='AtDepot'/>
            <enum-item name='Leaving'/>
            <enum-item name='Stuck'/>
        </enum>
        <int8_t name='depot_notified' comment='has it warned you that you need a depot'/>
        <int16_t name='time_remaining'/>
        <int32_t name='entity' ref-target='historical_entity'/>
        <compound name='activity_stats' type-name='entity_activity_statistics'/>
        <bitfield name='flags' base-type='uint32_t'>
            <flag-bit name='check_cleanup' comment='set each time a merchant leaves the map or dies'/>
            <flag-bit name='casualty'/>
            <flag-bit name='hardship'/>
            <flag-bit name='communicate' comment='send data to mountainhomes'/>
            <flag-bit name='seized'/>
            <flag-bit name='offended'/>
            <flag-bit name='announce' comment='display merchantintro and merchantexit'/>
            <flag-bit name='greatly_offended'/>
            <flag-bit name='tribute' comment='caravan is delivering tribute (not merchant caravan)'/>
        </bitfield>
        <int32_t name='import_value'/>
        <int32_t name='export_value_total'/>
        <int32_t name='export_value_personal' comment='excluding foreign-produced items'/>
        <int32_t name='offer_value'/>
        <stl-vector name='animals' type-name='int32_t' ref-target='unit'/>
        <pointer type-name='entity_sell_prices' name='sell_prices'/>
        <pointer type-name='entity_buy_prices' name='buy_prices'/>
        <stl-vector name='goods' type-name='int32_t' ref-target='item'/>
        <int32_t name='mood' comment='reflects satisfaction with last trading session'/>
        <int32_t name='unk_2'/>
    </struct-type>

    <struct-type type-name='entity_buy_prices'>
        <pointer type-name='entity_buy_requests' name='items'/>
        <stl-vector type-name='int32_t' name='price'/>
    </struct-type>

    <struct-type type-name='entity_buy_requests'>
        <stl-vector name='item_type' comment='guess'>
            <enum base-type='int16_t' type-name='item_type'/>
        </stl-vector>
        <stl-vector name="item_subtype" comment='guess'>
            <int16_t refers-to='(item-subtype-target $$._global.item_type[$$._key] $)'/>
        </stl-vector>
        <stl-vector name='mat_types'>
            <int16_t ref-target='material' aux-value='$$._parent.mat_indices[$._key]'/>
        </stl-vector>
        <stl-vector name='mat_indices' type-name='int16_t'/>
        <stl-vector name="mat_cats" type-name='job_material_category'/>
        <stl-vector type-name='int8_t' name='priority'/>
    </struct-type>

    <enum-type type-name='entity_sell_category' base-type='int16_t'>
        <enum-item name='Leather'/>
        <enum-item name='ClothPlant'/>
        <enum-item name='ClothSilk'/>
        <enum-item name='Crafts'/>
        <enum-item name='Wood'/>
        <enum-item name='MetalBars'/>
        <enum-item name='SmallCutGems'/>
        <enum-item name='LargeCutGems'/>
        <enum-item name='StoneBlocks'/>
        <enum-item name='Seeds'/>
        <enum-item name='Anvils'/>
        <enum-item name='Weapons'/>
        <enum-item name='TrainingWeapons'/>
        <enum-item name='Ammo'/>
        <enum-item name='TrapComponents'/>
        <enum-item name='DiggingImplements'/>
        <enum-item name='Bodywear'/>
        <enum-item name='Headwear'/>
        <enum-item name='Handwear'/>
        <enum-item name='Footwear'/>
        <enum-item name='Legwear'/>
        <enum-item name='Shields'/>
        <enum-item name='Toys'/>
        <enum-item name='Instruments'/>
        <enum-item name='Pets'/>
        <enum-item name='Drinks'/>
        <enum-item name='Cheese'/>
        <enum-item name='Powders'/>
        <enum-item name='Extracts'/>
        <enum-item name='Meat'/>
        <enum-item name='Fish'/>
        <enum-item name='Plants'/>
        <enum-item name='FruitsNuts'/>
        <enum-item name='GardenVegetables'/>
        <enum-item name='MeatFishRecipes'/>
        <enum-item name='OtherRecipes'/>
        <enum-item name='Stone'/>
        <enum-item name='Cages'/>
        <enum-item name='BagsLeather'/>
        <enum-item name='BagsPlant'/>
        <enum-item name='BagsSilk'/>
        <enum-item name='ThreadPlant'/>
        <enum-item name='ThreadSilk'/>
        <enum-item name='RopesPlant'/>
        <enum-item name='RopesSilk'/>
        <enum-item name='Barrels'/>
        <enum-item name='FlasksWaterskins'/>
        <enum-item name='Quivers'/>
        <enum-item name='Backpacks'/>
        <enum-item name='Sand'/>
        <enum-item name='Glass'/>
        <enum-item name='Miscellaneous'/>
        <enum-item name='Buckets'/>
        <enum-item name='Splints'/>
        <enum-item name='Crutches'/>
        <enum-item name='Eggs'/>
        <enum-item name='BagsYarn'/>
        <enum-item name='RopesYarn'/>
        <enum-item name='ClothYarn'/>
        <enum-item name='ThreadYarn'/>
        <enum-item name='Tools'/>
        <enum-item name='Clay'/>
        <enum-item name='Parchment'/>
        <enum-item name='CupsMugsGoblets'/>
    </enum-type>

    <struct-type type-name='entity_sell_prices'>
        <pointer type-name='entity_sell_requests' name='items'/>
        <static-array count='107' index-enum='entity_sell_category' name='price'>
            <stl-vector type-name='int32_t'/>
        </static-array>
    </struct-type>

    <struct-type type-name='entity_sell_requests'>
        <static-array count='107' index-enum='entity_sell_category' name='priority'>
            <stl-vector type-name='int8_t'/>
        </static-array>
    </struct-type>

    <struct-type type-name='entity_recipe'>
        <int16_t name='subtype' ref-target='itemdef_foodst'/>
        <stl-vector name='item_types'>
            <enum base-type='int16_t' type-name='item_type'/>
        </stl-vector>
        <stl-vector name='item_subtypes'>
            <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent._parent.item_types[$$._key] $)'/>
        </stl-vector>
        <stl-vector name='mat_types'>
            <int16_t ref-target='material' aux-value='$$._parent.mat_indices[$._key]'/>
        </stl-vector>
        <stl-vector name='mat_indices' type-name='int16_t'/>
    </struct-type>

    <enum-type type-name='historical_entity_type' base-type='int16_t'>
        <enum-item name='Civilization'/>
        <enum-item name='SiteGovernment'/>
        <enum-item name='VesselCrew'/>
        <enum-item name='MigratingGroup'/>
        <enum-item name='NomadicGroup'/>
        <enum-item name='Religion'/>
        <enum-item name='MilitaryUnit'/>
        <enum-item name='Outcast'/>
        <enum-item name='PerformanceTroupe'/>
        <enum-item name='MerchantCompany'/>
        <enum-item name='Guild'/>
    </enum-type>

    <struct-type type-name='honors_type' key-field='id'>
        <int32_t name='id'/>
        <bitfield name='flags'>
            <flag-bit name='granted_to_all_new_members'/>
        </bitfield>
        <stl-string name='name'/>
        <int32_t name='precedence_awarded'/>
        <enum name='required_skill' type-name='job_skill' base-type='int16_t'/>
        <bitfield name='required_skill_type'>
            <flag-bit name='melee_weapon'/>
            <flag-bit name='ranged_weapon'/>
        </bitfield>
        <int32_t name='required_skill_points'/>
        <int32_t name='required_kills'/>
        <int32_t name='required_battles'/>
        <int32_t name='required_years_of_membership'/>
        <stl-vector name='honored' type-name='int32_t' ref-target='historical_figure'/>
        <stl-vector name='required_position' type-name='int32_t' ref-target='entity_position'/>
        <stl-vector name='required_former_position' type-name='int32_t' ref-target='entity_position'/>
    </struct-type>

    <struct-type type-name='artifact_claim'>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
        <enum name='claim_type' base-type='int32_t' type-name='artifact_claim_type'/>
        <int32_t name='symbol_claim_id' init-value='-1' comment="different small numbers, but all claimed by the greedy necro diplomat, but not complete number range present"/>
        <int32_t name='claim_year' init-value='-1' comment="Written contents often seem to lack info of being claimed"/>
        <int32_t name='claim_year_tick' init-value='-1' comment="usually init"/>
        <int32_t name='unk_1' init-value='-1'/>
        <pointer name='artifact' type-name='artifact_record'/>
        <int32_t name='site' ref-target='world_site'/>
        <int32_t name='structure_local' init-value='-1'/>
        <int32_t name='holder_hf' ref-target='historical_figure' comment="might be owner_hf. all cases encountered have had both field the same when claimed by entity"/>
        <int32_t name='subregion' ref-target='world_region'/>
        <int32_t name='feature_layer_id' ref-target='world_underground_region'/>
        <int32_t name='unk_year' init-value='-1' comment="seems to be current year or -1. Matches up with corresponding field of artifact_record"/>
        <int32_t name='unk_2' init-value='-1' comment="only other value seen was 0"/>
        <int32_t name='unk_3' comment='uninitialized'/>
        <pointer name='unk_4'/>
        <pointer name='unk_5' type-name='historical_entity' has-bad-pointers='true'/>
        <pointer name='unk_6' type-name='historical_entity' has-bad-pointers='true'/>
    </struct-type>

    <struct-type type-name='entity_unk_v47_1' comment='The 3 first vectors are of the same length and somehow connected'>
        <int32_t name='unk_v47_1' ref-target='historical_figure' comment="seen kobold thieves and goblin snatchers, but not all thieves... seen 1 of several persecuted and expelled"/>
        <int32_t name='unk_v47_2' comment="some enum?"/>
        <stl-vector name='unk_v47_3' type-name='int32_t' comment="some enum?"/>
        <stl-vector name='agreement' type-name='int32_t' ref-target='agreement'/>
        <stl-vector name='unk_v47_5' type-name='int32_t' comment="boolean?"/>
        <stl-vector name='unk_v47_6' type-name='int32_t'/>
        <stl-vector name='unk_v47_7' type-name='int32_t'/>
        <stl-vector name='unk_v47_8' type-name='int32_t'/>
        <int32_t name='unk_v47_9'/>
    </struct-type>

    <struct-type type-name='historical_entity' key-field='id'
                 instance-vector='$global.world.entities.all'>
        <enum name='type' base-type='int16_t' type-name='historical_entity_type'/>
        <int32_t name='id' comment='index in the array'/>

        <pointer name='entity_raw' type-name='entity_raw'/>

        <int32_t name='save_file_id' comment='changes once has 100 entries'/>
        <int16_t name='next_member_idx'/>

        <compound name='name' type-name='language_name'/>

        <code-helper name='describe'>
            $.type
            (describe-obj (find-creature $.race))
            (describe-obj $.name)
        </code-helper>

        <int16_t name='race' ref-target='creature_raw'/>

        <bitfield name='flags'>
            <flag-bit name='neighbor' comment="Changes as you move on embark screen. Includes kobolds, cave civs, and necros (which are SiteGovernments)"/>
            <flag-bit name='player_civ' comment="Changes as you change your civ on embark screen"/>
            <flag-bit name='unk2'/>
            <flag-bit name='unk3'/>
            <flag-bit name='unreliable_lost_last_site' comment="When set, no sites remain. Doesn't say much about remaining sites when not set"/>
                SiteGovernment and Outcast has this flag set when there are no site links with the residence or invasion_push_out
                flag set. Others (NomadicGroup, MilitaryUnit seen) have it set when the criteria of the first group are fullfilled
                together with occupation_failed, criminal_gang, and reclaim being absent as well, provided they have at least one
                site link (no site link = flag not set).
                Civilizations can have the flag set when having lost all sites, but usually do not, so the flag seems useless
                at that level (Some exterminated kobolds have it set, while most do not, for instance. Embark culled dwarven civs
                may or may not have it set).
            <flag-bit name='worshipping'/>
            <flag-bit name='unk6'/>
            <flag-bit name='unk7'/>
            <flag-bit name='player_government' comment="Appears when embarking (and having unpaused)"/>
            <flag-bit name='unk9'/>
            <flag-bit name='unspecific_race' comment="Can be set for SiteGovernment, always set for Guild and PerformanceTroupe. Never set for NomadicGroup even when race=-1"/>
            <flag-bit name='unk11' comment="Set for a significant number of entities. It might indicate that entity is dead, although kobold civs never seem to have this flag set, even when their cave has been conquered or destroyed"/>
            <flag-bit name='unk12' comment="Set for all but unnamed civs, kobold entities, vault governments, and cave civ building race Outcasts. Set when an entity creates a poetic form."/>
            <flag-bit name='unk13' comment="Set for a significant number of entities"/>
            <flag-bit name='unk14' comment="Set for a significant number of entities"/>
            <flag-bit name='unk15' comment="Set for a limited set of entities"/>
            <flag-bit name='unk16' comment="Set for a limited set of entities. All seem to be dwarven, but definitely not complete set"/>
            <flag-bit name='unk17' comment="Set for a limited set of entities"/>
            <flag-bit name='unk18' comment="Set for a limited set of entities"/>
            <flag-bit name='unk19' comment="Set for a limited set of entities"/>
            <flag-bit name='unk20' comment="Set for a limited set of entities"/>
            <flag-bit name='unk21' comment='Required for entity to generate lord X, X commander, and X master position names (uses the religious name generator). removed if a poetic form is generated by a performance troupe.'/>
            <flag-bit name='unk22' comment="All are religions, but not the full set"/>
            <flag-bit name='unk23'/>
            <flag-bit name='unk24' comment="Set for a significant number of entities"/>
            <flag-bit name='military_unit_property' comment="Probably some property only those have. All present in the selection, though"/>
            <flag-bit name='unk26' comment="Set for a significant number of entities"/>
        </bitfield>

        <stl-vector name='guild_professions' since='v0.47.01' comment="Only seen 1, and only for guilds">
            <pointer>
                <int32_t name='id' comment="Guess, but all are 0, and it matches the standard pattern"/>
                <enum name='profession' base-type='int16_t' type-name='profession'/>
            </pointer>
        </stl-vector>
        <stl-vector name='entity_links' pointer-type='entity_entity_link'/>
        <stl-vector name='site_links' pointer-type='entity_site_link'/>

        <stl-vector name='histfig_ids' type-name='int32_t' ref-target='historical_figure'/>

        <stl-vector name='populations' type-name='int32_t' ref-target='entity_population'
                    comment='1st entry copies to unit.population_id for Adventurer?'/>

        <stl-vector name='nemesis_ids' type-name='int32_t' ref-target='nemesis_record'/>

        <compound name='resources'>
            <stl-vector name='digger_type' type-name='int16_t' ref-target='itemdef_weaponst'/>
            <stl-vector name='weapon_type' type-name='int16_t' ref-target='itemdef_weaponst'/>
            <stl-vector name='training_weapon_type' type-name='int16_t' ref-target='itemdef_weaponst'/>
            <stl-vector name='armor_type' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='ammo_type' type-name='int16_t' ref-target='itemdef_ammost'/>
            <stl-vector name='helm_type' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='gloves_type' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='shoes_type' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='pants_type' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='shield_type' type-name='int16_t' ref-target='itemdef_shieldst'/>
            <stl-vector name='trapcomp_type' type-name='int16_t' ref-target='itemdef_trapcompst'/>
            <stl-vector name='toy_type' type-name='int16_t' ref-target='itemdef_toyst'/>
            <stl-vector name='instrument_type' type-name='int16_t' ref-target='itemdef_instrumentst'/>
            <stl-vector name='siegeammo_type' type-name='int16_t' ref-target='itemdef_siegeammost'/>
            <stl-vector name='tool_type' type-name='int16_t' ref-target='itemdef_toolst'/>
            <stl-vector name='unk_1' type-name='int32_t' since='v0.42.01'/>

            <compound name='metal'>
                <compound name='pick' type-name='material_vec_ref'/>
                <compound name='weapon' type-name='material_vec_ref'/>
                <compound name='ranged' type-name='material_vec_ref'/>
                <compound name='ammo' type-name='material_vec_ref'/>
                <compound name='ammo2' type-name='material_vec_ref' comment='maybe intended for siege ammo'/>
                <compound name='armor' type-name='material_vec_ref' comment='also instruments, toys, and tools'/>
                <compound name='anvil' type-name='material_vec_ref'/>
            </compound>

            <compound name='organic'>
                <compound name='leather' type-name='material_vec_ref'/>
                <compound name='parchment' type-name='material_vec_ref' since='v0.42.01'/>
                <compound name='fiber' type-name='material_vec_ref'/>
                <compound name='silk' type-name='material_vec_ref'/>
                <compound name='wool' type-name='material_vec_ref'/>
                <compound name='wood' type-name='material_vec_ref'/>
            </compound>

            <stl-vector name='metals' type-name='int32_t' ref-target='inorganic_raw' comment='bars'/>
            <stl-vector name='stones' type-name='int32_t' ref-target='inorganic_raw' comment='boulders and blocks'/>
            <stl-vector name='gems' type-name='int32_t' ref-target='inorganic_raw' comment='small and large cut'/>

            <compound name='refuse'>
                <compound name='bone' type-name='material_vec_ref'/>
                <compound name='shell' type-name='material_vec_ref'/>
                <compound name='pearl' type-name='material_vec_ref'/>
                <compound name='ivory' type-name='material_vec_ref'/>
                <compound name='horn' type-name='material_vec_ref'/>
            </compound>

            <compound name='misc_mat'>
                <compound name='others' type-name='material_vec_ref' comment='amber and coral'/>
                <compound name='glass' type-name='material_vec_ref'/>
                <compound name='sand' type-name='material_vec_ref'/>
                <compound name='clay' type-name='material_vec_ref'/>
                <compound name='crafts' type-name='material_vec_ref'/>
                <compound name='glass_unused' type-name='material_vec_ref' comment='used for vial extracts on embark'/>
                <compound name='barrels' type-name='material_vec_ref' comment='also buckets, splints, and crutches'/>
                <compound name='flasks' type-name='material_vec_ref'/>
                <compound name='quivers' type-name='material_vec_ref'/>
                <compound name='backpacks' type-name='material_vec_ref'/>
                <compound name='cages' type-name='material_vec_ref'/>
                <compound name='wood2' type-name='material_vec_ref' since='v0.34.01'/>
                <compound name='rock_metal' type-name='material_vec_ref' since='v0.34.01'/>
                <compound name='booze' type-name='material_vec_ref'/>
                <compound name='cheese' type-name='material_vec_ref'/>
                <compound name='powders' type-name='material_vec_ref'/>
                <compound name='extracts' type-name='material_vec_ref'/>
                <compound name='meat' type-name='material_vec_ref'/>
            </compound>

            <stl-vector name='fish_races' type-name='int32_t' ref-target='creature_raw'/>
            <stl-vector name='fish_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.fish_races[$._key]'/>

            <stl-vector name='egg_races' type-name='int32_t' ref-target='creature_raw'/>
            <stl-vector name='egg_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.egg_races[$._key]'/>

            <compound name='plants' type-name='material_vec_ref'/>

            <stl-vector name='tree_fruit_plants' type-name='int32_t' ref-target='plant_raw'/>
            <stl-vector name='tree_fruit_growths' type-name='int16_t' ref-target='plant_growth' aux-value='$$._parent.tree_fruit_plants[$._key]'/>

            <stl-vector name='shrub_fruit_plants' type-name='int32_t' ref-target='plant_raw'/>
            <stl-vector name='shrub_fruit_growths' type-name='int16_t' ref-target='plant_growth' aux-value='$$._parent.shrub_fruit_plants[$._key]'/>

            <compound name='seeds' type-name='material_vec_ref'/>

            <compound name='wood_products' comment='lye, charcoal, potash, pearlash, and coke'>
                <stl-vector name='item_type'>
                    <enum base-type='int16_t' type-name='item_type'/>
                </stl-vector>
                <stl-vector type-name='int16_t' name='item_subtype'/>
                <compound name='material' type-name='material_vec_ref'/>
            </compound>

            <compound name='animals'>
                <stl-vector name='pet_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='wagon_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='pack_animal_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='wagon_puller_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='mount_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='minion_races' type-name='int32_t' ref-target='creature_raw'/>
                <stl-vector name='exotic_pet_races' type-name='int32_t' ref-target='creature_raw'/>

                <stl-vector name='pet_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.pet_races[$._key]'/>
                <stl-vector name='wagon_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.wagon_races[$._key]'/>
                <stl-vector name='pack_animal_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.pack_animal_races[$._key]'/>
                <stl-vector name='wagon_puller_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.wagon_puller_races[$._key]'/>
                <stl-vector name='mount_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.mount_races[$._key]'/>
                <stl-vector name='minion_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.minion_races[$._key]'/>
                <stl-vector name='exotic_pet_castes' type-name='int16_t' ref-target='caste_raw' aux-value='$$._parent.unk728_races[$._key]'/>
            </compound>

            <stl-vector name='meat_fish_recipes' pointer-type='entity_recipe'/>
            <stl-vector name='other_recipes' pointer-type='entity_recipe'/>

            <static-array name='unk13' count='3' comment='in 0.23, these were material/matgloss pairs, never used for anything'>
                <int16_t name='unk1' init-value='-1'/>
                <int32_t name='unk2'/>
            </static-array>

            <stl-vector name='unk14' pointer-type='item' comment='in 0.23, items that would be equipped by the arriving King, never used'/>

            <int16_t name='unk15a' comment='in 0.23, minimum temperature'/>
            <int16_t name='unk15b' comment='in 0.23, maximum temperature'/>

            <static-array name='ethic' count='22' index-enum='ethic_type'>
                <enum base-type='int16_t' type-name='ethic_response'/>
            </static-array>

            <static-array name='values' type-name='int32_t' count='64' index-enum='value_type'/>

            <int32_t name='unk_2' since='v0.42.01'/>
            <static-array name='permitted_skill' type-name='bool' index-enum='job_skill' count='147'/>

            <stl-vector type-name='int16_t' name='art_image_types' comment='0 = civilization symbol'/>
            <stl-vector type-name='int32_t' name='art_image_ids'/>
            <stl-vector type-name='int16_t' name='art_image_subids'/>
            <stl-vector name='color_ref_type'>
                <enum type-name='general_ref_type' base-type='int8_t'/>
            </stl-vector>
            <stl-vector name='foreground_color_curses'>
                <enum type-name='curses_color' base-type='int8_t'/>
            </stl-vector>
            <stl-vector name='foreground_color_curses_bright' type-name='bool'/>
            <stl-vector name='background_color_curses'>
                <enum type-name='curses_color' base-type='int8_t'/>
            </stl-vector>
            <stl-vector name='foreground_color' type-name='int16_t' ref-target='descriptor_color' comment="foreground color used for the entity symbol in legends mode and the historical maps."/>
            <stl-vector name='background_color' type-name='int16_t' ref-target='descriptor_color' comment="background color used for the entity symbol in legends mode and the historical maps."/>
        </compound>

        <stl-vector name='uniforms' pointer-type='entity_uniform'/>
        <int32_t name='next_uniform_id'/>

        <compound name='relations'>
            <stl-vector name='known_sites' type-name='int32_t' ref-target='world_site' comment="only civs and site government. Fresh player site government has empty vector"/>
            <stl-vector name='deities' type-name='int32_t' ref-target='historical_figure'/>
            <stl-vector name='worship' type-name='int32_t' comment="Same length as deities(?). Some kind of relationship strength?"/>
            <stl-vector name='belief_systems' type-name='int32_t' ref-target="belief_system" comment="In Religion type entities established by prophets after having developed their own belief system, the ID of this belief system is contained here."/>
            <stl-vector name='constructions' comment="only civs. Usually pairs for source/destination, with destination lacking path and construction. Construction and second entry can be lacking when destination lost(construction destroyed as well?). Also seen only source entry">
                <pointer>
                    <compound name='path' type-name='coord2d_path' comment="set only for the first source/destination/construction entry in pairs"/>
                    <int32_t name='source_site' ref-target='world_site'/>
                    <int32_t name='destination_site' ref-target='world_site'/>
                    <stl-vector name='construction' ref-target='construction' type-name='int32_t' comment="set only for the first (source) entry in pairs"/>
                    <int16_t name='unk_1' comment="0 and 1 seen, paired with same value in the next field"/>
                    <int16_t name='unk_2' comment="0 and 1 seen"/>
                </pointer>
            </stl-vector>

            <stl-vector name='diplomacy'> sorted by group_id
                <pointer>
                    <int32_t name='group_id' ref-target='historical_entity'/>
                    <int16_t name='relation' comment="only 1 and 5 are 'hostile' (from viewscreen_unitlistst::render). Seems to be range 0-5, 2 not seen. 0:neutral/currently not at war, 3:parent->child, 4:child->parent, 1/5 both 'WAR' pre embark"/>
                    <int32_t name='war_event_collection' ref-target='history_event_collection' comment="always and only with relation = 1/5"/>
                    <stl-vector name='historic_events' type-name='int32_t' ref-target='history_event'/>
                    <stl-vector name='historic_events_collection' type-name='int32_t' ref-target='history_event_collection' comment="seen with war_event_collection set"/>
                    <int32_t name='unk_1' comment="0, 1, 4 seen. Non zero seen with relation 0/1"/>
                    <enum base-type='int32_t' type-name='season' name='tribute_season'/>
                </pointer>
            </stl-vector>

            <int16_t name='unk33' init-value='0' comment="Non zero seen only on site governments (not all) and one nomadic group. Small values"/>
            <stl-vector name='unk34a' type-name='int16_t' comment="same length as unk34b and unk34c"/>
            <stl-vector name='unk34b' type-name='int16_t'/>
            <stl-vector name='unk34c' type-name='int32_t'/>
            <stl-vector name='position' type-name='int32_t' comment="position index (not id)"/>
            <stl-vector name='official' type-name='int32_t' ref-target='historical_figure' comment="holder of office of corresponding position index"/>
        </compound>

        <compound name='positions'>
            <stl-vector name='own' pointer-type='entity_position'/>
            <stl-vector name='site' pointer-type='entity_position'/>
            <stl-vector name='conquered_site' pointer-type='entity_position'/>

            <int32_t name='next_position_id'/>

            <stl-vector name='assignments' pointer-type='entity_position_assignment'/>

            <int32_t name='next_assignment_id'/>

            <stl-vector name='unk_v40_1' pointer-type='entity_position_assignment' since='v0.40.01'/>
            <stl-vector name='unk_v40_2' pointer-type='entity_position_assignment' since='v0.40.01'/>
            <stl-vector name='unk_v40_3' pointer-type='entity_position_assignment' since='v0.40.01'/>
            <stl-vector name='unk_v40_4' pointer-type='entity_position_assignment' since='v0.40.01'/>
            <stl-vector name='unk_v40_5' pointer-type='entity_position_assignment' since='v0.40.01'/>
        </compound>

        <compound name='tissue_styles'>
            <stl-vector name='all' pointer-type='entity_tissue_style'/>
            <int32_t name='next_style_id'/>
        </compound>

        <stl-vector name='squads' type-name='int32_t' ref-target='squad'/>

        <compound name='unknown1d' comment='related to founding sites?'>
            <int32_t name='year' init-value='-1'/>
            <stl-vector name='unk43' type-name='int32_t' comment='empty'/>
            <int32_t name='unk44'/>
            <int32_t name='unk44a' since='v0.34.01' comment='appears to be a class with a constructor?'/>
            <static-array name='unk44b' count='15' type-name='int32_t' since='v0.34.01'/>
        </compound>

        <pointer name='training_knowledge' since='v0.34.06'>
            <stl-vector name="level" index-refers-to='(find-instance $creature_raw $)'>
                <enum base-type='int32_t' type-name='training_knowledge_level'/>
            </stl-vector>
            <stl-vector name="unk_10" index-refers-to='(find-instance $creature_raw $)'>
                <int32_t/>
            </stl-vector>
        </pointer>

        <stl-vector name='events' pointer-type='entity_event'/>

        <int32_t name='unk_v40_1a' since='v0.40.01'/>
        <int32_t name='unk_v40_1b' since='v0.40.01'/>
        <int32_t name='unk_v40_1c' since='v0.40.01'/>
        <int32_t name='unk_v40_1d' since='v0.40.01'/>
        <int32_t name='unk_v40_1e' since='v0.40.01'/>

        <stl-vector name='performed_poetic_forms' type-name='int32_t' ref-target='poetic_form' since='v0.42.01'/>
        <stl-vector name='performed_musical_forms' type-name='int32_t' ref-target='musical_form' since='v0.42.01'/>
        <stl-vector name='performed_dance_forms' type-name='int32_t' ref-target='dance_form' since='v0.42.01'/>
        <stl-vector name='major_civ_number' type-name='int32_t' since='v0.42.01' comment="Single item increasing from 0 linearly as major race civs are created, i.e. all civs except cavern and Kobold, but including spire breach released goblin ones"/>
        <stl-vector name='major_civ_number_2' type-name='int32_t' since='v0.42.01' comment="Identical to major_civ_number on the same entries. Presumably some properties only major civs have, such as e.g. accepting outsiders as members, engage in conquest, etc."/>
        <stl-vector name='unk_1' type-name='int32_t' since='v0.42.01' comment="Only on major civs, but not all"/>
        <pointer name='occasion_info' type-name='entity_occasion_info' comment="only seen on Civilization, SiteGovernment, and Religion, but not all"/>

        <stl-vector name='artifact_claims' pointer-type='artifact_claim' since='v0.44.01' comment='sorted on artifact id'/>

        <stl-vector name='honors' pointer-type='honors_type' since='v0.47.01' comment='Only merc companies. Matches #Honors groups in Legends Viewer'/>
        <int32_t name='next_honors_index' since='v0.47.01'/>

        <int32_t name='equipment_purchases' since='v0.47.01' comment="only seen on military units"/>
        <int32_t name='attack' since='v0.47.01' comment="only seen on military units"/>
        <int32_t name='total_battles' since='v0.47.01' comment="attacks + defenses. Only seen on military units"/>

        <pointer name='unk_v47_1' since='v0.47.01'>
            <stl-vector name='unk_v47_1' pointer-type='entity_unk_v47_1'/>
            <stl-vector name='foiled_plot_agreements' type-name='int32_t' ref-target='agreement' comment="Mostly a guess. The foiled plot agreement out of 2 appeared here"/>
            <stl-vector name='unk_v47_3' type-name='int32_t'/>
            <int32_t name='unk_v47_4' comment="0 and 1 seen, but definitely int32"/>
        </pointer>

        <stl-vector name='divination_sets' type-name='int32_t' since='v0.47.01' comment="Guess. Only on religions, but not all. start at 350 and added sequentially in Religion formation order. Last religion # = last divination set index"/>

        <int32_t name='founding_site_government' ref-target='historical_entity' since='v0.47.01' comment="All cases examined refered to site government of site of founding. Perf troop and merc lack site info but seems reasonable."/>

        <stl-vector name='meeting_events' pointer-type='meeting_event'/>
        <pointer name='activity_stats' type-name='entity_activity_statistics'/>

        <compound name='unknown1e'>
            <int16_t name='unk47' comment='in 0.23, last communicate season'/>
            <int32_t name='unk48' comment='in 0.23, last communicate year'/>

            <int32_t name='imports_from'/>
            <int32_t name='offerings_from'/>
            <int32_t name='offerings_recent' comment='since the last migrant wave or diplomat visit'/>
            <static-array name='offerings_history' count='10' type-name='int32_t' comment='rotated yearly at 15th of Timber'/>
            <int32_t name='unk49e' comment='in 0.23, hostility level - determined siege size, had a chance to reset to 1'/>
            <int32_t name='unk49f' comment='in 0.23, determined siege size'/>
            <int32_t name='unk_1' since='v0.40.01'/>
            <int32_t name='unk_2' since='v0.47.01'/>
            <int32_t name='unk_3' since='v0.47.01'/>
        </compound>

        <stl-vector name='armies' pointer-type='army' since='v0.40.01'/>
        <stl-vector name='army_controllers' pointer-type='army_controller' since='v0.40.01'/>
        <stl-vector name='hist_figures' pointer-type='historical_figure'/>
        <stl-vector name='nemesis' pointer-type='nemesis_record'/>

        <compound name='derived_resources'>
            <compound name='mill_cookable' type-name='material_vec_ref'/>
            <compound name='mill_dye' type-name='material_vec_ref'/>

            <stl-vector name='armor_leather' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_chain' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_plate' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_under' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_over' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='armor_cover' type-name='int16_t' ref-target='itemdef_armorst'/>
            <stl-vector name='pants_leather' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_chain' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_plate' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_under' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_over' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='pants_cover' type-name='int16_t' ref-target='itemdef_pantsst'/>
            <stl-vector name='helm_leather' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_chain' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_plate' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_under' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_over' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='helm_cover' type-name='int16_t' ref-target='itemdef_helmst'/>
            <stl-vector name='shoes_leather' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_chain' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_plate' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_under' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_over' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='shoes_cover' type-name='int16_t' ref-target='itemdef_shoesst'/>
            <stl-vector name='gloves_leather' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_chain' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_plate' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_under' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_over' type-name='int16_t' ref-target='itemdef_glovesst'/>
            <stl-vector name='gloves_cover' type-name='int16_t' ref-target='itemdef_glovesst'/>
        </compound>
        <static-array name='assignments_by_type' count='42'
                      index-enum='entity_position_responsibility'>
            <stl-vector pointer-type='entity_position_assignment'/>
        </static-array>

        <compound name='claims'>
            <compound name='areas' type-name='coord2d_path'
                      comment='in world_data.entity_claims1'/>

            <compound name='unk1' type-name='coord2d_path'/>
            <compound name='border' type-name='coord2d_path'/>
        </compound>

        <stl-vector name='children' type-name='int32_t' ref-target='historical_entity'
                    comment='includes self'/>

        <compound name='unknown2'>
            <int32_t name='metal_proficiency'
                comment='best IMPACT_FRACTURE/10000 + MAX_EDGE/1000 for weapon mats plus best IMPACT_FRACTURE/10000 for armor mats'/>
            <stl-vector name='weapon_proficiencies' type-name='job_skill'/>

            <pointer name='resource_allotment' type-name='resource_allotment_data' comment="Only for SiteGovernment, but not all"/>
            <stl-vector name='unk_1' since='v0.42.01' pointer-type='poetic_form'/>
            <stl-vector name='unk_2' since='v0.42.01' pointer-type='musical_form'/>
            <stl-vector name='unk_3' since='v0.42.01' pointer-type='dance_form'/>
            <stl-vector name='unk_4' since='v0.42.01' pointer-type='written_content'/>
            <int16_t name='unk12a' init-value='-1'/>
            <int16_t name='unk12b' comment='uninitialized'/>
            <bool name='unk13' comment='0'/>
            <pointer name='landmass' type-name='world_landmass'/>                      -- Civ entities. Nil for sites.
            <pointer name='region' type-name='world_region' has-bad-pointers='true'/>  -- Civ entities. Non pointers for sites.
            <int32_t name='unk16' comment='uninitialized'/>
            <int16_t name='unk17' comment='0'/>

            <stl-vector name='unk18' type-name='int32_t' comment='used during world gen'/>
            <stl-vector name='unk19' type-name='int16_t' comment='used during world gen'/>

            <int16_t name='unk20' comment='0'/>
            <int32_t name='unk21' comment='0'/>
            <int32_t name='unk22' comment='0'/>
            <int32_t name='unk23' comment='0'/>

            <stl-vector name='unk24' type-name='int32_t' comment='used during world gen'/>
            <stl-vector name='unk25' type-name='int32_t' comment='used during world gen'/>

            <int32_t name='unk_9C'/>
            <int32_t name='unk_A0'/>
            <int32_t name='unk_A4'/>
            <int32_t name='unk_A8'/>
            <int32_t name='unk_AC'/>
            <int32_t name='unk_B0'/>
            <int32_t name='unk_B4'/>
            <int32_t name='unk_B8'/>
            <int32_t name='unk_BC'/>
            <int32_t name='unk_C0'/>

            <int32_t name='unk_5' since='v0.47.01'/>?
            <int32_t name='unk_6' since='v0.47.01'/>?
            <int32_t name='unk_7' since='v0.47.01'/>?

            <static-array name='unk26a' count='38' type-name='int32_t'/>
            <static-array name='unk26b' count='38' type-name='int32_t'/>
            <static-array name='unk26c' count='38' type-name='int32_t'/>
            <static-array name='unk26d' count='38' type-name='int32_t'/>
            <static-array name='unk26e' count='15' type-name='int32_t'/>

            <stl-vector name='unk28'>
                <pointer>
                    <int32_t name='unk_1'/>
                    <int32_t name='unk_2'/>
                    <int32_t name='unk_3'/>
                </pointer>
            </stl-vector>
            <int32_t name='unk_8' since='v0.47.01'/>?
            <stl-vector name='unk29' since='v0.34.01'>
                <pointer>
                    <int32_t name='unk_1'/>
                    <stl-vector name='unk_2' type-name='int32_t'/>
                    <int32_t name='unk_3'/>
                </pointer>
            </stl-vector>
            <int32_t name='unk_9' since='v0.47.01'/>
            <int32_t name='unk_10' since='v0.47.01'/>
            <int32_t name='unk_11' since='v0.47.01'/>
        </compound>
    </struct-type>

    <struct-type type-name='entity_tissue_style' key-field='id'>
        <code-helper name='describe'>$.name</code-helper>
        <code-helper name='find-instance'>
            (find-by-id $(find-instance $historical_entity $$).tissue_styles.all $id $)
        </code-helper>

        <stl-string name='name'/>
        <stl-vector name='preferred_shapings' type-name='int16_t'/>
        <stl-vector name='unk_1' type-name='int32_t' comment='maybe probability?'/>
        <int32_t name='maintain_length_min'/>
        <int32_t name='maintain_length_max'/>
        <int32_t name='id'/>
    </struct-type>

    <enum-type type-name='training_knowledge_level' base-type='int32_t'>
        <enum-item name='None'/>
        <enum-item name='FewFacts'/>
        <enum-item name='GeneralFamiliarity'/>
        <enum-item name='Knowledgeable'/>
        <enum-item name='Expert'/>
        <enum-item name='Domesticated'/>
    </enum-type>

    <enum-type type-name='entity_position_flags'>
        <enum-item name='IS_LAW_MAKER'/>
        <enum-item name='ELECTED'/>
        <enum-item name='DUTY_BOUND'/>
        <enum-item name='MILITARY_SCREEN_ONLY'/>
        <enum-item name='GENDER_MALE'/>
        <enum-item name='GENDER_FEMALE'/>
        <enum-item name='SUCCESSION_BY_HEIR'/>
        <enum-item name='HAS_RESPONSIBILITIES'/>

        <enum-item name='FLASHES'/>
        <enum-item name='BRAG_ON_KILL'/>
        <enum-item name='CHAT_WORTHY'/>
        <enum-item name='DO_NOT_CULL'/>
        <enum-item name='KILL_QUEST'/>
        <enum-item name='IS_LEADER'/>
        <enum-item name='IS_DIPLOMAT'/>
        <enum-item name='EXPORTED_IN_LEGENDS'/>

        <enum-item name='DETERMINES_COIN_DESIGN'/>
        <enum-item name='ACCOUNT_EXEMPT'/>
        <enum-item name='unk_12'/>
        <enum-item name='unk_13'/>
        <enum-item name='COLOR'/>
        <enum-item name='RULES_FROM_LOCATION'/>
        <enum-item name='MENIAL_WORK_EXEMPTION'/>
        <enum-item name='MENIAL_WORK_EXEMPTION_SPOUSE'/>

        <enum-item name='SLEEP_PRETENSION'/>
        <enum-item name='PUNISHMENT_EXEMPTION'/>
        <enum-item name='unk_1a'/>
        <enum-item name='unk_1b'/>
        <enum-item name='QUEST_GIVER'/>
        <enum-item name='SPECIAL_BURIAL'/>
        <enum-item name='REQUIRES_MARKET'/>
        <enum-item name='unk_1f'/>
    </enum-type>

    <struct-type type-name='entity_position' key-field='id'>
        <stl-string name='code'/>
        <int32_t name='id'/>

        <code-helper name='describe'>$.code</code-helper>

        <df-flagarray name='flags' index-enum='entity_position_flags'/>

        <stl-vector name='allowed_creature' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='allowed_class' pointer-type='stl-string'/>

        <stl-vector name='rejected_creature' type-name='int32_t' ref-target='creature_raw'/>
        <stl-vector name='rejected_class' pointer-type='stl-string'/>

        <static-array type-name='stl-string' name='name' count='2'/>
        <static-array type-name='stl-string' name='name_female' count='2'/>
        <static-array type-name='stl-string' name='name_male' count='2'/>
        <static-array type-name='stl-string' name='spouse' count='2'/>
        <static-array type-name='stl-string' name='spouse_female' count='2'/>
        <static-array type-name='stl-string' name='spouse_male' count='2'/>
        <static-array type-name='stl-string' name='squad' count='2'/>
        <stl-string name='land_name'/>

        <int16_t name='squad_size'/>

        <stl-vector name='commander_id' type-name='int32_t'/>
        <stl-vector name='commander_civ' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='commander_types' type-name='int16_t'/>

        <int16_t name='land_holder'/>
        <int16_t name='requires_population'/>

        <int16_t name='unk_1' since='v0.34.01'/>

        <int32_t name='precedence' init-value='30001'/>
        <int32_t name='replaced_by' init-value='-1'/>
        <int16_t name='number' init-value='1'/>

        <stl-vector name='appointed_by' type-name='int32_t'/>
        <stl-vector name='appointed_by_civ' type-name='int32_t' ref-target='historical_entity'/>
        <stl-vector name='succession_by_position' type-name='int32_t'/>

        <static-array type-name='bool' name='responsibilities' count='42' index-enum='entity_position_responsibility'/>
        <static-array type-name='int16_t' name='color' count='3'/>

        <int32_t name='required_boxes'/>
        <int32_t name='required_cabinets'/>
        <int32_t name='required_racks'/>
        <int32_t name='required_stands'/>
        <int32_t name='required_office'/>
        <int32_t name='required_bedroom'/>
        <int32_t name='required_dining'/>
        <int32_t name='required_tomb'/>
        <int32_t name='mandate_max'/>
        <int32_t name='demand_max'/>
        <int32_t name='unk_2' init-value='30001' since='v0.47.01'/>
    </struct-type>

    <struct-type type-name='entity_position_assignment' key-field='id'>
        <int32_t name='id'/>

        <code-helper name='describe'>
            (describe-obj $.position_id.refers-to)
            (awhen $.histfig.ref-target
              (describe-obj it))
        </code-helper>

        <int32_t name='histfig' ref-target='historical_figure'/>
        <int32_t name='histfig2' ref-target='historical_figure' since='v0.40.01'/>
        <int32_t name='position_id'
                 refers-to='(find-by-id $$._global._parent._global.positions.own $id $)'
                 comment='position within relevant entity'/>

        <df-flagarray name='flags'/>
        <int32_t name='squad_id' ref-target='squad'/>
        <int32_t name='unk_1' init-value='-1'/>
        <int32_t name='unk_2' init-value='-1'/>
        <int32_t name='unk_3' init-value='-1' since='v0.40.01'/>
        <int32_t name='unk_4' init-value='-1' since='v0.40.01'/>
        <stl-vector name='unk_5' since='v0.40.01' comment='not saved'/>
        <int32_t name='unk_6' since='v0.47.01' comment='unknown size, not initialized or saved'/>
    </struct-type>

    <enum-type type-name='entity_material_category' base-type='int16_t'>
        <enum-item name='None' value='-1'/>
        <enum-item name='Clothing' comment='cloth or leather'/>
        <enum-item name='Leather' comment='organic.leather'/>
        <enum-item name='Cloth' comment='any cloth'/>
        <enum-item name='Wood' comment='organic.wood, used for training weapons'/>
        <enum-item name='Crafts' comment='misc_mat.crafts'/>
        <enum-item name='Stone' comment='stones'/>
        <enum-item name='Improvement' comment='misc_mat.crafts'/>
        <enum-item name='Glass' comment='misc_mat.glass_unused, used for extract vials'/>
        <enum-item name='Wood2' comment='misc_mat.barrels, also used for buckets'/>
        <enum-item name='Bag' comment='cloth/leather'/>
        <enum-item name='Cage' comment='misc_mat.cages'/>
        <enum-item name='WeaponMelee' comment='metal.weapon'/>
        <enum-item name='WeaponRanged' comment='metal.ranged'/>
        <enum-item name='Ammo' comment='metal.ammo'/>
        <enum-item name='Ammo2' comment='metal.ammo2'/>
        <enum-item name='Pick' comment='metal.pick'/>
        <enum-item name='Armor' comment='metal.armor, also used for shields, tools, instruments, and toys'/>
        <enum-item name='Gem' comment='gems'/>
        <enum-item name='Bone' comment='refuse.bone'/>
        <enum-item name='Shell' comment='refuse.shell'/>
        <enum-item name='Pearl' comment='refuse.pearl'/>
        <enum-item name='Ivory' comment='refuse.ivory'/>
        <enum-item name='Horn' comment='refuse.horn'/>
        <enum-item name='Other' comment='misc_mat.others'/>
        <enum-item name='Anvil' comment='metal.anvil'/>
        <enum-item name='Booze' comment='misc_mat.booze'/>
        <enum-item name='Metal' comment='metals with ITEMS_HARD, used for chains'/>
        <enum-item name='PlantFiber' comment='organic.fiber'/>
        <enum-item name='Silk' comment='organic.silk'/>
        <enum-item name='Wool' comment='organic.wool'/>
        <enum-item name='Furniture' comment='misc_mat.rock_metal'/>
        <enum-item name='MiscWood2' comment='misc_mat.wood2'/>
    </enum-type>

    <struct-type type-name='entity_uniform_item'>
        <int8_t name='random_dye'/>
        <int8_t name='armorlevel'/>
        <int16_t name='item_color' ref-target='descriptor_color'/>
        <int32_t name='art_image_id'/>
        <int16_t name='art_image_subid'/>
        <int16_t name='image_thread_color' ref-target='descriptor_color'/>
        <enum base-type='int16_t' name='image_material_class' type-name='entity_material_category'/>
        <int16_t name='maker_race'/>
        <bitfield name="indiv_choice" type-name='uniform_indiv_choice'/>
        <int16_t name="mattype" ref-target='material' aux-value='$$.matindex'/>
        <int32_t name="matindex"/>
        <enum base-type='int16_t' name="material_class" type-name='entity_material_category'/>
    </struct-type>

    <struct-type type-name='entity_uniform' key-field='id'>
        <int32_t name="id"/>
        <int16_t name="unk_4"/>

        <code-helper name='describe'>
            (describe-obj $.name)
        </code-helper>

        <static-array name='uniform_item_types' count='7' index-enum='uniform_category'>
            <stl-vector>
                <enum base-type='int16_t' type-name='item_type'/>
            </stl-vector>
        </static-array>

        <static-array name='uniform_item_subtypes' count='7' index-enum='uniform_category'>
            <stl-vector>
                <int16_t refers-to='(item-subtype-target $$._parent._parent._parent.uniform_item_types[$$._parent._key][$$._key] $)'/>
            </stl-vector>
        </static-array>

        <static-array name='uniform_item_info' count='7' index-enum='uniform_category'>
            <stl-vector pointer-type='entity_uniform_item'/>
        </static-array>

        <stl-string name="name"/>

        <bitfield name='flags' type-name='uniform_flags'/>
    </struct-type>

    <enum-type type-name='entity_event_type'>
        <enum-item name='invasion'/>
        <enum-item name='abduction'/>
        <enum-item name='incident'/>
        <enum-item name='occupation'/>
        <enum-item name='beast'/>
        <enum-item name='group'/>
        <enum-item name='harass'/>
        <enum-item name='flee'/>
        <enum-item name='abandon'/>
        <enum-item name='reclaimed'/>
        <enum-item name='founded'/>
        <enum-item name='reclaiming'/>
        <enum-item name='founding'/>
        <enum-item name='leave'/>
        <enum-item name='insurrection'/>
        <enum-item name='insurrection_end'/>
        <enum-item name='succession'/>
        <enum-item name='claim'/>
        <enum-item name='accept_tribute_offer'/>
        <enum-item name='refuse_tribute_offer'/>
        <enum-item name='accept_tribute_demand'/>
        <enum-item name='refuse_tribute_demand'/>
        <enum-item name='accept_peace_offer'/>
        <enum-item name='refuse_peace_offer'/>
        <enum-item name='cease_tribute_offer'/>
        <enum-item name='artifact_in_site'/>
        <enum-item name='artifact_in_subregion'/>
        <enum-item name='artifact_in_feature_layer'/>
        <enum-item name='artifact_in_inventory'/>
        <enum-item name='artifact_not_in_site'/>
        <enum-item name='artifact_not_in_subregion'/>
        <enum-item name='artifact_not_in_feature_layer'/>
        <enum-item name='artifact_not_in_inventory'/>
        <enum-item name='artifact_was_destroyed'/>
    </enum-type>

    <struct-type type-name='entity_event'>
        <compound name='data' is-union='true'>
            <compound name='invasion'>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='unk_1' comment="can't find match. not defender hf/nemesis, for instance"/>
                <int32_t name='attack_leader_hf' ref-target='historical_figure'/>
            </compound>
            <compound name='abduction'>
                <int32_t name='histfig_id' ref-target='historical_figure' comment='abductee'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='abductor_id' ref-target='historical_figure'/>
                <int32_t name='event' ref-target='history_event'/>
            </compound>
            <compound name='incident'>
                <int32_t name='unk_1'/>
                <int32_t name='incident_id' ref-target='incident'/>
            </compound>
            <compound name='occupation'>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
            </compound>
            <compound name='beast'>
                <int32_t name='histfig_id' ref-target='historical_figure'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='region_id' ref-target='world_region'/>
            </compound>
            <compound name='group'>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='site_id' ref-target='world_site'/>
            </compound>
            <compound name='harass'>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='unk_1'/>
            </compound>
            <compound name='flee'>
                <int32_t name='refugee_entity_id' ref-target='historical_entity'/>
                <int32_t name='from_site_id' ref-target='world_site'/>
                <int32_t name='army_entity_id' ref-target='historical_entity'/>
                <int32_t name='army_leader_hf_id' ref-target='historical_figure'/>
            </compound>
            <compound name='abandon'>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='parent_entity_id' ref-target='historical_entity'/>
            </compound>
            <compound name='reclaimed'>
                <int32_t name='behalf_entity_id' ref-target='historical_entity'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='reclaimer_entity_id' ref-target='historical_entity'/>
                <int32_t name='leader_hf' ref-target='historical_figure'/>
            </compound>
            <compound name='founded'>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='parent_entity_id' ref-target='historical_entity'/>
                <int32_t name='unk_1'/>
            </compound>
            <compound name='reclaiming'>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='unk_1'/>
                <int32_t name='first_settler_hf' ref-target='historical_figure' comment="strangely enough not expedition leader (settler #2), nor listed as member of site government"/>
            </compound>
            <compound name='founding'>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='region_id' ref-target='world_region'/>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
            </compound>
            <compound name='leave'>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='site_id' ref-target='world_site'/>
            </compound>
            <compound name='insurrection'>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='entity_id' ref-target='historical_entity'/>
            </compound>
            <compound name='insurrection_end'>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <enum name='result'>
                    <enum-item name='Overthrow'/>
                    <enum-item name='Failure'/>
                    <enum-item name='Crushing'/>
                </enum>
            </compound>
            <compound name='succession'>
                <int32_t name='histfig_id' ref-target='historical_figure'/>
                <int32_t name='former_histfig_id' ref-target='historical_figure'/>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='position_assignment_id' refers-to='$(find-entity $$._parent.entity_id).positions.assignments[$]'/>
            </compound>
            <compound name='claim'>
                <int32_t name='entity_id' ref-target='historical_entity'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='histfig_id' ref-target='historical_figure'/>
            </compound>
            <compound name='accept_tribute_offer'>
                <int32_t name='entity1_id' ref-target='historical_entity'/>
                <int32_t name='histfig1_id' ref-target='historical_figure'/>
                <int32_t name='entity2_id' ref-target='historical_entity'/>
                <int32_t name='histfig2_id' ref-target='historical_figure'/>
            </compound>
            <compound name='refuse_tribute_offer'>
                <int32_t name='entity1_id' ref-target='historical_entity'/>
                <int32_t name='histfig1_id' ref-target='historical_figure'/>
                <int32_t name='entity2_id' ref-target='historical_entity'/>
                <int32_t name='histfig2_id' ref-target='historical_figure'/>
            </compound>
            <compound name='accept_tribute_demand'>
                <int32_t name='entity1_id' ref-target='historical_entity'/>
                <int32_t name='histfig1_id' ref-target='historical_figure'/>
                <int32_t name='entity2_id' ref-target='historical_entity'/>
                <int32_t name='histfig2_id' ref-target='historical_figure'/>
            </compound>
            <compound name='refuse_tribute_demand'>
                <int32_t name='entity1_id' ref-target='historical_entity'/>
                <int32_t name='histfig1_id' ref-target='historical_figure'/>
                <int32_t name='entity2_id' ref-target='historical_entity'/>
                <int32_t name='histfig2_id' ref-target='historical_figure'/>
            </compound>
            <compound name='accept_peace_offer'>
                <int32_t name='entity1_id' ref-target='historical_entity'/>
                <int32_t name='histfig1_id' ref-target='historical_figure'/>
                <int32_t name='entity2_id' ref-target='historical_entity'/>
                <int32_t name='histfig2_id' ref-target='historical_figure'/>
            </compound>
            <compound name='refuse_peace_offer'>
                <int32_t name='entity1_id' ref-target='historical_entity'/>
                <int32_t name='histfig1_id' ref-target='historical_figure'/>
                <int32_t name='entity2_id' ref-target='historical_entity'/>
                <int32_t name='histfig2_id' ref-target='historical_figure'/>
            </compound>
            <compound name='cease_tribute_offer'>
                <int32_t name='entity1_id' ref-target='historical_entity'/>
                <int32_t name='histfig1_id' ref-target='historical_figure'/>
                <int32_t name='entity2_id' ref-target='historical_entity'/>
                <int32_t name='histfig2_id' ref-target='historical_figure'/>
            </compound>
            <compound name='artifact_in_site'>
                <int32_t name='artifact_id' ref-target='artifact_record'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='structure_id' ref-target='abstract_building'/>
                <int32_t name='unk_1' comment="looks uninitialized"/>
            </compound>
            <compound name='artifact_in_subregion'>
                <int32_t name='artifact_id' ref-target='artifact_record'/>
                <int32_t name='subregion_id' ref-target='world_region'/>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
            </compound>
            <compound name='artifact_in_feature_layer'>
                <int32_t name='artifact_id' ref-target='artifact_record'/>
                <int32_t name='feature_layer_id' ref-target='world_underground_region'/>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
            </compound>
            <compound name='artifact_in_inventory'>
                <int32_t name='artifact_id' ref-target='artifact_record'/>
                <int32_t name='hist_figure_id' ref-target='historical_figure'/>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
            </compound>
            <compound name='artifact_not_in_site'>
                <int32_t name='artifact_id' ref-target='artifact_record'/>
                <int32_t name='site_id' ref-target='world_site'/>
                <int32_t name='structure_id' ref-target='abstract_building'/>
                <int32_t name='unk_1'/>
            </compound>
            <compound name='artifact_not_in_subregion'>
                <int32_t name='artifact_id' ref-target='artifact_record'/>
                <int32_t name='subregion_id' ref-target='world_region'/>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
            </compound>
            <compound name='artifact_not_in_feature_layer'>
                <int32_t name='artifact_id' ref-target='artifact_record'/>
                <int32_t name='feature_layer_id' ref-target='world_underground_region'/>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
            </compound>
            <compound name='artifact_not_in_inventory'>
                <int32_t name='artifact_id' ref-target='artifact_record'/>
                <int32_t name='hist_figure_id' ref-target='historical_figure'/>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
            </compound>
            <compound name='artifact_destroyed'>
                <int32_t name='artifact_id' ref-target='artifact_record'/>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
                <int32_t name='unk_3'/>
            </compound>
        </compound>
        <int32_t name='unk_year' comment="often the same as the other year/tick. Start/stop time?"/>
        <int32_t name='unk_year_tick'/>
        <int32_t name="year"/>
        <int32_t name="year_tick"/>
        <int32_t name='unk_1'/>
        <enum name='type' type-name='entity_event_type'/>
    </struct-type>

    <struct-type type-name='agreement' key-field='id'
                 instance-vector='$global.world.agreements.all'>
        <int32_t name='id'/>
        <stl-vector name='parties' pointer-type='agreement_party'/>
        <int32_t name='next_party_id'/>
        <stl-vector name='details' pointer-type='agreement_details'/>
        <int32_t name='next_details_id'/>
        <int32_t name='unk_1'/>
        <int32_t name='unk_2'/>
        <bitfield name='flags' since='v0.42.01'>
            <flag-bit name='petition_not_accepted' comment='this gets unset by accepting a petition'/>
            <flag-bit name='convicted_accepted' comment="convicted for PositionCorruption/accepted for Location"/>
        </bitfield>
    </struct-type>

    <struct-type type-name='agreement_party' key-field='id'>
        <int32_t name='id'/>
        <stl-vector type-name='int32_t' name='histfig_ids' ref-target='historical_figure'/>
        <stl-vector type-name='int32_t' name='entity_ids' ref-target='historical_entity'/>
        <stl-vector name='unk_1'>
            <pointer>
                <int32_t name='unk_1'/>
                <int32_t name='unk_2'/>
                <int32_t name='year'/>
                <int32_t name='tick'/>
            </pointer>
        </stl-vector>
    </struct-type>

    <enum-type type-name='crime_type' base-type='int32_t'>
        <enum-item name='NONE' value='-1'/>
        <enum-item name='Bribery'/>
        <enum-item name='BringIntoNetwork'/>
        <enum-item name='Corruption'/>
        <enum-item name='Embezzlement'/>
    </enum-type>

    <enum-type type-name='agreement_details_type' base-type='int32_t'>
        <enum-item name='JoinParty'/>
        <enum-item name='DemonicBinding'/>
        <enum-item name='Residency'/>
        <enum-item name='Citizenship'/>
        <enum-item name='Parley'/>
        <enum-item name='PositionCorruption' comment="Embezzlement and accepting bribes seen. For own gain and for 'sponsor'"/>
        <enum-item name='PlotStealArtifact'/>
        <enum-item name='PromisePosition'/>
        <enum-item name='PlotAssassination'/>
        <enum-item name='PlotAbduct'/>
        <enum-item name='PlotSabotage'/>
        <enum-item name='PlotConviction'/>
        <enum-item name='Location'/>
        <enum-item name='PlotInfiltrationCoup'/>
        <enum-item name='PlotFrameTreason'/>
        <enum-item name='PlotInduceWar'/>
    </enum-type>

    <struct-type type-name='agreement_details' key-field='id'>
        <int32_t name='id'/>
        <int32_t name='year'/>
        <int32_t name='year_tick'/>
        <compound name='data' is-union='true'>
            <pointer name='JoinParty' type-name='agreement_details_data_join_party'/>
            <pointer name='DemonicBinding' type-name='agreement_details_data_demonic_binding'/>
            <pointer name='Residency' type-name='agreement_details_data_residency'/>
            <pointer name='Citizenship' type-name='agreement_details_data_citizenship'/>
            <pointer name='Parley' type-name='agreement_details_data_parley'/>
            <pointer name='PositionCorruption' type-name='agreement_details_data_position_corruption'/>
            <pointer name='PlotStealArtifact' type-name='agreement_details_data_plot_steal_artifact'/>
            <pointer name='PromisePosition' type-name='agreement_details_data_promise_position'/>
            <pointer name='PlotAssassination' type-name='agreement_details_data_plot_assassination'/>
            <pointer name='PlotAbduct' type-name='agreement_details_data_plot_abduct'/>
            <pointer name='PlotSabotage' type-name='agreement_details_data_plot_sabotage'/>
            <pointer name='PlotConviction' type-name='agreement_details_data_plot_conviction'/>
            <pointer name='Location' type-name='agreement_details_data_location'/>
            <pointer name='PlotInfiltrationCoup' type-name='agreement_details_data_plot_infiltration_coup'/>
            <pointer name='PlotFrameTreason' type-name='agreement_details_data_plot_frame_treason'/>
            <pointer name='PlotInduceWar' type-name='agreement_details_data_plot_induce_war'/>
        </compound>
        <enum name='type' base-type='int32_t' type-name='agreement_details_type'/>
    </struct-type>

    <struct-type type-name='agreement_details_data_join_party'>
        <enum name='reason' base-type='int32_t' type-name='history_event_reason'/>
        <int32_t name='member' ref-target='agreement_party'/>
        <int32_t name='party' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
        <int32_t name='entity' ref-target='historical_entity'/>
        <int32_t name='figure' ref-target='historical_figure'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_demonic_binding'>
        <enum name='reason' base-type='int32_t' type-name='history_event_reason'/>
        <int32_t name='demon' ref-target='agreement_party'/>
        <int32_t name='summoner' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
        <int32_t name='artifact' ref-target='artifact_record'/>
        <enum name='sphere' type-name='sphere_type'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_residency'>
        <enum name='reason' base-type='int32_t' type-name='history_event_reason'/>
        <int32_t name='applicant' ref-target='agreement_party'/>
        <int32_t name='government' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_citizenship'>
        <int32_t name='applicant' ref-target='agreement_party'/>
        <int32_t name='government' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_parley'>
        <int32_t name='unk_1'/>
        <int32_t name='party_id' ref-target='agreement_party'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_position_corruption'>
        <int32_t name='unk_1' comment="247-249 seen"/>
        <int32_t name='actor_index' comment="agreement.parties index"/>
        <int32_t name='influencer_index' init-value='-1' comment="agreement.parties index"/>
        <int32_t name='intermediary_index' init-value='-1' comment="agreement.parties index"/>
        <int32_t name='target_id' ref-target='historical_entity'/>
        <int32_t name='position_id' comment="position index in the entity's Own entity_position vector"/>
    </struct-type>
    <struct-type type-name='agreement_details_data_plot_steal_artifact'>
        <int32_t name='actor_index' comment="agreement.parties index"/>
        <int32_t name='influencer_index' comment="agreement.parties index"/>
        <int32_t name='intermediary_index' init-value='-1' comment="agreement.parties index"/>
        <int32_t name='artifact_id' ref-target='artifact_record'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_promise_position'>
        <int32_t name='beneficiary_index' comment="agreement.parties index"/>
        <int32_t name='actor_index' comment="agreement.parties index"/>
        <int32_t name='promisee_index' comment="agreement.parties index"/>
        <int32_t name='influencer_index' comment="agreement.parties index. May be swapped with beneficiary"/>
        <stl-vector name='intermediary_indices' type-name='int32_t' comment="agreement.parties index"/>
        <int32_t name='entity_id' ref-target='historical_entity'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_plot_assassination'>
        <int32_t name='actor_index' comment="agreement.parties index"/>
        <int32_t name='influencer_index' comment="agreement.parties index"/>
        <int32_t name='intermediary_index' init-value='-1' comment="agreement.parties index"/>
        <int32_t name='target_id' ref-target='historical_figure'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_plot_abduct'>
        <int32_t name='actor_index' comment="agreement.parties index"/>
        <int32_t name='intermediary_index' init-value='-1' comment="agreement.parties index"/>
        <int32_t name='target_id' ref-target='historical_figure'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_plot_sabotage'>
        <int32_t name='plotter_index' comment="agreement.parties index"/>
        <int32_t name='actor_index' comment="agreement.parties index"/>
        <int32_t name='intermediary_index' init-value='-1' comment="agreement.parties index. A guess, as no intermediary cases have been seen"/>
        <int32_t name='victim_id' ref-target='historical_figure'/>
        <int32_t name='unk_1' init-value='-1'/>
        <int32_t name='unk_2' init-value='-1'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_plot_conviction'>
        <stl-vector name='criminal_indices' type-name='int32_t' comment="agreement.parties index. All indices listed, regardless of confessions"/>
        <enum name='crime' type-name='crime_type'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_location'>
        <int32_t name='applicant' ref-target='agreement_party'/>
        <int32_t name='government' ref-target='agreement_party'/>
        <int32_t name='site' ref-target='world_site'/>
        <enum name='type' base-type='int32_t' type-name='abstract_building_type'/>
        <enum name='deity_type' type-name='temple_deity_type'/>
        <compound name='deity_data' type-name='temple_deity_data'/>
        <enum name='profession' type-name='profession'/>
        <int32_t name='tier' comment='1 = temple or guildhall, 2 = temple complex or grand guildhall; matches location_tier in abstract_building_contents'/>
    </struct-type>
    <struct-type type-name='agreement_details_data_plot_infiltration_coup'>
        <int32_t name='actor_index' comment="agreement.parties index"/>
        <int32_t name='influencer_index' comment="agreement.parties index"/>
        <int32_t name='target' comment="action=8: site id, 9: entity id"/>
        <int32_t name='action' comment="8 and 9 seen. Probably matches up with corresponding hist fig Infiltrate_Society action"/>
    </struct-type>
    <struct-type type-name='agreement_details_data_plot_frame_treason'>
        <int32_t name='actor_index' comment="agreement.parties index"/>
        <int32_t name='influencer_index' comment="agreement.parties index"/>
        <int32_t name='victim_id' ref-target='historical_figure'/>
        <int32_t name='fool_id' ref-target='historical_figure'/>
        <int32_t name='unk_1' ref-target='historical_figure' comment="only same as fool_id seen, and so may be swapped. Guess it would be sentencer if different from fooled hf, though"/>
    </struct-type>
    <struct-type type-name='agreement_details_data_plot_induce_war'>
        <int32_t name='actor_index' comment="agreement.parties index"/>
        <int32_t name='influencer_index' comment="agreement.parties index"/>
        <int32_t name='attacker' ref-target='historical_entity'/>
        <int32_t name='defender' ref-target='historical_entity'/>
    </struct-type>

</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
